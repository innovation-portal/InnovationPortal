[
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n        \n    \n\n\n\n      \n  Inspiration\n\nPaul said \"I really want to build a laminar fountain because they're cool!\n\nAnd then Jamie said \"That's boring though, let's make it interactive!\"\n\nWhat it does\n\nA laminar flow fountain produces a continual stream of water without turbulence. This allows it to do cool things like conduct light very well and continue along the same path when cut with a cutter. A strand of fiber optic cable is run from a high wattage LED to the fountain stream and this allows us to change the fountain color with a raspberry pi. So we hooked up a dance pad to the pi and wrote a simple game of simon as a demo. The fountain itself will change colors to cue the player, who will then play simon with the fountain. Here's a good video of what a well built LED laminar fountain looks like and can do. This is not our fountain, just a random youtube video: laminar fountain with LEDs!\n\nHow we built it\n\n1) Construct a laminar flow fountain (easier said than done- we tried this at a previous hackathon and BARELY got it finished in time and our first prototype demoed the concept but wasn't very impressive.)\n2) Program a Raspberry Pi (in Ruby) to read a usb dance pad and output a simon game to a high wattage LED.\n3) Attach a fiberoptic cable to the LED and feed it into the fountain flow. \n4) Bonus attachment not quite done: Laminar flow cutter mechanism built with solenoids driven by an H-bridge, also controlled by the pi. Thanks Bob!\n\nChallenges we ran into\n\nTime is a big challenge for us. Access to outdoor space, though happily accommodated by openworks, nevertheless meant we had to lug a lot of equipment back and forth in and out. The classrooms in Openworks aren't really ideal for this kind of hardware project and working in multiple spaces as needed again ate away at our time.  Access to tools and driving distances to our own workshops was a big challenge because none of us are Baltimore local. Additionally, all team members struggle with various levels of developmental disabilities and/or learning disabilities that make us the chaotic but amusing bunch that we always are but make it difficult for us to complete projects on time. I think time will always be a challenge for us at this kind of hackathon because of who we are and the physically large nature of our projects. \n\nA few other challenges: Our software guy, Bradford had to become proficient with several new Ruby libraries and gems in a very short period of time, and hobbling together affordable materials for the fountain itself was a matter of creativity and improvisation that put a heavy burden on our fabricator, Paul. The actual assembly of the fountain is a challenge as we troubleshoot broken seals and broken components.\n\nAccomplishments that we're proud of\n\nWe fried zero components this year! Nothing caught on fire! The new guy is a great coder and is very proud of his first GPIO project with the pi! The high wattage LED worked on the first try! \n\nWhat we learned\n\n1) Send someone to wake up Paul every morning. Also, next year consider lojaking Paul.\n2) Plumbing is hard.\n3) Water is wet.\n4) MORE POWER\n5) Okay maybe not that much power\n\nWhat's next for Dance Pad controlled Laminar Fountain\n\nIdeally we will add 3 more fountains so that each color has it's own fountain resulting in an overall much cooler display. We also want to write more games, including a traditional DDR style dancing game that creates a really dope light and water show. We'd like to eventually create a durable and contained semi-permanent installation for something like Artscape or Light City that the public can interact with. \n\n\n\n        \n    Built With\n\n    rubyraspberry-pithe-entire-plumbing-section-of-lowes\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "earlgrey", 
            "pgrodt", 
            "grythumn", 
            "puzzlemaker"
        ], 
        "name": "Dance Pad controlled Laminar Fountain", 
        "photo": null, 
        "slug": "dance-pad-controlled-laminar-fountain", 
        "tagline": "A laminar flow fountain gamified with LEDs and a dance pad.", 
        "tags": [
            "ruby", 
            "raspberry-pi", 
            "the-entire-plumbing-section-of-lowes"
        ], 
        "url": "https://devpost.com/software/dance-pad-controlled-laminar-fountain", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      A Bladow Wedding Present\n    \n  \n    \n    \n      Data Model\n    \n  \n    \n    \n      Neo4J: All Cows Belonging to L7 Herd\n    \n  \n    \n    \n      Neo4J : All Steer\n    \n  \n    \n    \n      Neo4J: Identifying incestuous breeding\n    \n  \n    \n    \n      Report: EPD Values for Specific Cow\n    \n  \n    \n    \n      Report: The Lowest 1% of Birth Weight\n    \n  \n    \n    \n      Report: Top 99 Percentile of Calving Ease\n    \n  \n    \n    \n      Report: Top 95 Percentile of Calving Ease\n    \n  \n    \n    \n      Report: Top 99 Percentile of Weight When Weaned\n    \n  \n    \n    \n      Report: Top 99 Percentile of Weight at 1 Year\n    \n  \n    \n    \n      Waiting Cows\n    \n  \n    \n    \n      Friendly Cows\n    \n  \n    \n    \n      Cows in Barn\n    \n  \n    \n    \n      Not Impressed\n    \n  \n    \n    \n      Eating Cows\n    \n  \n    \n    \n      Pretty Cow\n    \n\n    \n\n\n\n      \n  Inspiration\n\nA livestock management tool might seem like an odd choice for a Baltimore Hackathon project. Other than the occasional escape, cattle aren't frequently seen in the area. However, cattle and beef production has a significant impact on the US economy. According to the Cattlemen\u2019s Beef Board and National Cattlemen\u2019s Beef Association, there are more than 1 million beef producers in the United States who added more than $66 billion to the US economy in 2008.\n\nGarrett Bladow, who lives in Federal Hill, is one of those beef producers. He is a co-owner of L7 Ranch, which has over 1,500 head of cattle, and is responsible for the ranch's genetic breeding program and land sequestration efforts. The quality of L7 Ranch beef has been widely recognized. The genetic traits have been sought after and recognized by the Yorkshire Agricultural Society and the Professional Bull Riding Association, among others. Additionally, over 60 percent of the Wagyu beef exported from Japan to the United States has been bred using genetic material from the L7 Ranch.\n\nGarrett is frustrated by the current state of livestock management software. Most packages are dated, don't take advantage of newer technologies, don't allow data to be easily imported, exported, or shared, and aren't attuned to the workflow of the farmers. In addition, most don't incorporate tools to help farmers improve their herds, yields, and revenue. This is especially important since most beef producers have small operations with very thin margins and, again according to the Cattlemen\u2019s Beef Board and National Cattlemen\u2019s Beef Association, they have the lowest income of any type of farm (in 2007 an average gross cash income of $63,000). For most farmers beef production is not their primary occupation.\n\nThis industry needs a software package that has a modern and easy-to-use interface that accounts for the fact that a lot of data needs to be collected in fast-paced, dangerous environments. It also needs to support the average farmer, who is nearly 60 years old but fairly well educated. (Almost 89 percent are high school graduates and over 20 percent have a college degree.) It also should be integrated with any RFID tracking systems used on farms.\n\nWhat it does\n\nAt the Baltimore Hackathon, a team of developers came together to explore an initial solution for managing livestock and making recommendations to improve yields. The resulting application allows for stockmen \n\n\nto upload data about their herd and add additional data throughout the lifecycle of that herd, including births and vaccinations,\nto use the inputted data to get recommendations that improve their breeding profiles and cattle production yields,\nto improve their breeding program through knowledge about birth defects and other progeny risks, and\nto understand how their herd compares to average breeding profiles. \n\n\nHow we built it\n\nMobull.farm is a native React application, so that it can be ported to mobile and web platforms. The data is stored in a Neo4j database. The two are connected via middleware driven by Node.js and Express.js. \n\nAll team members contributed to the code, although three focused on constructing and populating the data model, one person wrote the API, and one person developed the user interface.\n\nChallenges we ran into\n\n\nLearning and using new tools and libraries within a limited timeframe. \nNarrowing the scope of a large project.\nHaving only one subject matter expert and exploring a subject with a lot of nuances.\n\n\nAccomplishments that we're proud of\n\n\nWe learned a lot about the problem space and about the technologies we chose to use. For many of us, this was the first time using Neo4j.\nWe have an initial app.\nWe thought through the user experience & talked about how stockmen will need to use the software in unusual conditions. (For example, limited wifi, cold, dirty, dangerous.)\n\n\nWhat we learned\n\n\nThis is a big problem with a fair number of permutations.\nNeo4j is fun.\n\n\nWhat's next for mobull\n\nThe Baltimore Hackathon project is a part of a larger idea. The overarching idea of mobull.farm is a livestock management system that integrates livestock RFID tracking tags. By combining mobile platforms and synchronized online data services with a portable and cost-effective RFID reader, the system will provide four functional components, aimed at different places in the livestock production chain:\n\n\nmanaging records (animal characteristics, vaccinations, and so on) for stockmen,\nmaximizing feed potential for stockmen and feed lot operators,\nprocessing records for meat packers and inspection agencies (USDA), and\ntracking \"pasture to table\" lifecycle for consumers.\n\n\nTo accomplish these goals the system will have to work in several scenarios including\n\n\nlivestock chute systems, which a used by stockmen to safely secure animals while they are examined, marked, or given veterinary treatment,\ntransportation systems, where loading and unloading of the livestock needs to be recorded,\nfeed delivery systems, and \nthe fields where operators check stock.\n\n\n\n\n        \n    Built With\n\n    neo4jnode.jsreactexpress.js\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n        \n  \n  54.70.43.30\n\n        \n  \n  54.70.43.30\n\n        \n  \n  54.70.43.30\n\n        \n  \n  54.70.43.30\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 1, 
        "members": [
            "kbladow", 
            "bkemper", 
            "bladow", 
            "saintsimmo", 
            "amjcosta"
        ], 
        "name": "mobull", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzM2Mi9kYXRhcy9vcmlnaW5hbC5wbmc=/15_-_1.png?signature=96ba0c90668f25e782e82213a823328faea047e0", 
        "slug": "mobull", 
        "tagline": "Livestock records management system with a built-in recommendation engine to suggest ways to improve cattle yields.", 
        "tags": [
            "neo4j", 
            "node.js", 
            "react", 
            "express.js"
        ], 
        "url": "https://devpost.com/software/mobull", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nThings like Yelp focus on commercial things like restaurants and other things that can cost significant amounts of money. We wanted to eliminate those things and focus on things within walking distance that are free or low-cost, like sightseeing and museums with low-cost or free hours.\n\nWhat it does\n\nWhen you load the app, it asks for your location so it can show you points of interest in your immediate vicinity. You can look for things in another neighborhood by selecting it from the neighborhoods dropdown. You can also filter by POI type:\n\n\nLibrary\nLandmark\nMonument\nMuseum\nPark\nReligious Building\n\n\nWhen you select an item on the map, it opens a screen showing you an image for it and a small blurb.\n\nHow we built it\n\nWe got a lot of our data from Baltimore's Open Data Initiative on baltimorecity.gov. We then cleaned and massaged as much of the data as we could in the short amount of time we have, scraped Wikipedia for some images and text associated with each location. All in all, we have over 1100 points of interest in and around Baltimore City.\n\nThe back end is a Ruby app built with the Roda web framework. We stored our data in a Neo4j database for maximum flexibility while developing it since we didn't really know what the whole schema would look like and we didn't want to spend too much time writing migrations every time we changed our minds.\n\nChallenges we ran into\n\nTransforming data to remove outliers and fill in gaps took a long time and we're still not done with that. Automating this process can only get us so far and, after automating, we still need to check the data our automated process gives us for correctness.\n\nAccomplishments that we're proud of\n\nWe learned a lot about the technologies we used.\n\nWhat we learned\n\n\nOpen data can be very difficult to consume due to lack of consistency\nWhen automating any sort of data gathering process, human oversight and intervention is required every step of the way to ensure accuracy.\n\n\nWhat's next for Baltimore POI\n\n\nRefine our scraping process to generate better images and information blurbs for different points\nAdd a feature to allow multiple images for a single point of interest\nContinue to clean the data so it will be more useful to others, possibly abandoning our automated scraping task and manually updating what we've got\nImprove memory efficiency by limiting points of interest to just what fits in the window\nHandle more edge cases in the app, such as when all points have been filtered from the map\nAdd features, such as getting directions to a chosen point either on the page or in your favorite navigation app\nExtract the Google Maps integration into a Ruby gem to work with the Clearwater framework\nAdd crowd-source features\nGive it a better name that took more than 5 minutes to conjure\n\n\n\n\n        \n    Built With\n\n    rubyrodaclearwatergoogle-mapsgpsneo4j\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 4, 
        "members": [
            "jgaskins", 
            "andreikoenig", 
            "johann109"
        ], 
        "name": "Baltimore POI", 
        "photo": null, 
        "slug": "baltimore-poi", 
        "tagline": "Low-cost points of interest in and around Baltimore City, optimizing for your current location", 
        "tags": [
            "ruby", 
            "roda", 
            "clearwater", 
            "google-maps", 
            "gps", 
            "neo4j"
        ], 
        "url": "https://devpost.com/software/baltimore-poi", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nInspired by similar projects featuring pi zero based gameboys, \n\nWhat it does\n\nEmulates Atari 2600 and some arcade machines. It was supposed to be in an Atari cartridge using a screen, But the screen won't work so we're using a monitor and the cartrage as a controller.\n\nHow I built it\n\nUsing a raspberry pi zero, small 2.5\" adafruit tft. We made a button pad. We soldered a lot and then connected that to the pi. We cut out the Atari Cartridge to fit the screen(Which sadly doesn't work :( ) and the buttons.\n\nChallenges I ran into\n\nWe ran into a lot. We had a crunch on time because I spent the whole first day writing an emulator we didn't end up using. I also didn't know how to solder before. We also have a limited amount of knowledge considering we're a group of 2 high school students. The worst part was the screen. It didn't work which kind of ruined the whole thing\n\nAccomplishments that I'm proud of\n\nLearned how to solder. Made something that works. Learned C. Had a lot of fun\n\nWhat I learned\n\nBenny:+-*/\nOriginally I learned C then wrote an emulator using a tutorial. We couldn't use that because we couldn't get it on the pi. We scrapped that but I learned a lot of C and how Cpus work. Also learned how to solder, and about how wiring works\n\nWhat's next for Atari Pi\n\nMake it able to emulate the whole 2600 library.\n\nRan out of time had to submit what we had wrote.\n\n\n\n        \n    Built With\n\n    raspberry-pibash\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "a-bad-programmer"
        ], 
        "name": "Atari Pi", 
        "photo": null, 
        "slug": "atari-pi", 
        "tagline": "Raspberry Pi Based Emulator Contained in a Atari 2600 Cartridge", 
        "tags": [
            "raspberry-pi", 
            "bash"
        ], 
        "url": "https://devpost.com/software/atari-pi", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      The moving inflatable habitat\n    \n\n    \n\n\n\n      \n  Inspiration -  Human space exploration provides a positive vision of the future. It is needed for the problems facing the 21st century.\n\nWhat it does -  Demonstration that you can crawl a habitat by cycling airbladders underneath once it lands on the moon. It will move have to be move from the landing site to the trench that is being built by robots.\n\nHow we built it Using Arduino controller, tapped lunch bags, and five air pumps that move the bags in a caterpillar type motion to move it forward.\n\nChallenges we ran into leaks of air in the original airbags, We used balloons, and thin hefty bags. Finally settling on thicker plastic bags with tape and a hot glue gun.\n\nAccomplishments that we're proud of -  It moves slowly, but it moves forward.\n\nWhat we learned -  Hot glue will melt thin plastic. The movement is so slow that it is ok for the real thing, but boring in a model.\n\nWhat's next for The Big Moon Dig/Caterpillar  - We would have to build much more rugged bladders and write more short stories to engage the audience.\n\n\n\n        \n    Built With\n\n    arduinomakeblock-air-pumpscustom-cardc-language\n  \n\n        \n    Try it out\n\n    \n        \n  \n  bigmoondig.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "tomriley"
        ], 
        "name": "The Big Moon Dig/Caterpillar", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/408/datas/small.jpg", 
        "slug": "the-big-moon-dig-caterpillar", 
        "tagline": "A self moving inflatable habitat on the moon.", 
        "tags": [
            "arduino", 
            "makeblock-air-pumps", 
            "custom-card", 
            "c-language"
        ], 
        "url": "https://devpost.com/software/the-big-moon-dig-caterpillar", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  LeafTrack is an online community created by Quierra Wells, Ethan, and Durul,and app focused on facilitating connections between marijuana producers, medical practitioners, and patients. Users can check product prices, type and description of the product through the application. LeafTrack is for patients who want to find the best medical marijuana strain for specific ailments, such as menstrual cramps, depression, autism, and addiction.  With LeafTrack patients can easily find the medical professionals and schedule a consultation in a matter of seconds!\n\nThe purpose of this project is to offer aid in the relief efforts for Baltimore's opioid epidemic. The application offers patients listing of products and doctors that specialize in medicinal marijuana therapy. The information in the app offers a localized listing of medical practitioners, dispensaries, and products within Baltimore.\n\nApp\nHome Tab provides information about the availability of a product using your location\nCompanies Tab gets a paginated list of producers\nMap allows you to find local dispensaries\nSee a localized list of doctors and and schedule a consultation\nLoosely utilizes free version Cannabis Reports API. \nWebsite:\nExplores the history of Medical Cannabis\nKeeps up with the latest cannabis news \nConnects with the community via social media and slack http://greenleafnetwork.slack.com\nWebsite is built using a responsive wordpress template\n\n\n\n        \n    Built With\n\n    photoshop\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "quierrawells"
        ], 
        "name": "LeafTrack", 
        "photo": null, 
        "slug": "leaftrack", 
        "tagline": "LeafTrack is an mobile app focused on facilitating connections between medical practitioners, and patients", 
        "tags": [
            "photoshop"
        ], 
        "url": "https://devpost.com/software/leaftrack", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nEven with a backup to Time Machine, I lost ALL my passwords when I upgraded to a new Mac OS version. Don't ask.\n\nWhat it does\n\nJust asks for your keychain login password and then prints all your keychain generic password items to your printer of choice.\n\nHow I built it\n\nBash scripting in Terminal.\n\nChallenges I ran into\n\nGetting results from the bash calls to security and systemkeychain.\n\nAccomplishments that I'm proud of\n\nNone yet!\n\nWhat I learned\n\nThe documentation is very vague on using the two bash calls.\n\nWhat's next for Keychain Printer\n\nGet it working!\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "timothyrchilders"
        ], 
        "name": "Keychain Printer", 
        "photo": null, 
        "slug": "keychain-printer", 
        "tagline": "A Script to print a paper backup of all your MacOS Keychain Passwords. Paper can't be erased by a power outage.", 
        "tags": null, 
        "url": "https://devpost.com/software/keychain-printer", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  We've built a backpack for cyclists that has built-in LED turn signals.  The more visible the bike or motorcycle, the safer the ride. \n\nUsing conductive thread and LEDs sewn into the bag, we have created an arduino-based push button on the right and left straps to activate the turn signals sewn into the cyclists backpack.  Additionally, we have hooked up an DHT22 temp and humidity sensor that is connected to the Internet of Things website Thingspeak.com via ESP8266.  The data from the sensor is then accessed via the mobile website on the biker's handlebar-mounted Android dock.  Other sensors can easily be added according what the user wishes to monitor during their ride.\n\nThe bicyclists using our backpack are safer because they're more visible motorists and also able customize their own \"dashboard\" using the Thingspeak mobile site on their handlebar mounted phone.\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "alimac70117", 
            "djfalcon23"
        ], 
        "name": "LumiWay", 
        "photo": null, 
        "slug": "lumiway", 
        "tagline": "When drivers run over cyclists, they always say: \"I didn't see them!\" Our backpack will make them see you!", 
        "tags": null, 
        "url": "https://devpost.com/software/lumiway", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nNYC, Philly and Baltimore are cities that suffer from aggressive potholes. While visiting their hackathons, we learned about some challenges they face, and were inspired to build a solution.\n\nWhat it does\n\nWe hope to deputize citizens to volunteer their time and drive through the city with the app on, recording critical data on where potholes are.\n\nHow I built it\n\nBump It Up! uses an iOS App to record y-axis Accelerometer Data which signifies the iOS device encountering \"bumps\" or potholes in the road. Once the drive is done, it sends it to a backend database where a script runs to identify the potholes. Finally, there are two outputs - a Google Maps interface and a public facing RESTful API.\n\nChallenges I ran into\n\nDetermining what the algorithm should be to that indicates a \"bump\" was challenging. Further, pushing the data from the iOS device to the server in a proper dictionary was strangely a challenge.\n\nAccomplishments that I'm proud of\n\nWe found two use cases for this project - both a Google Maps Visualizations and a public-facing RESTful API - which can be used to benefit the community.\n\nWhat I learned\n\nSpecifically, our teammate Ashton Welles - a beginner to the hacking world - learned a significant amount about web development and impressed us all with his progress. Huge shoutout to him!\n\nWhat's next for Bump It Up!\n\nWe shall see... :)\n\n\n\n        \n    Built With\n\n    swiftpythonjavascript\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "jayrav13", 
            "dylanlesko"
        ], 
        "name": "Bump It Up! (Team 8)", 
        "photo": null, 
        "slug": "the-bumper-program", 
        "tagline": "An app that helps detect potholes in major cities.", 
        "tags": [
            "swift", 
            "python", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/the-bumper-program", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n   An operation game is a silly skill game, Operation game is a battery-operated game of physical skill that tests players' hand-eye coordination and fine motor skills. Originally made by Milton Bradley, and currently made by Hasbro,[1] it has been in production since 1965, the year in which the game was invented by John Spinello.\n\nThe game is a variant on the old-fashioned electrified wire loop game popular at funfairs and flammer stores around the United States. It consists of an \"operating table\", lithographed with a comic likeness of a patient (nicknamed \"Cavity Sam\") with a large red lightbulb for his nose. In the surface are a number of openings, which reveal cavities filled with fictional and humorously named ailments made of plastic. The general gameplay requires players to remove these plastic ailments with a pair of tweezers without touching the edge of the cavity opening.\n\nHOW DOES THE OPERATION GAME WORKS?\n Basically, the game works by creating a simple circuit. The battery, light, buzzer, metal edges on the body and metal tweezers are connected by wires yet the wires do not go in a full circle. ie. imagine that each part is like on a chain yet it wont work unless the chain is done up and goes in a full circle. This is called a complete circuit. To complete the circuit the metal of the tweezers must touch the metal edge of the body. This connection works the same as a switch would in a simple circuit such as turning on a light. When the circuit is complete the light and buzzer turn on from the power in the battery. However, if the circuit is not complete this can't happen.\n\n\n\n        \n    Built With\n\n    arduino\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "sambidez"
        ], 
        "name": "Iron man Operation game ", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/295/646/datas/small.jpg", 
        "slug": "iron-man-operation-game", 
        "tagline": "TBA", 
        "tags": [
            "arduino"
        ], 
        "url": "https://devpost.com/software/iron-man-operation-game", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Will be programmed to get live updates from fabhive and showcase them at the printer station.\n\nInspiration\n\nWhat it does\n\nHow I built it\n\nChallenges I ran into\n\nAccomplishments that I'm proud of\n\nWhat I learned\n\nWhat's next for Digifab\n\n\n\n        \n    Built With\n\n    3d-printed-objectslaser-cut-letters\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "blinkylight", 
            "blkaceofspades"
        ], 
        "name": "Digifab", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/301/236/datas/small.JPG", 
        "slug": "digifab", 
        "tagline": "An interactive sign displaying data from our 3d printers", 
        "tags": [
            "3d-printed-objects", 
            "laser-cut-letters"
        ], 
        "url": "https://devpost.com/software/digifab", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  We set out to create multiplayer snake! ...in a browser.\n\n\nInspired by Agar.io, we wanted to create a simple multiplayer game which would scale well, and allow players from anywhere to play.\nFrom a technical perspective, we wanted to get our hands dirty with Node.js and HTML5 Canvas. Our team has a diverse spread of talent, but little to no experience with Node.js or even Javascript! So it was a really good learning experience for our entire team.\n\n\nThe Challenges\n\n\nWe wanted to learn javascript and node.js so we refused to use a framework, such as phaser. We designed and wrote everything in raw vanilla javascript and node.js with the exception of the express, and socket.io node modules.\nThe real struggle came with sending, receiving, and synchronizing data between any number of clients as well as the server. All this has to happen several times a second to maintain a usable performance, without overloading our server and causing latency as more and more users join.\n\n\nThe Fun, and the Future.\n\n\nSnake is wildly simple game, but throughout development we came up with so many fun ideas and cool things we could put into this game. Multiplayer snake opens up a lot of doors.\n\n\nSome of the ideas we had:\n\n\nHaving different skins for the snakes (user customizable)\nBeing able to kill other snakes, when they die, their food is available.\nSnakes made of emojies or images, when you eat another snake, the emojies get absorbed into your snake\nInfinite world\nSpeed boosts for the snakes \nSnake decay, the rich get taxed\n\n\n\n\n        \n    Built With\n\n    javascripthtmlcssnode.js\n  \n\n        \n    Try it out\n\n    \n        \n  \n  snakes.harishlall.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 3, 
        "members": [
            "bclouser", 
            "olu", 
            "hlall", 
            "lyuhau", 
            "ngrubb"
        ], 
        "name": "Multiplayer Snake", 
        "photo": null, 
        "slug": "snake-ie814h", 
        "tagline": "Snakes on a page", 
        "tags": [
            "javascript", 
            "html", 
            "css", 
            "node.js"
        ], 
        "url": "https://devpost.com/software/snake-ie814h", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nA friend and I were discussing what I should do for the Hackathon. He jokingly said \"you should control LEDs with your mind! I accepted the challenge and wanted to see if I could. \n\nI also wanted to start getting into Wearable Hardware, so I figured it would be cool to make them wearable LEDs.\n\nWhat it does\n\nYou wear the Mind Wave headset and an unconnected T-Shirt with Flora LEDs sewn into it. The color of the LEDs will vary from Green to Red depending on Relaxed (Green) or Focused (Red) your mind is.\n\nHow I built it\n\nThe headset  came with a USB RF Dongle for interfacing with a PC.  I made some hardware modifications to the RF Dongle to redirect the communications to an Adafruit Flora (Wearable Arduino). I wrote an Arduino Sketch to control the RF Dongle based on Neurosky's documented protocol [3] and a guide on their Developer Wiki [2]. The Sketch receives periodical updates from the Dongle as to the wearer's meditative and focus levels, and varies the colors of the Flora LEDs based on them. I also added a chain of 4 Adafruit Flora NeoPixels to add to the effect. All of this was sewn onto the Hackathon 2015 shirt!\n\nI did do research related hacks that some other people had done with the Mindwave headset beforehand to get an idea what I was in for. Special thanks for a wealth of information that helped make this possible. I referred to the following resources:\n[1] http://www.instructables.com/id/Build-an-EEG-hat-that-turns-your-brainwaves-into-l/\n[2] http://developer.neurosky.com/docs/doku.php?id=arduino_tutorial\n[3] Neurosky Developer ThinkGear Serial Protocol Guide\n\nChallenges I ran into\n\nNumber 1 challenge was sewing!  Sewing is hard! \n\nI ran into a lot of power related issues--because I am not using the USB on the RF Dongle, it needs to be powered from the Flora system. This plus the Flora plus 4 NeoPixels apparently was too much for the standard Flora power system.I had to to cut out 2 of the NeoPixels to get it to function again, and it is still a little flaky. Given more time, I would be looking to set up a beefier battery-based power system that could sufficiently support everything.\n\nElectrical signals emitted from the brain are very subtle and can be difficult to reliably read in noisy environments. I had to leave the DHF and do some of my work at home because there was too much activity in the air. \n\nAccomplishments that I'm proud of\n\nLearning to sew!  Doing a hardware hack without [completely] destroying a $80 piece of hardware. Getting to play with wearables. Having the coolest shirt at the Hackathon! Met a bunch of cool knowledgeable people.\n\nWhat I learned\n\nI learned to sew [kind of]. Learned a bit about brain control interfaces and wearables.\n\nWhat's next for Controlling Wearable LEDs with Your Mind!\n\n1 I'd like to fix the power issues and see what else I can control with my mind, and also try to adapt what I did to more practical scenarios. There is a lot of potential for helping people with disabilities with brain control interfaces.\n\n2 I love embedded stuff and I definitely came up with some ideas I will want to try soon in the wearables arena.\n\n\n\n        \n    Built With\n\n    your-mind!neurosky-mindwavefloraarduinoneopixelshardwareembeddedwearables\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "kencracraft"
        ], 
        "name": "Controlling Wearable LEDs with Your Mind!", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/295/548/datas/small.jpg", 
        "slug": "controlling-wearable-leds-with-your-mind", 
        "tagline": "Control Wearable LEDs with Your Mind!", 
        "tags": [
            "your-mind!", 
            "neurosky-mindwave", 
            "flora", 
            "arduino", 
            "neopixels", 
            "hardware", 
            "embedded", 
            "wearables"
        ], 
        "url": "https://devpost.com/software/controlling-wearable-leds-with-your-mind", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nLocal artist Kristin McWharter's work, often in the form of immersive sculptural installations, videos, and viewer- inclusive performances, is an exploration of how groups socially choose to connect or created distance and how the personal experience of awkwardness manifests from within those groups. The boundaries of social intimacy and personal narrative physically and visually manifest themselves in her work as she uses performative objects and environments as a means to invoke viewer\u2019s individual relationships towards proximity, competition, sincerity and comfort. t. This idea for piece has been on the back-burner for a long time and we are excited to see it come togather\n\nWhat it does\n\nThis is a prototype for a series of costumes meant for future performances. A heart rate monitor tracks the performers heartbeat and generates a tone that plays through a speaker embedded in the collar. Each suit has its of frequency and when two or more performers have heartbeats that come into and out of sync with each other the different frequencies create chords and harmonics.\n\nHow I built it\n\nI used an Arduino uno and an Arduino pro in conjunction with pulse sensors to output tones through 8ohm speakers. I adapted code from pulse sensor tutorials to add new frequencies. \n\nThe suits were adapted from patterns created before this weekend and the code was found online and modified.\n\nChallenges I ran into\n\nLearning about Arduinos and Electronics!\n\nAccomplishments that I'm proud of\n\nLearning about Arduinos and Electronics!\n\nWhat I learned\n\nBasic Arduino code structure, basic circuitry\n\nWhat's next for BeatSuit\n\nMultiples! and a scheduled performance.\n\n\n\n        \n    Built With\n\n    arduino\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "billmuray"
        ], 
        "name": "BeatSuit", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/295/159/datas/small.JPG", 
        "slug": "beatsuit", 
        "tagline": "A series of costumes that harmonize when performers' heartbeats are in sync.", 
        "tags": [
            "arduino"
        ], 
        "url": "https://devpost.com/software/beatsuit", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  UrbanHelpProject\n\nUrban Help Project is an effort to consolidate a network of community members that could potentially use support from local non-profit organizations. The concept of the project is simple: users (you!) feed location and appearence data of community members into our servers, and we parse the data into a graphical user interface available for use by our partnered non-profit organizations. Ideally with enough active users on any given day, the Urban Help Project can significantly streamline relief, rescue, and support efforts within the urban community.\n\nAs students at the Johns Hopkins University in the city of Baltimore, it was impossible not to acknowledge that our community was broken. It came to a point where even at our school campus we were able to recognize the same faces over and over asking for spare change outside the nearby Chipotle, or just wandering around the decrepit alleyways they were forced to call home. Having worked with local non-profits that worked to support victims of human trafficking in Baltimore city, such as The Safe House of Hope, we found that a big problem in operations for organziations such as these was simply not knowing where the people they needed to help were located! We developed the Urban Help Project to not only logistically help these local non-profit organizations, but to also promote greater community outreach, especially within our own school community. The Urban Help Project more or less requires person-to-person interaction with those that we want to help, and the hope of this is that we can work towards real community cohesian.\n\n\n\n        \n    Built With\n\n    htmljavascriptcssnode.jsmongodb\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "jkim502", 
            "matthewjlee", 
            "timkim321"
        ], 
        "name": "UrbanHelpProject", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNDA4LzY1MS9kYXRhcy9vcmlnaW5hbC5qcGc=/things.jpg?signature=9f1d08755fe34b33de9dadb85748de5779c751ec", 
        "slug": "urbanhelpproject", 
        "tagline": "Streamline relief, rescue, and support efforts within the urban community. Your eyes can make it possible.", 
        "tags": [
            "html", 
            "javascript", 
            "css", 
            "node.js", 
            "mongodb"
        ], 
        "url": "https://devpost.com/software/urbanhelpproject", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nIn the past two years, there has been a flux of violent police interactions across the United States. Many communities feel at odds with their police departments, as demonstrated by the recent riots in cities like Baltimore and Chicago. Now more than ever, police officers need a way to gain the trust of the neighborhoods they serve. Beyond this, communities need a way to peacefully and effectively express their concerns about trends in police behavior. \n\nWhat it does\n\nClipd is a platform that allows citizens to record police interactions and to post the interactions to a publically available database. Interactions will be searchable by the officers involved and by location. Users will be able to explore interactions that have happened recently in their communities or that involve officers of interest.\n\nHow we built it\n\nClipd is an Android application with a mongoDB back-end. \n\nChallenges we ran into\n\nThere were questions of the legality of recording police officers in public, but rulings in many states have favored the citizen's right to record police on duty.\n\nAccomplishments that we're proud of\n\nWhat we learned\n\nWhat's next for clipd2\n\nThe next step is to add means to analyze the data generated to create meaningful metrics that can evaluate the effect of police departments on their communities. \n\n\n\n        \n    Built With\n\n    java\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "ihunter", 
            "nenofite"
        ], 
        "name": "clipd2", 
        "photo": null, 
        "slug": "clipd2", 
        "tagline": "Social justice application to promote trust between police officers and their communities", 
        "tags": [
            "java"
        ], 
        "url": "https://devpost.com/software/clipd2", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      This is an example of a custom-made board Matthew was able to borrow. A man with a yacht-club built this for his son. \n    \n  \n    \n    \n      Another view of the example. \n    \n  \n    \n    \n      Waiting for the adhesive to cure.\n    \n  \n    \n    \n      Getting going. \n    \n  \n    \n    \n      Learning to use a planer.\n    \n  \n    \n    \n      A smooth hull on one side.\n    \n  \n    \n    \n      Starting on the second side. \n    \n  \n    \n    \n      I had to get shopped vac'ed in order to go home. \n    \n\n    \n\n\n\n      \n  Inspiration\n\nMatthew has a spot in the Baltimore Triathlon with Athletes Serving Athletes. Typically, athletes are in a raft pulled by their Wingmen. Matthew wants to help his team kick across the finish line. \n\nWhat it does\n\nThe swim board will provide the support Matthew's upper body needs while allowing his lower body the freedom to kick his legs in the water. \n\nHow I built it\n\nFirst we adhered the pieces of foam together. Then waited for them to dry before we could shaping them. \nOriginally, we tried shaping the foam with a hot wire cutter. This worked well to cut of large pieces but proved difficult in developing a stream-lined shaped. Then we moved on to a planer. It made a big mess and a world of difference. To date, we have a little over one side shaped. \n\nOnce the hull is shaped, we will cut out a piece for where Matthew's body will go, then cover the entire swim board with fiberglass mat and fiberglass resin. After that cures, we will test it and make adjustments from there. \n\nChallenges I ran into\n\nWe started thinking about cutting a surfboard but realized that cutting fiberglass would not be very safe. Then we decided to build the swim board from scratch, using foam. Waiting for adhesive to dry is time consuming. Shaping the board was difficult and extremely messy (requiring A LOT of clean up time). There are multiple steps that require curing time. \n\nAccomplishments that I'm proud of\n\nGetting the rectangular shape of the foam to a rounded hull shape was quite an accomplishment. \n\nWhat I learned\n\nAmber learned what a planer is and how to use one. \n\nWhat's next for Swim Board\n\nWe will continue to shape the board and add a fiberglass shell. Then we will make adjustments as needed. Hopefully, we will be able create a tutorial or a mold that more of these can be easily produced for Athletes Serving Athletes. \n\n\n\n        \n    Built With\n\n    foamfiberglass\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "ambergc", 
            "blinkylight", 
            "matthewsmom"
        ], 
        "name": "Swim Board", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/380/355/datas/small.JPG", 
        "slug": "swim-board", 
        "tagline": "A board that allows triathletes with special needs to participate in a triathlon experience", 
        "tags": [
            "foam", 
            "fiberglass"
        ], 
        "url": "https://devpost.com/software/swim-board", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      GUI Start Screen\n    \n  \n    \n    \n      Table Of Contents\n    \n  \n    \n    \n      Addition Using Regrouping\n    \n  \n    \n    \n      Basic Skills\n    \n\n    \n\n\n\n      \n  Inspiration\n\nOur team, Sharai Baltimore and A'Lisa Meus were inspired by those around us. Another inspiration of this project was our Algebra 1 teacher Ms. Gooding. She motivates us to do better in math. She assists us when we need help in class, and she also does what she can to help us prosper. We highly appreciate her and the way she works with us. \n\nWhat it does\n\nOur app, The MathMagician, will improve math scores by assisting people with math skills that are challenging or skills they just can't remember. Our app doesn't give answers so people have to learn how to do the certain skill and can't work around the fact of actually completing the skill. This will improve math scores because students will have to learn how to do the skills both at trouble them and won't have to guess on quizzes/tests anymore. \n\nHow we built it\n\nWe used the MIT App Inventor to make our app. \n\nChallenges we ran into\n\nSome challenges we ran into were getting the webviewer the right size in the app. Another problem we faced was the app not responding to the commands correctly. Lastly, one of the greatest problems we faced was trying to find good enough websites to use in the webviewer so people don't have to leave the app.\n\nAccomplishments that we're proud of\n\nWe're proud of the fact that people found our app very useful and relevant. We're also proud that we overcame some of the challenges and struggles we faced. \n\nWhat we learned\n\nWe learned that creating apps is more about creativity and using you imagination more than its about knowing computer skills and how to use certain software. We also learned that there is no I in team. To create the app, we had to work together and cooperate in order to compromise and to successfully complete what part of the app we have.\n\nWhat's next for The MathMagician\n\nSomething we would like to do is fix some of the bugs that causes the app to work improperly and cause stress because we don't want to contribute to stress of the user. Everyone hates a dysfunctional app! We also want to add additional skills to the app that can assist people of all ages. \n\n\n\n        \n    Built With\n\n    mit-app-inventor\n  \n\n        \n    Try it out\n\n    \n        \n  \n  drive.google.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "phelpsace", 
            "sharai1210"
        ], 
        "name": "The MathMagician", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/371/328/datas/small.JPG", 
        "slug": "the-mathmagician", 
        "tagline": "Where the pencil is the magic wand and your paper is the trick!", 
        "tags": [
            "mit-app-inventor"
        ], 
        "url": "https://devpost.com/software/the-mathmagician", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nEver been on vacation, lost in your own world, when suddenly reality hits you with a paycheck? Whether you're on the sunny shores of Virginia Beach or the bustling harbors of Baltimore ATM Finder from Captital One has you covered. With this user-friendly web app you can simply find nearby ATMs of near the NOVA area in a chosen mile radius of your current location. Get ATM timings & language services all in a single search! What are you waiting for? Your lush green paradise awaits! \n\nWhat it does\n\nEnter a city and country/state into the text finder. Enter the mile radius of your search. Hit locate & you're set! ATM Finder uses Capitol One's Nessi API to find ATMs in the greater Virginia-Maryland area.  \n\nHow I built it\n\nUsing HTML, JavaScript, & CSS we collaborated in Cloud 9 to create ATM Finder.  \n\nChallenges We ran into\n\n\nDifficulty linking API to web code\nAccessing ATM Data\nHTTP vs. HTTPS (Mixed Media)\nLack of sleep\n\n\nAccomplishments that I'm proud of\n\n\nIntegrating Google Maps\nDisplaying ATM Locations on map \n\n\nWhat I learned\n\nWe learned how to use APIs in our web code. Furthermore, we realized the need to start small and scale up rather than be too ambitious. Overall, we learned the importance of perseverance and teamwork!\n\nWhat's next for ATM Finder\n\nAccessing Capital One account data to help create a tailored itinerary based off of popular attractions in the area & your spending history.  \n\n\n\n        \n    Built With\n\n    htmlcssjavascript\n  \n\n        \n    Try it out\n\n    \n        \n  \n  tjhacks2016-pbhave.c9users.io\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "sania19"
        ], 
        "name": "ATM Finder", 
        "photo": null, 
        "slug": "atm-finder", 
        "tagline": "Find nearby ATMs from Capital One to help fund your trips near the NOVA area!", 
        "tags": [
            "html", 
            "css", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/atm-finder", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      generated heatmap.\n    \n  \n    \n    \n      another generated heatmap.\n    \n  \n    \n    \n      homescreen.\n    \n  \n    \n    \n      quizscreen.\n    \n  \n    \n    \n      results.\n    \n\n    \n\n\n\n      \n  Inspiration\n\nWe were intrigued as to what the relationship between crime, poverty, and race was. Curious to find out more, we decided to do a project focused on answering these questions. \n\nWhat it does\n\nThis application presents our findings in a quiz format: several of the heat-maps produced by our analyses of the open data sets are presented to the user, who then chooses the heat map they think most similar to crime.\n\nTheir performance and misconceptions are then analyzed.\n\nHow we built it\n\nMatlab for data analysis; and Swift, HTML, and Javascript for the visualizations.\n\nChallenges we ran into\n\nGetting the data was hard. Making the app look somewhat nice was also pretty hard. \n\nAccomplishments that we're proud of\n\nThe relationship (or lack of) between poverty, crime, and race is plain to see.\n\nWhat we learned\n\nMore iOS. The difficulty of getting good data.\n\n\n\n        \n    Built With\n\n    swiftxcodematlabbaltimore-city-open-datahtmljavascript\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "smsukardi", 
            "kawasakin", 
            "gtrix123"
        ], 
        "name": "dis(crime)inate", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMzQzLzQxOC9kYXRhcy9vcmlnaW5hbC5wbmc=/Crime1.png?signature=5d91f905b29b68500f39d224712736c39619e869", 
        "slug": "dis-crime-inate", 
        "tagline": "What really does cause crime?", 
        "tags": [
            "swift", 
            "xcode", 
            "matlab", 
            "baltimore-city-open-data", 
            "html", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/dis-crime-inate", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nTracking the usage of bike paths and lanes is important to show the resource is being used. The more usage the more dollars allocated to the project. Current tracking devices are either hundreds of dollars or are not internet connected meaning there is a delay of sometimes months before data is gathered. This solves both problems.\n\nWhat it does\n\nNotices motion and posts data using MQTT. The device is flexible and cheap enough to be disposable in case of tampering/theft and to run over multiple service networks (wifi, cell, etc).\n\nHow I built it\n\nAn arduino clone (esp8266) connects to an MQTT server and posts when motion is sensed. A script subscribes to the channel and inserts motion events into a database with a time stamp for post processing. The current implementation can scale to thousands of devices for less than $50 a piece.\n\nChallenges I ran into\n\nCode not working when it was...\n\nAccomplishments that I'm proud of\n\nAs an advocate for improved biking facilities, seeing the current backlash against lanes in my own city, and knowing how limited budgets are for advocacy groups this project can really make an improvement in the lives of Baltimore citizens. Frequently only the loudest get heard but with this captured real time data those in power will now have the data to make the correct decisions moving Baltimore forward.\n\nWhat I learned\n\nI work best under the stress of a looming deadline\n\nWhat's next for Biketrakr\n\nClean up the code and build out the API for universal digestion of the counts.\n\n\n\n        \n    Built With\n\n    arduinopython\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "mehuman"
        ], 
        "name": "Biketrakr", 
        "photo": null, 
        "slug": "biketrakr", 
        "tagline": "Track bikes for way less and also IoT!!!!!!", 
        "tags": [
            "arduino", 
            "python"
        ], 
        "url": "https://devpost.com/software/biketrakr", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nWe have an interest in machine learning and wanted to try it out on some local Baltimore data. \n\nWhat it does\n\nIt takes event data and finds tweets that are in the same area around the same time and measures the sentiment on the tweets through IBM Watson's API. \nThe app pipes the data from different APIs including Twitter and Watson, and aggregates that data into the front end for the user to visualize the sentiment analysis of the given tweets within a given location.\n\nHow we built it\n\nWe coded in Clojure and Clojurescript and used Datomic + Datascript for data/query.\nWe used a variety of open source libraries, including:\n\n\nReact\nGoogle MDL\nreagent + re-frame + re-thread + re-mdl (cljs abstractions)\nhttpkit webserver + Sente websockets abstraction\n\n\nAnd these APIs:\n\n\nGoogle geo\nIBM Watson\nTwitter Search\nBaltimore City Open Data\n\n\nChallenges we ran into\n\nTime, time, time! \n\nAccomplishments that we're proud of\n\nBringing all the data together is awesome- really cool to see the genuine sentiment of locals to the event. \nThis app could not have been put together a few years ago- the future is here!\nThis weekend we also invited a member of our Business Development team to hack along with us. So as a whole, the project was not only a fun but also a learning experience for one of our colleagues. \n\nWhat we learned\n\nSpending the weekend on one project, our team really utilized each other's skill sets to come together and make an awesome web app in a very short amount of time. Our team also came together to teach Allie, a BD team member, about the daily lives of the engineering team at our company. We really grew as a team! Thanks for having us!\n\nWhat's next for Event Lens\n\nThis app can most definitely be built out to include more social data or more event data. \n\n\n\n        \n    Built With\n\n    clojureclojurescriptibm-watsontwitter\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.imdb.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 2, 
        "members": [
            "allieraetee", 
            "deathtenk"
        ], 
        "name": "Event Lens", 
        "photo": null, 
        "slug": "event-lens", 
        "tagline": "A web app to illustrate twitter sentiment around events", 
        "tags": [
            "clojure", 
            "clojurescript", 
            "ibm-watson", 
            "twitter"
        ], 
        "url": "https://devpost.com/software/event-lens", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  We allow for comparison of Baltimore neighborhoods with disparate pricing but are at par in terms of neighborhood vital signs reflecting development.\n\n\n\n        \n    Built With\n\n    javascript\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "axxe", 
            "siraj1"
        ], 
        "name": "Baltimore Housing: Neighborhoods Parity Insights", 
        "photo": null, 
        "slug": "baltimore-housing-neighborhoods-parity-insights", 
        "tagline": "Comparing neighborhoods with disparate prices in Baltimore", 
        "tags": [
            "javascript"
        ], 
        "url": "https://devpost.com/software/baltimore-housing-neighborhoods-parity-insights", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Number of defaults. Bigger circles mean more defaults.\n    \n  \n    \n    \n      Bar graph for the at risk zip codes showing defaults vs non-default cases.\n    \n\n    \n\n\n\n      \n  Civil Case Reminder\n\nThe Problem:\n\nHundreds of low income residents lose their civil case every year because they simply don't show up to court and have a default judgment entered against them. We used a pre compiled database of civil cases which is updated daily in (built before the hackathon). Our analysis of this data determined the 4 zip codes with the highest default judgment rates were 21213, 21215, 21217, 21218. In these zip codes in 2016 out of 3,132 civil cases there were 2,080 default judgments entered against them. \n\nThe Reason:\n\nThere are several reasons for this. One problem lies with the people who serve the lawsuit on the defendants. These people are known as process servers. They have a financial incentive to serve improperly or even not serve at all. In these situations the defendant never knows they have a court case and they will almost certainly lose automatically.\n\nThe Solution:\n\nThe program will check the pre built database of civil cases each night. Find defendants in those zip codes at risk who the court claims have been served. The program will then connect through API to a company who will mail a post card to the defendant. The postcard contains their case number, who is suing them, when/where their court date is, and resources to call if they need legal help. The post card only costs 70 cents to send and with a grant of just a few thousands dollars we could inform everyone in those zip codes of their court date.\n\nMeasurable:\n\nThe program does have measurable analytics because we can compare the rate of default judgments for people who receive the post card versus those who didn't.\n\nTest It!:\n\nThe program will run entirely on the back end without a user interface. However, to demonstrate the program and see what the generated post card looks like we have built a user interface at https://cluesearch.org/Postcard/. \n\nPost Card:\n\nThe program will then send a post card to the defendant with information on\n\n\nWho is suing them\nCase Number\nWhen their court date is\nWhat time their court date is\nWhere the court house is\nInformation on how to get help.\n\n\n\n\n        \n    Built With\n\n    phphtml\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n        \n  \n  cluesearch.org\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "matthewcyber", 
            "anmaikul"
        ], 
        "name": "Case Reminder", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzM0Mi9kYXRhcy9vcmlnaW5hbC5naWY=/gavel.gif?signature=8561089c2098fb6170ba71cd25b909313e6e875e", 
        "slug": "postcard-vf1ge5", 
        "tagline": "Sends postcards to Baltimore City residents at risk of default judgment", 
        "tags": [
            "php", 
            "html"
        ], 
        "url": "https://devpost.com/software/postcard-vf1ge5", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nThere are 80 bus lines serving Baltimore's public transportation needs, along with other services that include the Light Rail, Metro Subway, and MARC Train. With nearly half the population of Baltimore residents lacking access to a car, the MTA is an important part of the regional transit picture.\n\nThere are currently several ways to access bus schedule information but all require using a specific app or visiting a website. For the hackathon I attempted to integrate that information into a more casual, friendly and direct experience with the Amazon Alexa. \n\nMTA publishes schedule and real time information data online for use by developers in the in General Transit Specification Feed static and real time (GTFS and GTFS-RT) data formats. GTFS-RT is realtime is a feed specification that allows public transportation agencies to provide application developers with real-time updates about their fleet.\n\nWhat it does\n\nAmazon Alexa skill using open transit data (GTFS, GTFS-RT) to provide MTA (bus, light rail, Metro, and MARC) transit updates,service updates, and vehicle information. For example, a user could say \"Alexa, ask Maryland Transit when the next 8 will be at Greenmount & North.\"  Alexa would then say \"The next 8 will arrive at Greenmount & North in 20 minutes.\"\n\nHow I built it\n\nAmazon allows users to create new capabilities for Alexa known as \"skills\" that can be downloaded/utilized by other users. I set up the skill interaction model in the developer portal (eg. the infrastructure for Alexa to know what to listen for and what user inputs to store) created the skill logic using AWS Lambda with the Alexa Skills Kit SDK for Node.js (eg. programmed the algorithms that run inthe cloud to access the Maryland GTFS-RT data), added the Lambda function to the skill (connected the algorithms to the Echo's actions using event handlers).\n\nChallenges I ran into\n\ncreating node.js deployment package for AWS lambda\n\nWhat's next for Maryland Transit Alexa Skill\n\nThe new Baltimore Link will be launching on June 18, 2017. So my goal is to continue to learn how to synthesize the current static and dynamic GTFS formats with the Amazon Alexa in anticipation of the new data sets. \n\n\n\n        \n    Built With\n\n    node.jsamazon-alexaaws-lambdajavascriptgtfsgtfs-rt\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "jarriba1"
        ], 
        "name": "Maryland Transit Alexa Skill", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzIyNi9kYXRhcy9vcmlnaW5hbC5wbmc=/mta_logo.png?signature=899ba60c6f0e739db769578a6e42db5ebdfec025", 
        "slug": "maryland-transit-alexa-skill", 
        "tagline": "Amazon Alexa skill using open transit data to provide MTA transit updates,service updates, and vehicle information", 
        "tags": [
            "node.js", 
            "amazon-alexa", 
            "aws-lambda", 
            "javascript", 
            "gtfs", 
            "gtfs-rt"
        ], 
        "url": "https://devpost.com/software/maryland-transit-alexa-skill", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Guide Registration Page\n    \n  \n    \n    \n      Traveler Registration Page\n    \n  \n    \n    \n      Traveler Dashboard with Matches\n    \n  \n    \n    \n      SMS to Guide using Nexmo API\n    \n  \n    \n    \n      SMS to Traveler using Nexmo API\n    \n  \n    \n    \n      Guide Registration Page (for future use)\n    \n  \n    \n    \n      Traveler Registration Page (for future use)\n    \n\n    \n\n\n\n      \n  Inspiration\n\nBased on a real life story: When Tolu took a trip to Los Angeles, he unknowingly wound up in the wrong neighborhood. When he approached a citizen to ask for directions, he was assaulted by the person who turned out to be a gang member. \n\nOne of the best ways to experience the true authenticity of a city is through its neighborhoods and by visiting the local shops, restaurants, etc that give the city its character. Having someone that can guide you to the right areas and toward the right experiences can make all of the difference in the world. Out of this experience and with this philosophy, GuiderX was born!\n\nWhat it does\n\nGuiderX is an application where you, the Traveler, can be matched to your perfect Guide based on your preferences. \n\nHow we built it\n\nWe sought to develop an MVP as a proof of concept. We established landing pages for Travelers and Guides. Using Google AdWords, the foundation was laid for gauging demand on both ends. We then built out the backend for handling the logic needed for making matches and a database for storing user (Travelers and Guides)\n\nChallenges we ran into\n\n\nGetting viable matching logic (RESOLVED)\nPassing userIDs via routs (RESOLVED)\nEncountered an error with sending multiple SMS messages via Nexmo within a certain timeline (RESOLVED)\n\n\nAccomplishments that we're proud of\n\n\nGoing from having only an idea to foundational backend in 48 hours\nSuccessfully implementing the Nexmo API\nSeeing interest generated via Google AdWords within less than 24 hours\n\n\nWhat we learned\n\n\nImplementation of an idea within 48 hours is not easy\nTeam synergy is crucial\nThe benefit of working in an Agile environment\n\n\nWhat's next for GuiderX | The premier travel guide solution\n\n\nMarket Research\n\n\nContinued idea validation\nBuild surveys for perspective Guides and Travelers to deepen knowledge of requested features for future implementation\n\nDevelopment\n\n\nDeeper integration of the Nexmo API\nMessaging platform for Guides and Travelers to communicate and plan trip itinerary\nLive updates of Guide and Traveler Dashboards using Socket.io\nDeployment of Facebook API and Google+ API for easier signup\nYelp API to aid in trip planning\nBackground check and use of Google Guides as a way to validate guide credibility on expertise\nExpanded matching algorithm\n\n\n\n\n\n        \n    Built With\n\n    pythondjangohtml5css3\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "svenwaweru", 
            "marykariuki", 
            "tolu913"
        ], 
        "name": "GuiderX | The premier travel guide solution", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/245/datas/small.png", 
        "slug": "guiderx-the-premier-travel-guide-solution", 
        "tagline": "Guiderx is an app, where we connect a traveler to a tour guide based on the travelers preferences.", 
        "tags": [
            "python", 
            "django", 
            "html5", 
            "css3"
        ], 
        "url": "https://devpost.com/software/guiderx-the-premier-travel-guide-solution", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      increase in homicide rates between 2014 and 2015\n    \n\n    \n\n\n\n      \n  --\ntitle: \"Increasing Murder Counts in Cities Between 2014-2015\"\nauthor: \"Syeda Zainab Aqdas & Yi Wang\"\n\ndate: \"February 15th, 2017\"\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(oilabs)\ndata(murder_2015_final,package=\"fivethirtyeight\")\n\n\n\nOur visualization is looking at the increase in homicide rates between 2014 and 2015. Our focus is on the 10 cities where the murder count was the highest in 2015. The dataset we acquired was from the fivethirtyeight package in R and contains 2014 and 2015 murder counts for 83 cities across the United States. \n\nFirst we look at the cities with the highest murder counts in 2015 and store them into a subset called \"top10\". We then create a bullet graph to depict counts from both years on the same plot with the same axes. \ntop10 <- dplyr::top_n(murder_2015_final,10,murders_2015)\nggplot(top10,aes(x=city,y=murders_2015))+\n  #change defalut position to identity\n  geom_bar(stat=\"identity\",fill=\"#006633\")+\n  #add another geom layer and adjust width\n  geom_bar(stat=\"identity\",aes(x=city,y=murders_2014),fill=\"#66CC99\",width=0.65)+ \n  #swap the axes\n  coord_flip()+\n  labs(y = \"Murder counts\",x=\"City\")+\n  ggtitle(\"Increasing Murder Counts in Cities Between 2014-2015\") +     \n  # legend\n  geom_rect(fill=\"#66CC99\", xmin = 9.5, xmax = 10, ymin = 395, ymax = 420) + \n  geom_text(label = \"2014 count\", size = 3, x = 9.7, y = 462) + \n  geom_rect(fill=\"#006633\", xmin = 8.5, xmax = 9, ymin = 395, ymax = 420) + \n  geom_text(label = \"2015 count\", size = 3, x = 8.7, y = 462)\n\nCaption: Increase in murder counts between 2014 and 2015 in ten cities\n\nThe visualization is a bullet bar graph with the 2014 counts represented by the lighter shade of green and the 2015 counts represented by the darker shade of green. We decided to use a bullet plot because it depicts the change in these counts by plotting them on the same graph with the same axes. From the 10 cities we are looking at, Baltimore has the greatest absolute increase in homicides followed by Chicago. Detroit is the only city where the murder count went down. The overall trend is that murder counts increased in the ten cities where this problem is the worst. \n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "yiwangsds"
        ], 
        "name": "Increasing Murder Counts in Cities Between 2014-2015\"", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/488/796/datas/small.png", 
        "slug": "web-scraping-and-data-analysis", 
        "tagline": "Our visualization aims to find the a compelling way to look at the increase in homicide rates between 2014 and 2015. ", 
        "tags": null, 
        "url": "https://devpost.com/software/web-scraping-and-data-analysis", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nAfter arriving in DC we had a really hard time finding free parking that we felt we wouldn't be ticketed or towed for(& didn't want to pay to park overnight), so while our initial plan was to make this for DC, we couldn't find a dataset that gave us what we needed so we made it for Baltimore.\n\n\nWhat it does\n\nIt uses the users current location and an Open Baltimore data library to determine if the user is safe (from tickets/towing) to park on the street address that they are at.\n\nHow we built it\n\nWe used Apache Cordova which allows you to write cross-platform applications using AngularJS.  We setup a simple api on Heroku to initially parse the data from the Baltimore Open Data project and store in on an AWS RDS instance which we can then query, based on user location.\n\nChallenges we ran into\n\nAccessing some system settings when you aren't operating in native land (Settings which would have been easier to access had we written the app natively) \n\nAccomplishments that we're proud of\n\n\ufffdMaking use of Baltimore open data project and making something we will actually use.\n\nWhat we learned\n\nLearned about using Ionic for app development and node for apis.\n\nWhat's next for Parkital\n\nExpand to the capital!\n\n\n\n        \n    Built With\n\n    angular.jsnode.jsionic-framework\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "kierstenfranklin", 
            "donniepropst"
        ], 
        "name": "Parkital", 
        "photo": null, 
        "slug": "parkital", 
        "tagline": "An app to help decipher street parking signs to determine if you are safe to park there.", 
        "tags": [
            "angular.js", 
            "node.js", 
            "ionic-framework"
        ], 
        "url": "https://devpost.com/software/parkital", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 1, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Daily Question\n    \n  \n    \n    \n      User Responses\n    \n  \n    \n    \n      Reflection Journal\n    \n\n    \n\n\n\n      \n  Inspiration\n\nPulse is a social connection app allowing users suffering from anxiety, depression, and isolation to anonymously connect throughout their community.\n\nWhat it does\n\nEach morning, Pulse presents its users with a single, introspective question. Users can answer this question, and at a set time each day receive the responses from all other users within a 20 mile radius of them. Users may also leave notes in their reflection journal, and set the reflections to be sent back to them at a later date. Through this, users can chart their own mental progress, and how their ideas have been informed by those around them.\n\nHow we built it\n\nParse is an iOS app built using Swift. It uses a MongoDB database to store all user responses, which is hosted with Heroku. The Parse API, originally developed by Facebook but recently open sourced, is used to make queries and determine what posts fall into the user's radius.\n\nChallenges we ran into\n\nMany of us had little to no experience developing iPhone apps, so we had to learn multiple backend and frontend technologies entirely new to us.  It can become a particularly acrobatic art when you're chasing down error with a few hours to go concerning technologies which you have less than 36 hours of experience with.\n\nAccomplishments that we're proud of\n\nWe were able to develop a fully functional iOS app in a single day! We feel our user interface compliments the app's intentions and provides an inviting atmosphere for users.\n\nWhat we learned\n\nThrough this project, we learned to develop an iOS application from wireframing to back end implementation, and look forward to taking this knowledge to future projects.\n\nWhat's next for Pulse\n\nWhile we intend to keep Pulse very simplistic, we will be adding additional user customization features, including setting the color gradient for the app. When scrolling through user responses, the background will adjust to the color of that response's user to further connect users. We intend to publish the application soon, and gradually expand the userbase from Baltimore, to the United States, to Worldwide.\n\n\n\n        \n    Built With\n\n    swiftmongodbparsejavascript\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 3, 
        "members": [
            "nathansforyou", 
            "ianmukherjee", 
            "filmcoder"
        ], 
        "name": "Pulse", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNDMxLzQ4NS9kYXRhcy9vcmlnaW5hbC5wbmc=/pulse.png?signature=02438adedb839bbcd4adf73e45ae036cd1aaafe8", 
        "slug": "pulse-j8euzv", 
        "tagline": "A social connection app allowing users to anonymously connect throughout their city.", 
        "tags": [
            "swift", 
            "mongodb", 
            "parse", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/pulse-j8euzv", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  CitySafe, an app geared towards providing crime data for a particular city/ location with an interactive map, was inspired by the concerns of college students who work, study, and live in urban locations in which crime may be particularly common. This app in particular focuses on plotting the crime data of Baltimore with data displayed as a heatmap -- more red areas would indicate a more dangerous, more concentrated area for crime and the green areas would indicate areas where crime is comparatively less prevalent in comparison to the red areas. The app pulls the crime data, which is available to the public on data.baltimorecity.gov and plots it on the app. Users can very easily analyze which areas are more dangerous than others, and they can use this data to plan their routes around town accordingly.\n\n\n\n        \n    Built With\n\n    javajsonandroid-studiogoogle-mapsxmleclipsehttpsgps\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 2, 
        "members": [
            "praveenravi77", 
            "connorjlopresti", 
            "rishabhakhaury"
        ], 
        "name": "CitySafe", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNDMwLzYwMi9kYXRhcy9vcmlnaW5hbC5wbmc=/ic_launcher.png?signature=bf54d543933b1a0c35bdd370392c113cab853b23", 
        "slug": "citysafe-mil91k", 
        "tagline": "Stay safe in the city with #CitySafe!", 
        "tags": [
            "java", 
            "json", 
            "android-studio", 
            "google-maps", 
            "xml", 
            "eclipse", 
            "https", 
            "gps"
        ], 
        "url": "https://devpost.com/software/citysafe-mil91k", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Logo\n    \n\n    \n\n\n\n      \n  Inspiration\n\nMost people are unaware of the diseases spreading in their community and thus do not take precautions to take to avoid them. We built this app with the idea, prevention is better than cure.\n\nWhat it does\n\nThe mission is to help people keep themselves safe by monitoring diseases around the world in real time, particularly those prevalent in each user's area, and offering them tips from the WHO and CDC to reduce their chances of contraction. It works on two ends. The doctor can quickly register and then report the number of cases of various infectious diseases that he/she saw. On the other end, the user (and the doctor) is able to view a map showing the geographic distribution of the diseases, progression through a timeline feature, and severity through changes in color intensity.\n\nHow we built it\n\nSince we had two iOS programmers on the team, we decided that the best representation for our project would be an iOS application. We began programming with Xcode and created the user interface using the Interface Builder. Additionally, we used Swift to programmatically set up the interface and run algorithms in the background to filter our data based on user input. Firebase was our choice of database since it was easiest to setup. Photoshop was used for all graphic design.\n\nChallenges we ran into\n\nWe initially imagined a simple application which we estimated would take 10 hours to program. However, as we became more ambitious, we decided to add functionality which increased program complexity and essentially tripled our programming time. Features which we took for granted, such as drawing circles actually ended up being more cumbersome. Additionally we had problems with scoping variables since we did not follow a MVC design. \n\nAccomplishments that we're proud of\n\nDespite all these challenges and lack of sleep, we managed to produce a functioning prototype that has some serious potential in public health.\n\nWhat we learned\n\nWe learned to work with each other since we have different backgrounds and expertise, and how to delegate responsibilities. \n\nWhat's next for Pathogen\n\nThis is a public health initiative, and we aim to take it to doctors around the world. First, we will seek input from public health experts at the Bloomberg School of Public Health and then we will begin to implement this program in Baltimore. If it succeeds, we will expand and take it to other cities in the US, and eventually around the world. One feature that we want to include, that we have not been able to in this prototype, is connecting this platform with the programs doctors use in the office when seeing patients, writing the diagnosis and course of treatment. We believe that this app will become more convenient for doctors if diagnoses can be pulled automatically and confidentially from these medical programs, without requiring the doctor to enter in the data.\n\n\n\n        \n    Built With\n\n    swiftxcode\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "yash97j", 
            "plusormanas", 
            "jackappdevinc"
        ], 
        "name": "Pathogen", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/415/480/datas/small.png", 
        "slug": "pathogen", 
        "tagline": "Tracking diseases around the world", 
        "tags": [
            "swift", 
            "xcode"
        ], 
        "url": "https://devpost.com/software/pathogen", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nPart of the discrepancy with adequate global health care during epidemics arises from a lack of a stable communications network. In the recent ebola outbreak, we saw a number of health care facilities shut down as staff were evacuated, which created a secondary and potentially more damaging issue. The communications network is critical to providing us with a way to track and identify community need to better determine the most effective allocation of resources. \n\nWhat it does\n\nWorld globalization and the increasing threats of globalization led to R.E.S., our Regional Epidemiology System. By connecting people to providers, we hope to lead two initiatives: Aid and detection. These are accomplished through our five core goals, which include community integration, data streamlining, global connectivity, technological innovation, and connectivity and mobilization. \nR.E.S. begins with a community focus \u2014 starting here in the heart of Baltimore. Due to the increasing disparity between high and low income families, dramatic need allows us to tailor R.E.S. as a pilot program for improving community health. By combining the core strengths of two APIs, Twilio and SickWeather, R.E.S. has the capability to link community provided data about health to develop a threat level index for a specific area. Through further awareness and transparency, the advanced, integrated cellular AI can give patients further information on the threat level index, potential epidemics, local alerts, and proximal solutions. Our goal is that useage of a cellular network will allow us to connect the two populations who are most likely to be affected in epidemics: Low-income families and the elderly. \n\nHow we built it\n\nR.E.S. was built through a creative combination of APIs, JavaScript, and HTML. \n\nChallenges we ran into\n\nPart of the difficulty in developing a system for monitoring epidemics is the differences in communities around the globe. We started here in Baltimore because it provides us with a unique platform for both first-world and third-world countries, as reflected by the race and income discrepancies. \n\nAccomplishments that we're proud of\n\nWe want to engage people in global health development. Connecting communities to clinics will help us grow a network for epidemic prevention and health care response \u2014 and we believe that R.E.S. helps us do just that. \n\nWhat we learned\n\nEpidemiology systems must be continuously updated to reflect the newest information and the hardest link will be making sure that providers can see and respond to need. \n\nWhat's next for Regional Epidemiology System\n\nOur goal is for R.E.S. to work for everyone, everywhere. After pilot testing in Baltimore, we hope to expand to communities around the globe, connecting with local NGOs, governments, and volunteers to mobilize and allocate resources and efficiently and effectively as possible. \n\n\n\n        \n    Built With\n\n    twiliogoogle-mapssick-weathergoogle-places\n  \n\n        \n    Try it out\n\n    \n        \n  \n  dontpanicyet.herokuapp.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 5, 
        "members": [
            "ahartne1", 
            "janakjobanputra", 
            "kmiletti", 
            "hn1174", 
            "regan_kk", 
            "jonathangrant"
        ], 
        "name": "Regional Epidemiology System", 
        "photo": null, 
        "slug": "regional-epidemiology-system", 
        "tagline": "We connect people to providers", 
        "tags": [
            "twilio", 
            "google-maps", 
            "sick-weather", 
            "google-places"
        ], 
        "url": "https://devpost.com/software/regional-epidemiology-system", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Created for Community Infrastructure!\n\nInspiration\n\nChanging community infrastructure is difficult without policy change, so we wanted to try and put that change into the hands of the people who would really be affected by it; the people of Baltimore City. By giving them an easy interface, that includes fitness, health, and safety recommendations, we hope to raise their self-efficacy in their fitness endeavors and to realize that they can flourish without the need for gyms in the area.\n\nWhat it does\n\nThis website gives the people of Baltimore City the information and the tools to better their fitness and health, while also allowing them to become active in their communities while maintaining their safety. Users can access three tools: \n\n\na Baltimore Map listing all incidences of crime so they understand safe and unsafe areas around them to walk or exercise as well as the location of recreation centers in the area,\na Fitness Game Plan that uses their zip code and demographic data to give them fitness recommendations and \na Nutritional Game Plan (beta) that uses their zip code and demographic data to give them nutritional data\n\n\nHow we built it\n\nWe used weebly as our primary web platform. This is how we plan to interface with potential users. For backend data sources, we used data from Baltimore City Organizations that provided crime data points and placed them onto an interactive map to allow users to easily inform themselves of potentially unsafe areas around them and learn about safe areas near them to exercise. We used the Google Maps Layering feature to layer numerous data points imported using a CSV format from these databases Google Maps. \n\nChallenges we ran into\n\nWe had originally planned on tracking sidewalk locations and streetlight locations in neighborhoods and incorporating that information into our Google map, since the presence of those has been shown to raise fitness levels in areas where they are located. After lots of searching, it became apparent that this information was not open source, or even available. \n\nAccomplishments that we're proud of\n\nThis was the first hackathon that all 3 of us have participated in, so I\u2019m sure we are all proud that we have a finished product! \n\nWhat we learned\n\nWe learned a lot about amazing tools that are out there in terms of health tools and software, website development and html. We feel like we have a game plan now of tools that we can learn before our next hackathon!\n\nWhat's next for SafelyFit\n\nHopefully we will be able to expand past just Baltimore City to include other areas with nutrition and fitness deserts. We also hope to be able to incorporate grocery delivery to compensate for food swamps/deserts. Also, the inclusion of sidewalk and street light locations would be great to include into our SafelyFit map when/if that information were to become available.\n\nAdditional Info\n\nCheck out the three links below for more information about our project!\n\n\nThe link to our published website\nLink to an example automated email sent to users after their submission\nLink to our Business and System Set-Up\n\n\nShout out to Mentors\n\nWith this being our first hackathon we had to learn, and we were so glad to have so many hackers who were willing to lend their time and suggestions to our first project! We not only learned a lot about user interaction and widget integration, but also cool tools and tips to use at future hackathons. Specifically big shout out to Aviral Srivastava and Saurabh Khandelwal who provided us with a lot of feedback!\n\n\n\n        \n    Built With\n\n    weebly\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.safelyfit.weebly.com\n\n        \n  \n  drive.google.com\n\n        \n  \n  docs.google.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 2, 
        "members": [
            "veenathamil", 
            "salleycat"
        ], 
        "name": "SafelyFit", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/676/466/datas/small.png", 
        "slug": "safelyfit", 
        "tagline": "Learn about fitness options and safe routes by just entering your zipcode and a few things about you!", 
        "tags": [
            "weebly"
        ], 
        "url": "https://devpost.com/software/safelyfit", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration.\n\nDespite the countless methods to address health, fitness, and nutrition needs within the community, in order to optimize implementation and development of health infrastructure, it is paramount to understand current and local community needs.  Working with available and accessible tools\u2014Google Maps and Algolia APIs\u2014we can evaluate to current locations and services to address this health related issue.\n\nWhat it does.\n\nMirage Map is a web application that determines current locations and services based on community health infrastructure facets of health, fitness, and nutrition. Individual (patient specific) address can be input into the application and surrounding health infrastructures\u2014health clinics, supermarkets, fitness centers, and other services\u2014can be visualized.\n\nUsing Baltimore as a standard city-scale community model, we implemented population density and median income data based on zip code to examine potential primary care deserts, nutrition deserts, fitness deserts, and transportation deserts. We normalized the scores of each service to calculate the risk factor for potential health infrastructure deficit.\n\nUsing the functional maps, health infrastructure deserts are visualized to target areas of high risk factor to find direct solutions. Optimized solutions can be implemented based on community need\u2014building a brand new clinic in high density and high risk communities, or advertising fitness services to lower density and high risk communities.\n\nHow we built it.\n\nWe learned to use Google Maps API to fetch real-time location data [1]. The code is based on Javascript. Python was used to develop a model for risk assessment and optimization using census data. \n\n[1] https://cloud.google.com/maps-platform/\n\nAccomplishments we are proud of.\n\nWe strongly believe that our application addresses the foundational issue associated with community health infrastructure. Mirage Map arises awareness of risk for health deserts in any area by addressing each level of the community.   We are proud that our app is hosted Google Cloud, making the valuable information accessible to everyone\u2014patients, researchers, and practitioners.\n\nCheck it out here:  https://medhacks-215721.appspot.com \n\nWhat's next?\n\nOur start of Mirage Map is a relevant and translational idea. We aim to use these \u201cfunctional maps\u201d for future optimization of health infrastructure implementation.  \n\n\n\n        \n    Built With\n\n    google-cloudgoogle-mapspythonflaskgooglejavascript\n  \n\n        \n    Try it out\n\n    \n        \n  \n  medhacks-215721.appspot.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 6, 
        "members": [
            "eho96", 
            "cpark223", 
            "zorianthornton", 
            "tpagliaro", 
            "spence1990"
        ], 
        "name": "MirageMap", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/678/488/datas/small.png", 
        "slug": "sdfsdfsf", 
        "tagline": "Visualize and optimize community health infrastructure solutions using Google Maps API.", 
        "tags": [
            "google-cloud", 
            "google-maps", 
            "python", 
            "flask", 
            "google", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/sdfsdfsf", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 2, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nHack for Impact base in the Baltimore area provide a ride range of topics to implement. My team was inspired by that topic.\n\nWhat it does\n\nIt provides the ability to facilitate food stamps consumers with healthy food in food desert area.\n\nHow I built it\n\nWe built it as a web base with front end and back end.\n\nChallenges I ran into\n\nAlexa. Finding what similar app that's out there. Block chain.\n\nAccomplishments that I'm proud of\n\nThe contribution provided and the knowledge acquired by the team.\n\nWhat I learned\n\nI learned a lot about food desert area.\n\nWhat's next for Food Chain\n\nThe sky is the limit.\n\n\n\n        \n    Built With\n\n    htmlcssbootstrapjavaatomsublime-text\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n        \n  \n  docs.google.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "victhehacker", 
            "sirwalterrrich", 
            "perryapublico", 
            "simonacevedorodriguez"
        ], 
        "name": "Food Chain", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/650/494/datas/small.png", 
        "slug": "food-chain-r6d41a", 
        "tagline": "How to address healthy food priority areas by leveraging local resources?", 
        "tags": [
            "html", 
            "css", 
            "bootstrap", 
            "java", 
            "atom", 
            "sublime-text"
        ], 
        "url": "https://devpost.com/software/food-chain-r6d41a", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      PopUpRoboticGamingGrounds\n    \n\n    \n\n\n\n      \n  Inspiration\n\nThe underutilized potential of young people in Baltimore and beyond. The 21st century skills required by the USA to remain competitive on the world stage. \n\nWhat it does\n\nAtrracts and guides young people to STEM & Making via competitive serious gaming.\n\nHow I built it\n\nSlowly\n\nChallenges I ran into\n\nSoftware dev, electrical problems, hardware experience. \n\nAccomplishments that I'm proud of\n\nOur Light City exhibit!\n\nWhat I learned\n\nAdults love it just as much as the kids!\n\nWhat's next for Robot/Drone obstacle course\n\nProduct development, scale services to more youth programs during after school and idle-time.\n\n\n\n        \n    Built With\n\n    autodesk-fusion-360arduinoraspberry-pirfid\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "najeerobot"
        ], 
        "name": "Robot/Drone obstacle course", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/648/792/datas/small.jpg", 
        "slug": "robot-drone-obstacle-course", 
        "tagline": "Attracting young people to STEM &amp; Making via \"Edutainment\" based Robot/Drone gaming.", 
        "tags": [
            "autodesk-fusion-360", 
            "arduino", 
            "raspberry-pi", 
            "rfid"
        ], 
        "url": "https://devpost.com/software/robot-drone-obstacle-course", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      UI: Landing Page\n    \n  \n    \n    \n      About\n    \n  \n    \n    \n      A\n    \n\n    \n\n\n\n      \n  Inspiration\n\nIlliteracy is a global issue. Locally, Baltimore consistently ranks as one of the nation\u2019s least literate cities. In 2016, five Baltimore schools did not have a single student who met the minimum requirements for reading proficiency. Further, 30% of adults in the city are considered \u201cfunctional illiterates,\u201d defined as people who have \u201creading and writing skills that are inadequate to manage daily living and employment tasks that require reading skills beyond a basic level\". In an article published just this morning, it was stated that 90% of low-income and minority students in the city cannot read proficiently.\n\nGlobally, 1 in 10 people are illiterate. From an economic standpoint, functional illiteracy holds economies back, costing the $1.19 Trillion globally, each year. A lack of literacy in our communities is not an individualized issue. Poor literacy also limits a person\u2019s ability to engage in activities that require critical thinking and/or a solid understanding of literacy and numeracy skills. Such activities may include comprehending governmental policies and voting in elections, making educated financial decisions such as buying a home and managing a mortgage, or completing a degree of higher education.\n\nToday, more than 750,000,000 people cannot read this sentence.\n\nAt its root, this disparity in literacy breeds from a lack of access to education supplemental tools. Our team seeks to remedy this widespread issue by leveraging the power of Augmented Reality (AR) with commonly accessible devices.\n\nWhat it does\n\nThe Stell.AR Speller application enables users to practice literacy in an intuitive, engaging, and effective environment. On an iOS or Android phone, tablet, laptop, or desktop computer with a camera, users can scan a letter, and on-screen pops up interactive 3D visualizations of words that begin with that letter. This engages the user, familiarizing them with concepts related to that letter of the alphabet, thus, encouraging word familiarity and literacy.\n\nThe app is best optimized for the iPhone X.\n\nHow we built it\n\nThe development of this project began with exploring the possibilities of Vuforia, an AR platform that is natively supported in Unity.\n\nAfter much effort, we could successfully overlay 3D data visualizations atop an image. We accomplished this by first uploading the \u201ctarget\u201d/base images (in our case, the letters A, B, and C) to the Vuforia database.\n\nVuforia performs image processing, and rates the identifiability of the image that we uploaded. In our case, our target images received a score of 5/5, meaning that they were ideal candidates, and could be identified by the software, likely, with a consistently high success rate.\n\nWe then imported those target images into Unity 3D, as well as publicly available 3D models from the Unity Asset Store. These models each correlated to a letter. For example, for the letter A, we have a target image with 3D models of an apple, acorn, ape, and airplane. These visuals were then placed atop the target images.\n\nWe created scripts in C++ to include gestures that allow the user to iterate through the various 3D models on-screen.\n\nThis functionality was then built into an Xcode community file and deployed for iOS. Given that we utilized Unity, which has platforms for iOS, Android, as well as desktop versions for Mac and PC, our application is usable across most every device.\n\nChallenges we ran into\n\nOur team sought to better support users with disabilities. We put immense effort into integrating sound effects to the 3D visualizations, as well as a swiping mechanism, to be able to see each AR element closer. Their implementation was not fully functional within the 36-hour timeframe. However, we are determined to continue to refine and innovate the application that we have developed here at HopHacks!\n\nAccomplishments that we're proud of\n\nOur team is composed of a diverse set of members, who had not previously met before Friday. The collaboration of skills, support, and efficiency of our team has been beyond admirable. \n\nThe integration of open source tools and public APIs in our project, most notably, Vuforia, has been a great success, especially considering that the members of our team did not have previous experience with it.\n\nOur user interface is another feature that we put a lot of consideration and diligence into. We wanted to make this application appealing, intuitive, and efficient for users of all ages and levels of technical skill.\n\nFurther, we are incredibly proud of the fact that our project runs! Interoperability (as well as blatant operability) is incredibly important to our group, and the fact that Stell.AR Speller operates across different devices and operating systems, efficiently, is a great accomplishment of our team. \n\nWhat we learned\n\nThroughout this hackathon, we learned countless lessons in implementing the tools that we utilized, especially in regards to Vuforia and its integration with Unity 3D.\n\nWe also learned that AR and humanitarian work operate in tandem far better than we could have fathomed. While using technology as a means of alleviating a global issue may seem far-fetched to some, our group found that it made learning tools accessible to a larger audience, and enables us to tailor the tools to support the needs of our users.\n\nWhat's next for Stell.AR Speller\n\nWe have a multitude of ideas for ways to advance Stell.AR Speller. \n\nAs previously mentioned, we would like to better apply sound effects and interaction with the 3D visualizations to allow users to engage with the assets in a more dynamic way. \n\nUnderstanding the AR capabilities of the iPhone X hardware, and integrating Apple\u2019s ARKit, per the suggestion of the wonderful sponsors Mission:Data and JHU Applied Physics Laboratory, are revolutionary aspects to consider.\n\nIn the interest of best optimizing our time, we limited our app to support the letters A, B, and C. Fundamental aspects that we would like to include in future improvements are expanding the app to support the entire English alphabet. We would also like to provide functionality that accounts for more robust linguistics, such as words, phrases, sentence structure (\u201cThe cat chases the mouse\u201d vs. \u201cThe mouse chases the cat\u201d) and providing animated visualizations to represent these. \n\n\n\n        \n    Built With\n\n    vuforiaunitygithubxcodeiosandroidvisualizations3d-visualizationsphotoshopc#\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 2, 
        "members": [
            "sarahhas", 
            "em_gong", 
            "samuel990705", 
            "abrady"
        ], 
        "name": "Stell.AR Speller", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNjA0LzEyOS9kYXRhcy9vcmlnaW5hbC5wbmc=/CircleCrop_Stell.AR_Speller.png?signature=9f005529f451ef76bf219bf075a018e69da63c48", 
        "slug": "stell-ar-speller", 
        "tagline": "Stell.AR Speller utilizes AR to provide literacy practice in an intuitive, engaging, and effective environment.", 
        "tags": [
            "vuforia", 
            "unity", 
            "github", 
            "xcode", 
            "ios", 
            "android", 
            "visualizations", 
            "3d-visualizations", 
            "photoshop", 
            "c#"
        ], 
        "url": "https://devpost.com/software/stell-ar-speller", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Baltimore Safety Screen is an Android application that allows the user to find locations and information of arrests in the city of Baltimore. The motivation for this project was to determine which areas in the city are safer for living or travelling. The project was written in Java using Visual Studio, and makes use of Dijkstra's Algorithm to find clusters of arrests in around a specified location.\n\n\n\n        \n    Built With\n\n    java\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "curtisjones"
        ], 
        "name": "BaltimoreSafetyScreen", 
        "photo": null, 
        "slug": "baltimoresafetyscreen", 
        "tagline": "2XB3 Group Project, Uses a 100k+ data set and Google Maps API to determine safety levels across Baltimore.", 
        "tags": [
            "java"
        ], 
        "url": "https://devpost.com/software/baltimoresafetyscreen", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Our mission is to connect consumers with healthy, sustainable, fresh foods. We will achieve this by aggregating producers and providers of sustainable food by geographic market and building an archive of those producing and serving the finest sustainable foods. We will be a resource for those who harvest, prepare or consume sustainable food.\n\nWe will:\n-Focus initial growth on Chattanooga and Baltimore partnering with the aquariums for educational and promotional support and local fisheries, purveyors, and farmers to identify restaurants serving their sustainably produced foods.\n\n-Partner with local farms, fisheries, dairies, and suppliers to provide resources for restaurants who would like to provide sustainable dining options fostering a collaborative community.\n\n-Partner with chefs, farmers, and experts in the field of sustainable food to develop criteria to rate producers and restaurants on. \n\n-Partner with individuals in specific cities to crowdsource restaurant and supplier recommendations and reviews. This community will fuel growth to other cities.\n\n-Partner with organizations such as Riverkeepers to align with social causes and build communities gaining further knowledge of regional suppliers and restaurants.\n\n-Secure corporate sponsors such as Patagonia to promote our efforts and connect with communities around the globe aligning with corporate social goals.\n\n-Foster community through social media, blogging and video series founded in education and promotion of sustainable food.\n\n-Partner with the State Department and other organizations  to promote sustainable food production and sustainable dining choices. \n\nLong term we plan to provide consumer resources for sourcing sustainable ingredients from local markets and suppliers, expanding on recipes provided by aquariums and organizations advocating sustainable food.\n\n\n\n        \n    Built With\n\n    ben-schnellgoogleyelpharvested-herethe-tn-aquariumthe-national-aquariumcaffeine\n  \n\n        \n    Try it out\n\n    \n        \n  \n  development.fishackathon.divshot.io\n\n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 11, 
        "members": [
            "michaeldaily", 
            "benschnell", 
            "driverman5777"
        ], 
        "name": "Sustainable Supper  (Solving Problem 15-6)", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjcwLzUzOC9kYXRhcy9vcmlnaW5hbC5wbmc=/Screen_Shot_2015-06-20_at_10.41.04_AM.png?signature=bc199fdbd7cdb010c3ae86af1d0fa044c5b77012", 
        "slug": "sustainable-supper-solving-problem-15-6", 
        "tagline": "Connecting consumers with sustainable food options.", 
        "tags": [
            "ben-schnell", 
            "google", 
            "yelp", 
            "harvested-here", 
            "the-tn-aquarium", 
            "the-national-aquarium", 
            "caffeine"
        ], 
        "url": "https://devpost.com/software/sustainable-supper-solving-problem-15-6", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration: We are offering Quality services in Baltimore, Maryland and surrounding their communities.\n\nHow it works: Window Tinting help to save your skin from Sun Rays and keep cool your rooms and Cars.\n\nChallenges I ran into: Its Really helpful for all to save your Skins from hot rays.\n\nAccomplishments that I'm proud of: you will get feel good with your working.\n\nWhat I learned: you may learned that how the Window Tinting will helps you and other peoples.\n\nWhat's next for Window Tinting Baltimore: We are offering these services outside of Maryland within few weeks.\n\n\n\n        \n    Built With\n\n    google-analytics\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.getsunstoppers.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 1, 
        "members": [
            "getsunstopper"
        ], 
        "name": "Window Tinting Baltimore", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjY0LzAxNy9kYXRhcy9vcmlnaW5hbC5qcGc=/p95.jpg?signature=02712ace56895cc29b52a5c0a12b4ab5311efe10", 
        "slug": "window-tinting-balitmore", 
        "tagline": "Window Tinting Baltimore", 
        "tags": [
            "google-analytics"
        ], 
        "url": "https://devpost.com/software/window-tinting-balitmore", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Tollsmart was founded by two people who couldn\u2019t understand why it was so difficult to obtain toll cost information for upcoming road trips.  Leonid (Leo) Iogansen, who developed the original Tolls Calculator USA & Canada iPhone app in 2014, came up with the idea after running out of cash on a toll-laden trip from Baltimore to New Jersey and ended up getting a ticket.  It left him thinking there must be a better way to prepare travelers for tolls in advance of a trip. He wished there to be a product which would not only display routes on a map, but would also calculate tolls expenses for these routes. \n\nJim Kovarik, an entrepreneur and former AOL executive, had already developed an industry-leading fuel cost calculator application (the Galculator) for Cost2Drive, and had been looking for a toll calculator to complement it given that 50,000 people were visiting the site each month in search of toll cost information, a number that was doubling every year.  Jim and Leo decided to combine efforts and in April 2015 cofounded Tollsmart, a Virginia-based LLC with a mission to provide full transparency around tolls so people can make smarter, more economically-sound driving decisions.\n\nAs we were developing the API for our toll calculator application we were thinking about the many potential use cases and noticed that there were many people posting questions on Twitter regarding whether or not toll costs are included in the price estimates provided by Uber.  In most instances the answer was 'no' and so we felt we could provide a valuable add-on service to Uber by providing price estimates that are inclusive of tolls.\n\nAs we further developed our Tollsmart iPhone application to where it now provides toll costs for alternative routes, it presented another opportunity for Uber customers to see which route would be the most cost-effective factoring in both toll and Uber costs.  We felt this was an innovative service to enable Uber customers to make more informed suggestions to Uber drivers regarding routing.\n\nAdditionally we felt we could bring a whole new audience to Uber, those who were using the Tollsmart app in advance of driving someplace who would then see that the Uber service was available for their itinerary, and at reasonable prices thereby creating more awareness for Uber and delivering more customers.\n\n\n\n        \n    Built With\n\n    amazon-web-servicesxcodejavaobjective-cgoogle-mapsgoogle\n  \n\n        \n    Try it out\n\n    \n        \n  \n  tollsmart.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "leogansen"
        ], 
        "name": "Tollsmart", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/262/635/datas/small.png", 
        "slug": "tollsmart-z41c5", 
        "tagline": "Uber with tolls", 
        "tags": [
            "amazon-web-services", 
            "xcode", 
            "java", 
            "objective-c", 
            "google-maps", 
            "google"
        ], 
        "url": "https://devpost.com/software/tollsmart-z41c5", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nSix years ago, our group member Mark bought the sign at the Baltimore HamFest. Since then, we have been bringing it with us to all of our Hackathons, intending to use it as a side project, just for fun. Unfortunately, we have never gotten the sign into a stable working state. That is, until now.\n\nHow it works\n\nThe sign is driven using a Teensy 3.1 for the realtime scanout, and a RaspberryPi to generate the frames. A series of applicantions written in Python can be selected in a menu system we developed. The sign is also capable of controlling x10 devices using an Arduino Uno based bridge connected to a TW523 x10 line interface module. This allows our sign to control the warning light that currently adorns it.The game code is all written in Python, and the realtime code on the arduino and the Teensy is written in c.\n\nChallenges I ran into\n\nThere are several reasons that this is the first Hackathon where we managed to get the sign working. Perhaps the foremost reason is that the scanout hardware inside the sign is undocumented and was originally designed to display closed captions retrieved from an analog tv signal. Getting the sign to work required the drive electronics being substituted.\n\nAccomplishments that I'm proud of\n\nWe made more than a dozen demos for our system, including several multiplayer games, internet enabled services, and cool patterns such as Conway's Game of Life. \n\nWhat I learned\n\nQuite a lot about reverse engineering! Driving the display requires tight control of a system we didn't build, and several major modifications to the original driver circuit had to be executed.\n\nWhat's next for LED Sign and Demos\n\nWe hope to design more simple games and utilities to our sign and add as much functionality as possible. \n\n\n\n        \n    Built With\n\n    pythoncrestraspberry-piteensyhardwarerealtime-controloscilloscopearduinotwitter\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "thegeekguy", 
            "dylwhich", 
            "alexanderbauer", 
            "zstewart"
        ], 
        "name": "LED Sign and Demos", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjQxLzYxOC9kYXRhcy9vcmlnaW5hbC5qcGc=/IMG_20150412_092452.jpg?signature=38f91f1f570961e03f9b7880f9db62f514d4b71e", 
        "slug": "led-sign-and-demos-mrnpz", 
        "tagline": "Merging 80's Technology with Internet-Based Services and Games", 
        "tags": [
            "python", 
            "c", 
            "rest", 
            "raspberry-pi", 
            "teensy", 
            "hardware", 
            "realtime-control", 
            "oscilloscope", 
            "arduino", 
            "twitter"
        ], 
        "url": "https://devpost.com/software/led-sign-and-demos-mrnpz", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Problem Statement\n\nTransportation routes for Baltimore City public school students are created at the beginning of each school year.  However, over the course of the term, students unfortunately become homeless and need to re-locate.  In order to ensure that homeless students can continue to attend the same school and maintain an element of stability during a turbulent time, the school district provides transportation accommodations for these students.  These additional accommodations can often be costly, as students' new locations can frequently be outside of existing transportation routes established at the beginning of the year.  \n\nProposed Solution\n\nIf a model was developed to help identify factors leading to homelessness and anticipate homeless students' re-locations, these changes could be accounted for during the initial route construction at the start of the school year.  This would provide more efficient and reliable transportation for homeless students and savings to the school district.  Additionally, the model itself could be used to better understand the driving forces behind student homelessness, which could help in mitigating its effects.\n\nTimeline, Resources and Group Skills\n\nThe primary resource that will be needed is access to data.  Receiving access to student data that identifies whether or not a student is or has been homeless, along with relevant socio-economic data, will be critical in constructing a model.  Additionally, access to administrators, teachers and students will be very helpful in identifying possible factors that could indicate that students will be moving due to homelessness.  \n\nOnce the initial data has been gathered, an exploratory data analysis can be performed to identify broad trends and provide the context for next steps.  Since some team members already have data analysis skills and can leverage open-source software, no resources would be needed initially, and the preliminary analysis could likely be completed in 3-4 weeks.  However, once the project shifts from identifying causes of homelessness to determining how homeless students re-locate, additional resources might be needed to procure software packages that specialize in analyzing geospatial data.  The exact extent of the analytical work that can be done and the necessary tools that will be needed can be more accurately assessed once the initial data is received.\n\nHackers: Andrew Molchan, Brigitte Granger\n\nCollaborators: Shayna Robinson, John Land, Robin Neal, Lara Ohanian\n\n\n\n        \n    Built With\n\n    rbcps-student-data\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "bmorehackathon"
        ], 
        "name": "Trends in Homelessness Among School Students", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/197/710/datas/small.jpg", 
        "slug": "trends-in-homelessness-among-school-students", 
        "tagline": "Predict homelessness trends to optimize route planning for BCPS", 
        "tags": [
            "r", 
            "bcps-student-data"
        ], 
        "url": "https://devpost.com/software/trends-in-homelessness-among-school-students", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Our target audience is stakeholders in the Baltimore City Public Schools who are interested and involved in transportations issues and who influence policy, routing and funding. \n\nWe propose to spend the 8 weeks working with the school system and transportation specialists to visualize the current system as a whole and try to see any problems that exist. We'd make several different maps that tackle different aspects of the problem and use them as discussion starters for new conversations with BCPS transportation experts. \n\nWe would also create visualizations that propose potential solutions to any problems that we identify. We'd work with BCPS to visualize potential solutions that they come up with as well. \n\nData needs: routes for everything (from routing software?). School locations. Student homes.\n\nHow we'd use the money: possibly for amazon cloud processing of large data sets. Also possibly for hiring a transportation engineering grad student (from Morgan State via one of our team members) to fill in missing pieces in expertise in mapping or data processing.\n\nTeam Members:\n\nBryan Connor \nbryan.j.connor@gmail.com\n\nAlex Nastetsky\nseashelf@gmail.com\n\nsteven nutt\nstevennutt@gmail.com    \n\nAudrey DeGross                                                                                                      A.Degross@transdev.com\n\nCeleste Chavis\nceleste.chavis@gmail.com\n\nRandall Ziman\nrandall.ziman@gmail.com\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "bryanconnor"
        ], 
        "name": "Make it Visual", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/197/709/datas/small.png", 
        "slug": "make-it-visual", 
        "tagline": "Make maps and visual representations of current transportation problems and potential solutions.", 
        "tags": null, 
        "url": "https://devpost.com/software/make-it-visual", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Welcome to the BaltimoreCode.org wiki!  \n\nBaltimoreCode.org was started during the National Day of Civic Hacking - Hack For Change - in Baltimore, MD.  It is the first copyright restriction-free, open data publication of the Baltimore Law, and presents the law in the same awesome State Decoded format as the recently-released MarylandCode.org.  Developers Will Koper and Chester Nwachukwu joined our own Chris Birk to unleash the B'More law.  This Bud's for them.\n\nBefore this project started, Baltimore citizens faced significant barriers - legal and technical - when trying to know the laws, let alone when trying to unleash the data in applications or modern web design.  (Click here to learn more about the barriers like copyright restrictions, PDFs, bad search and bad design, among others.)  Hacking together, we started to demolish these barriers with BaltimoreCode.org by publishing the city law in a human-friendly, open XML format...with a delicious API cherry on top for your coding & re-using pleasure.  \n\nThanks go to the Baltimore Department of Legislative Reference for their great work taking care of the law and handing it off to Baltimore Mayor Rawlings-Blake's OpenBaltimore Team for publishing here under a Creative Commons 0 (CC0) license.  Click here to watch Mayor Rawlings-Blake kick off the hacking on June 1, 2013.\n\nRight now, we're adding features and fixing bugs on the issues page and looking to enhance the project while deploying it to open up, remove restrictions on, and modernize the law in cities and states across America.  Click here to say hello to lead developer Chris Birk on Twitter or jump right into the project below.\n\n\n\nGetting Started Documentation & Data Sources\n\n\n\nProjects Underway\n\n\n\nGet Involved Today!\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  MarylandCode.org\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "seamusk"
        ], 
        "name": "Baltimore Decoded - Free Law for Charm City", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/649/datas/small.jpg", 
        "slug": "baltimore-decoded-free-law-for-charm-city", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/baltimore-decoded-free-law-for-charm-city", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Increases visibility, awareness and participation of community-oriented resources in East Baltimore through the lens of health and wellness.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  walkandtalkbaltimore.tumblr.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "amyleew", 
            "elainea2", 
            "jonathane1"
        ], 
        "name": "Walk and Talk Baltimore", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/614/datas/small.jpg", 
        "slug": "walk-and-talk-baltimore", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/walk-and-talk-baltimore", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  This map displays Baltimore City property taxes.  While the city of Baltimore makes property taxes available to the public through an online database and form search, there is no (known to me) easily accessible geographic visualization of this data.\n\nThis map will allow homeowners to quickly compare their property tax values to neighbors, potentially alerting them to the need for a reassessment.  Since property taxes are directly proportional to property value, this map also provides interesting views on the the variation of property values throughout the city.\n\nThis app was inspired by the AppsForPhilly \"How AVI Affects Taxes\" map (http://apps.axisphilly.org/avi-map/).\n\nFuture improvements on the map will focus on incorporating tax credit information to depict actual paid property tax after credits have been assessed.  This will give a better impression of the actual tax burden of homes dependent on the resident's income.\n\nNote: The link may or may not work depending on whether the final map files have been uploaded to the server yet.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  a.tiles.mapbox.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "ryan-j-smith"
        ], 
        "name": "Baltimore City Property Tax Map", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/576/datas/small.PNG", 
        "slug": "baltimore-city-property-tax-map", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/baltimore-city-property-tax-map", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  There are few quality and free resume development sites that are accessible to users with limited computer skills. The goal of this project is to develop a tool that allows individuals to easily walk through the process of developing a basic resume utilizing an interview process. Potential users will include the general public, libraries and other workforce development organizations. A2J Author and HotDocs were utilized in the development process.\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "andreas4", 
            "stephbaltimore", 
            "kbladow"
        ], 
        "name": "EZ Resume", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/533/datas/small.png", 
        "slug": "ez-resume", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/ez-resume", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  A true nationwide civic reporting application.  Unlike other civic reporting apps, the Pothole Alert app can show different service request lists in different cities to accommodate different municipal needs.  Currently accepted by the cities of San Francisco, San Diego, Boston, Baltimore, and soon Washington DC.\n\nI am not an organization with 50+ employees.  I am not sure why you have such tough restrictions for an app challenge when someone myself has created a tool that is much needed by the citizens of San Diego.  Please amend the eligibility restrictions.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  savemytire.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "sharpwitz"
        ], 
        "name": "Pothole Alert", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/095/329/datas/small.jpg", 
        "slug": "pothole-alert", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/pothole-alert", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n        \n    \n\n\n\n      \n  Inspiration\n\nWhen we were trying to come up with some sort of project that would benefit the Baltimore community as a whole, we realized, we needed to somehow help the homeless and the unemployed. That's because Baltimore has a very high unemployment rate, which surpasses that of Maryland state and the USA. We realized many homeless people had already given up searching for the jobs since that is a very time taking activity and not always successful, hence we tried to ease this process by enabling the employers to post jobs, and enabling the users to search through jobs and apply directly from the website, by creating their resume online.\n\nWhat it does\n\nWe wanted to expand the user interface for it to include other people as well, such as people moving in and people currently living in the Baltimore area. Since not everyone, especially the homeless, has a cellphone, we made a website that is accessible and viewable from both computers and phones. This website integrates information from Open Data Baltimore with Google Maps API to show closest clinics, restaurants, shelters, grocery stores, job openings, and available houses for buying and renting to the location you put in. In addition to that, employers can post jobs, specifying salaries, description of the job, location of it, previous experience necessary and specific questions they want the employees to answer. Users can make resumes online and apply to different jobs. Others can post info about a house they are selling or renting out, and users can contact them if they are interested in buying or renting. It also shows graphs about unemployment.\n\nHow I built it\n\nWe used CSS, JavaScript, and HTML for the front end and design with the integration of JQuery.js, d3.js, d3pie.js for creating graphs. For the back end we used PHP and MySQL to load data into the database, and fetching it when we want to find for example closest clinics to one's location.\n\nChallenges I ran into\n\nThe location given in the datasets for longitude and latitude was incorrect, so we used Geocoding from Google Maps API to find the actual latitude and longitude using the address. The d3 was not able to graph the csv file at first, due to the very messy data, which we had to the repolish.  \n\nAccomplishments that I'm proud of\n\nMost of the website is functional. We finally got the jobs that people post to show up on the main page google maps. The d3 graphs also work. We got the DataTable to work, which was at first impossible since we had too much data. Over 275,000 lines. \n\nWhat I learned\n\nI learned how to use d3Pie, Google Maps API, DataTables, and bootstrap library. \n\nWhat's next for MoreAboutBaltimore\n\nWe need to make sure the domain works, and try to get the crime locations to show up on the map. \n\n\n\n        \n    Built With\n\n    php5mysqljavascripthtml5css3d3.jsflowtype.jsjqueryphpmyadmingoogle-mapsbaltimore-open-data\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "alaleh1191", 
            "louishenri13"
        ], 
        "name": "MoreAboutBaltimore", 
        "photo": null, 
        "slug": "moreaboutbaltimore", 
        "tagline": "Learn more about Baltimore through an interactive map system and apply for jobs including a resume builder.", 
        "tags": [
            "php5", 
            "mysql", 
            "javascript", 
            "html5", 
            "css3", 
            "d3.js", 
            "flowtype.js", 
            "jquery", 
            "phpmyadmin", 
            "google-maps", 
            "baltimore-open-data"
        ], 
        "url": "https://devpost.com/software/moreaboutbaltimore", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  This web app allows two users to play a variant of the game Go.\nWe used d3.js in order to generate the Voronoi diagrams and used a read-only API for OpenStreetMap called Overpass in order to find the intersections of streets. \nOnce we found the coordinate of intersections, we plotted them onto Google Maps using the Maps JavaScript API.\n\nThe goal of the game is to capture as much territory as possible - you do this by selecting an intersection from\nthe possibilities, and the cell around it represents the amount of area you gain. The cell isn't completely arbitrary --\nit's a Voronoi diagram, a visualization that partitions a plane into regions closer to a specific point than any other.\n\nSince the points we picked for this app are street intersections, we're playing Go on the city streets! \nAs of the demonstration, we've uploaded four maps on which to play -- one in Baltimore centered at JHU, one in New York, one in Hong Kong, and one in Rome.\n\nYou may see the game in action here.\n\n\n\n        \n    Built With\n\n    javascriptcsshtmld3.js\n  \n\n        \n    Try it out\n\n    \n        \n  \n  zdavidli.github.io\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 3, 
        "members": [
            "zdavidli", 
            "jyim6", 
            "jpeykar96"
        ], 
        "name": "Capture the City", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/288/164/datas/small.png", 
        "slug": "capture-the-city-ae6o8j", 
        "tagline": "Play Go on city streets using Google Maps", 
        "tags": [
            "javascript", 
            "css", 
            "html", 
            "d3.js"
        ], 
        "url": "https://devpost.com/software/capture-the-city-ae6o8j", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nPebble is cool, and Baltimore is dangerous.\n\nWhat it does\n\nAndroid app has map of dangerous areas and can plot route. Pebble calls emergency contact based on accelerometer motion.\n\nHow I built it\n\nAndroid SDK, Google Maps API, Pebble JS API, Matlab, Baltimore Open Data.\n\nChallenges I ran into\n\nCommunication between Android and Pebble, and map algorithm to avoid dangerous areas.\n\nAccomplishments that I'm proud of\n\nPebble integration and heat map.\n\nWhat I learned\n\nProgramming for a wearable, using Google Maps API.\n\nWhat's next for SafeRock\n\nBetter map routing algorithm, more Pebble integration.\n\n\n\n        \n    Built With\n\n    javamatlabjavascript\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "tchung12", 
            "jsham", 
            "tylerslee", 
            "ahui21"
        ], 
        "name": "SafeRock", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjg4LzE4MC9kYXRhcy9vcmlnaW5hbC5qcGc=/saferockicon.jpg?signature=9e575fcdd5b5ddc96bfc7df5e7059e769ca8775b", 
        "slug": "saferock", 
        "tagline": "Baltimore safety app with Pebble integration.", 
        "tags": [
            "java", 
            "matlab", 
            "javascript"
        ], 
        "url": "https://devpost.com/software/saferock", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  In the Age of Information, it is surprising how a large percentage of the population can be very misinformed about current events and unaware of their surroundings. In addition, it can be a daunting task to research past events and analyze trends of the local government 's interaction with the community. In a large city, knowledge of this information is not only an important requirement for good citizenship, but also for personal well being. In order to present the large amount of open source data provided by the city of Baltimore in a user friendly manner, we have created a web app known as the Urban Oracle!\n\nThe Urban Oracle was created using a combination of Python, JavaScript, and HTML. By interfacing with the Google-Maps API, it can provide a clear and aesthetically pleasing view of the city. In addition, information taken from the Baltimore Open Data website and accessed through the use of the Socrata API, local records can be visualized in real space, in order to provide an intuitive feel for where local government interactions have been and currently are occurring. In addition, the change in the geographic distribution of the data can be monitored as a function of time. Finally, Urban Oracle is capable of providing correlation analysis of two separate events, in order to satisfy the personal interest of the user. These comparisons can be viewed as either scatter plots or by displaying two sets of data at once.\n\nWhile this idea was only applied to information regarding Baltimore, the foundation has been laid to expand this service to other cities. Urban Oracle hopes to serve as a stepping stone to increased community involvement and awareness. As it continues to be developed, it will be able to evolve into a valuable third party service for the local population.\n\n\n\n        \n    Built With\n\n    pythonhtmljavascriptgoogle-maps\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "aggiefan13", 
            "mpacella88", 
            "trevorz"
        ], 
        "name": "Urban Oracle", 
        "photo": null, 
        "slug": "hophacks2015", 
        "tagline": "Visualize large, open source data using Google maps API and analyze geographic distribution of the same data", 
        "tags": [
            "python", 
            "html", 
            "javascript", 
            "google-maps"
        ], 
        "url": "https://devpost.com/software/hophacks2015", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nBaltimore City has the highest property tax rate in Maryland.  Property tax credits are provided by the state but homeowners are often unaware of them or the requirements for eligibility.  Furthermore, the website describing this program is densely written and difficult to understand.\n\nThe purpose of this project is to make the homeowner's tax credit and the data behind it more accessible.  We hope this will encourage more homeowners to learn about and apply for the tax credit.  Additionally we hope this will help community activists identify, inform, and assist other individuals who may qualify but have not yet applied.\n\nWhat it does\n\nThe project is primarily a web map intended to identify both owner occupied properties in the city as well and illustrate which homes were receiving a tax credit.\n\nAdditionally, we constructed a RESTful API for live access to official property tax records for each property included in the map.\n\nTo increase the usability and exposure of these elements, we built a website to provide awareness about the program as well as to highlight the map and provide information about how people can apply for the credit.\n\nHow we built it\n\nProperty data was gathered from the Baltimore City Open GIS portal.  This property data was processed in Python using the pandas and geopandas modules.  It was converted to raster tiles and styled in Tilemill.  Tiles were uploaded to Mapbox for hosting.  \n\nThe property tax API was generated by building a Flask app to generate the appropriate POST requests to cause the server to send back the HTML-formatted records for the requested property.\n\nThe website was built using Jekyll beginning with a pre-existing template and the site was hosted as a static page on github.\n\nLinks to github repos\n\n\nMap work in Python\nFlask API for tax data\nWebsite Repo\n\n\nChallenges we ran into\n\nNot all of Maryland's data is \"open\".  Current records on property and tax information are not easily linkable or accessible via any API.\n\n\n\n        \n    Built With\n\n    pythonmapboxhtmlflaskjekyllgithub\n  \n\n        \n    Try it out\n\n    \n        \n  \n  ryan-j-smith.github.io\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 7, 
        "members": [
            "ryan-j-smith", 
            "geoffreyn"
        ], 
        "name": "Baltimore Tax Credit Map", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjg4LzI0OS9kYXRhcy9vcmlnaW5hbC5QTkc=/Capture.PNG?signature=bd74429a3ee6daa7de070f61c00e1306b9e99df3", 
        "slug": "baltimore-taxreduce", 
        "tagline": "Informing and empowering Baltimore homeowners with data visualization and simplified access to tax data", 
        "tags": [
            "python", 
            "mapbox", 
            "html", 
            "flask", 
            "jekyll", 
            "github"
        ], 
        "url": "https://devpost.com/software/baltimore-taxreduce", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Potholes of B'More\n\nWelcome to Potholes of B'More, my (Andrew Fan/Sparen of Ir\u00eda) tentative submission for HopHacks Fall 2015, held from Sept 11 to Sept 13 at Johns Hopkins University.\n\nThis hack is a (currently) non-interactive web based tool that marks years worth of Baltimore City Pothole Data (see: Baltimore City Open Data) on a map using Google Maps's API, from most recent to oldest. The possibilities this project offers in terms of comparisons and correlations to income levels, housing density, and the like in the City of Baltimore are quite broad and it may have significant uses in the future depending on which features are implemented.\n\nContributions?\n\nUnfortunately, this repo is closed to contributors as it is for a hackathon. After the hackathon has ended, it may be repurposed or may stay here. Feel free to fork it after Sept 13, 2015.\n\nQuestions and Comments\n\nIf you have a question or comment, feel free to post it as an issue or send me a PM via DevPost.\n\n\n\n        \n    Built With\n\n    javascripthtml\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "sparenofiria"
        ], 
        "name": "Potholes-of-B-more", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/287/484/datas/small.png", 
        "slug": "potholes-of-b-more", 
        "tagline": "Hophacks Fall 2015", 
        "tags": [
            "javascript", 
            "html"
        ], 
        "url": "https://devpost.com/software/potholes-of-b-more", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nWe were inspired by a teacher in Baltimore city who moved all the way from California in order to give his students opportunities thet he knew they wouldn't get otherwise.\n\nWhat it does\n\nIt connects under privileged schools with much needed resources from all over the world.\n\nHow we built it\n\nWe used the website template software Wix, and CSS to create the artistic aspect of the website\n\nChallenges we ran into\n\nThe Wix software isn't compatible with multiple computer users\n\nAccomplishments that we're proud of\n\nWe are very proud that we finished \n\nWhat we learned\n\nWe learned the basics of CSS and HTLM and hacking skills.\n\nWhat's next for The Future Knowledge Foundation\n\nWe hope that TFKF can develop into a substantial foundation in which corporations, individuals and small businesses can contribute to the implementation of our mission statement in the necessary schools all over the world. \n\n\n\n        \n    Built With\n\n    htmlwixcreative-market\n  \n\n        \n    Try it out\n\n    \n        \n  \n  carolinacasseldurr.wixsite.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "carolinadurr"
        ], 
        "name": "The Future Knowledge Foundation", 
        "photo": null, 
        "slug": "the-future-knowledge-foundation", 
        "tagline": "A platform that gives the ability to connect underprivileged schools with much needed resources and opportunities.", 
        "tags": [
            "html", 
            "wix", 
            "creative-market"
        ], 
        "url": "https://devpost.com/software/the-future-knowledge-foundation", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      An example of a parking display sign.\n    \n  \n    \n    \n      What the UMBC parking lots looks like.\n    \n  \n    \n    \n      Running the simulation with four Parking Sensor Clients connected to a Sign Display Server.\n    \n\n    \n\n\n\n      \n  Inspiration\n\nParking at UMBC can be time-consuming, given my personal experience I would estimate parking to take 15-40 minutes if everything is near capacity. This is a waste of time that increases emissions while wasting student's gas; a solution to optimize this is vital.\n\nProject Proposal\n\nI want to make a solution that will optimize people's time and reduce emissions by optimizing the parking flow at UMBC.  I am proposing a system that will track how many spots are available in which parking lots. So that when students drive into UMBC expecting to find a parking spot in a reasonable time, in the best possible location, they know exactly where to go.\n\nHow are we going to track what spots are available?\n\nUsing pneumatic vehicle counters on every parking lot entrance/exit. These\nvehicle counters will be able to collect...\n\n\nDirection of Travel (in or out of the parking lot)\nSpeed\nThe distance between vehicles\nThe length of each vehicle\n\n\nper vehicle. When this data is collected over a substantial period of time\nit can be used to make infrastructure improvements, view seasonal trends,\nimprove traffic flows, and much more.\n\nWhile all this data can be collected optionally, the only thing we really\ncare about for this application is the direction of travel for each car.\n\nHow will this data be transferred from the parking lot into the cloud?\n\nUsing Symphony Link from Link Labs. Symphony Link is a wireless solution for\nenterprise and industrial customers who need to securely connect their IoT\ndevices to the cloud. Symphony Link is optimized for low power and wide range\nwhich makes it a great candidate for this project.\n\nRXR / RLP Communication Modules\n\nEach parking sensor device will need a Link Labs RXR or RLP Communication Module\nwhich can connect to the Link Labs Gateway.\n\nGateway\n\nThis powerful device manages security, uplink and downlink, and much advanced low power,\nwide-area (LPWA) features only available with Symphony Link. For data backhaul, the gateway \nfeatures ethernet, WiFi, 3G cellular, or 4G LTE.\nThe Link Labs Gateway should be installed on one of the two cellular towers that\nare registered to the University of Maryland: Baltimore County. This would give\nthe Gateway a great enough range to cover the entire campus. Although more gateways\nmight need to be installed if capacity is too great (more than a hundred modules\nconnected to one gateway).\n\nHow will students view this data from the cloud?\n\nOnce we get the data to the cloud, it can go anywhere we want it to go. While\nmost people would make this a \"Parking App\", I think that is problematic. We\nshould not encourage students to drive while looking at their phone. This is not\na \"hands-free\" app and will need to be looked at in the car. An app is not the\nanswer to this question.\n\nWe should install Symphony connected signs that show up-to-date numbers for the\ncars that are in each lot. These signs need to be in strategic locations (such as\nthe UMBC entrances and in front of the Lots, etc.) that can be discussed and modified\nat a later date with more specifics. These signs will display a table of the selected\nlots and how many available spaces it has.\n\nThe display signs will use the same RXR/RLP Communication Modules to connect to the\nSymphony Network.\n\nProposal Architecture Diagram\n                   _                                  \n                 (`  ).                     _           \n                (     ).      The       .:(`  )`.       \n               _(       '`.     Cloud  :(   .    )      \n           .=(`(      .   )     .--    `.  (    ) )      \n          ((    (..__.:'-'   .+(   )     ` _`  ) )                 \n          `(       ) )       (   .  )       (   ) \n            ` __.:'   )     (   (   ))       `-'.\n                   --'       `- __.'\n\n                              ^\n                              |\n\n                        ____\\__/___\n                        { LinkLabs }\n |^|  --> --> --> -->   | Gateway  |\n |@|   ^                {----------}  <-- <-- <-- <-- <-- <--\n       |                      ^                              ^\n       |                      |                        |^|   |\n       |                      |                        |@|   |\n       |                 //////////                          |\n       |                 |  UMBC  |                          |\n                         | 1: 15  |   The Display Device     |\n      |^|                | 2: 50  |\n      |@|                | 3: 2   |                         |^|\n                         |--------|                         |@|\n                         |        |\n\nProposal Diagram Key\n|^| = Parking Sensor\n|@|\n\n\n--> = Symphony Link\n\nThe Simulated Proposal in Action\n\nFor this Hackathon, I created a simulation of my design proposal to convey a better understanding of how this system will work. I did this by creating a \"Sign Display Server\" and \"Parking Sensor Client(s)\" that would simulate how a large-scale deployment of this project would look when developed and deployed. Once the \"Sign Display Server\" is executed, it will accept an unlimited amount of connections from \"Parking Sensor Clients\". Each parking sensor client has the ability to simulate either a \"Car Leaving Event\" or a \"Car Entering Event\" in both manual and automated ways. All of the data is then collected, combined, and displayed to the user via the \"Sign Display Server\". Design Diagrams can be found below.\n\nHow I built it\n\nUsing python, I used the multiprocessing connection libraries along with many many threads to create this simple server-client model. Design Diagrams can be found below.\n\nSimulation Architecture Diagram\n                    //////////                          \n                    |  UMBC  |    The Display Device                         \n                    | 1: 15  |      / Parking Server.\n |^| --> --> -->    | 2: 50  |\n |@|                | 3: 2   | <-- <-- <-- <-- <-- <-- |^|\n                    |--------|                         |@|\n                    |        |\n\nSimulation Diagram Key\n|^| = Parking Sensor\n|@|    Client\n\n\n--> = TCP Connection\n\nIn order to simulate the Symphony Link network, I turned what would be the Display Sign Device into a server that the parking sensors instantly connect to. This connection can be seen as the direct replacement for the much more complex Symphony Link system.\n\nChallenges I ran into\n\nNetworking. I originally wanted to make a demo using our Symphony Link Gateways, Modules, and Backend; but I could not connect to our backends through the network's firewall. So since the connection to our backend was blocked by the network, I would have had to get a gateway with a cellular connection which I did not have access to as of implementing this project. So I improvised by creating a complete simulation.\n\nAccomplishments that I'm proud of\n\n\nDesigning a Solution to UMBCs parking problem.\nNetworking in Python.\nQuick Prototyping.\n\n\nWhat I learned\n\n\nNetworking in Python.\n\n\nWhat's next for IoT Parking Solution for UMBC\n\nI would like to propose a legitimate solution to UMBC to finally solve our parking issue.\n\n\n\n        \n    Built With\n\n    python\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "tsteinholz"
        ], 
        "name": "IoT Parking Solution for UMBC", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/544/933/datas/small.jpg", 
        "slug": "iot-parking-solution-for-umbc", 
        "tagline": "Finding a parking spot at UMBC during height school hours can take 30-40 minutes. This needs to change.", 
        "tags": [
            "python"
        ], 
        "url": "https://devpost.com/software/iot-parking-solution-for-umbc", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration: We want to connect Baltimore's programs to the community in order to enable them to access the resources they need.\n\nWhat it does: Streamlines the process for homeless/displaced/people in need for quick access to healthcare, encompassing physical, mental, and emotional health. Allows the user to gain information regarding facilities that can provide them with the specific care they need.\n\nHow we built it: We developed a Reactive webpage that utilizes various APIs and database management tools, such as Firebase, in order to develop a quick and responsive application.\n\nChallenges we ran into: Some challenges we ran into include, setting up the database, processing of information, parsing data, creating a fluid layout, and maintaining overall simplicity.\n\nAccomplishments that we're proud of: We're proud of the fluidity of the overall layout of the website. In addition to this, we're also extremely proud of the fact that we were able to parse natural language.\n\nWhat we learned: We expanded our knowledge on full stack development skills.\n\nWhat's next for Baltimore's Community Resources: Our future goals include dynamically loading new locations onto the website, adding on additional services beyond those provided, and to improve user experience while using the application.\n\n\n\n        \n    Built With\n\n    reactjavascriptfirebasecsshtmlgoogle-mapsbootstrapsemantics3\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "akshayaganesh", 
            "mananbhalodia2", 
            "ndorogoyer"
        ], 
        "name": "Baltimore's Community Resources", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTMxLzQ4Ny9kYXRhcy9vcmlnaW5hbC5qcGc=/homelessbbq-630x310.jpg?signature=4859992b5b0514a2bd4c68bc01dee0024526bef4", 
        "slug": "baltimore-s-community-resources", 
        "tagline": "We hope to bring Baltimore institutions to the people that need them.", 
        "tags": [
            "react", 
            "javascript", 
            "firebase", 
            "css", 
            "html", 
            "google-maps", 
            "bootstrap", 
            "semantics3"
        ], 
        "url": "https://devpost.com/software/baltimore-s-community-resources", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nInspired by concept of food/healthcare deserts. Wanted to maximize efforts to help areas with insufficient access to resources.\n\nWhat it does\n\nEvaluate impact of new health center sites on accessibility of healthcare to target population. \n\nHow we built it\n\nApplied publicly available data to identify low income areas and classify them based on population density and access to vehicles. Located HRSA Health Clinics. Used matlab to generate a set of points within target neighborhoods. Used python to make calls to google API to find closest health clinic for each target neighborhood. Found shortest transit time and generated heatmap using python. Able to add new health clinics to compare impact of different sites.\n\nChallenges we ran into\n\nLimited submissions to Google Maps API. Very difficult to track each target site within neighborhoods across datasets.\n\nAccomplishments that we're proud of\n\nWe\u2019re proud of how much research we were able to do and how much data we could integrate into our system. \n\nWhat we learned\n\nLearned Flask and more about Python development. Learned about HRSA health clinics and the state of healthcare accessibility in Baltimore. \n\nWhat's next for Maptimize?\n\nAdd different types of healthcare providers to maps. Expand map framework to locations beyond East Baltimore.\n\n\n\n        \n    Built With\n\n    pythonmatlabapigoogle-mapsflask\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n        \n  \n  drive.google.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "guojoanna", 
            "dirani2"
        ], 
        "name": "Maptimize", 
        "photo": null, 
        "slug": "maptomizemedhacks2017", 
        "tagline": "Optimizing health care through transit mapping", 
        "tags": [
            "python", 
            "matlab", 
            "api", 
            "google-maps", 
            "flask"
        ], 
        "url": "https://devpost.com/software/maptomizemedhacks2017", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  We are applying for the Software prize.\n\nThe idea came from a simple question, \u201cWhat are the restaurants and grocery stores do with all the excess food at the end of the day?\u201d The only answer that came to mind is that it goes in the TRASH. Food that others, who are food insecure, could eat. Food that is still fully edible. Food that could be kept out of landfill and help people of Baltimore. That is what my brother and I set out to find a solution for. \n\nDuring a three day Hackathon at Digital Harbor Foundation called Harbor Hacks, we came up with a solution. We are built a website that would allow people, restaurants or supermarkets to post food that is headed for the dumpster but is still good to eat and distribute it to people that need it on a first come first served basis.\n\nThe poster would have control over the listing and could control when the item would be disposed. This project would also not hold the giver responsible of any liability. The recipients would have to sign in and sign a waver before they could search for items available.\n\nThis website was built to help get food to go into the hands of those that need it. It will add food availability to homeless shelters and individuals. This will specifically help people that are food insecure because it would protect their dignity and allow them to provide food for their family, rather than feeling embarrassed that they have to visit a pantry. It is a viable alternative to a soup kitchen or a pantry and it would keep our city\u2019s food waste out of the trash and into the hands of the less fortunate.\n\nTest the site here!\n\n\n\n        \n    Built With\n\n    phpphpmyadminsqlmysqlhtmlhtml5csscss3\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "trianreallyhard", 
            "dordal"
        ], 
        "name": "Full Circle", 
        "photo": null, 
        "slug": "full-circle-7ip3c6", 
        "tagline": "A site that connects food being wasted to those who really need it.", 
        "tags": [
            "php", 
            "phpmyadmin", 
            "sql", 
            "mysql", 
            "html", 
            "html5", 
            "css", 
            "css3"
        ], 
        "url": "https://devpost.com/software/full-circle-7ip3c6", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Building the frame\n    \n  \n    \n    \n      Computering\n    \n  \n    \n    \n      Putting it all together\n    \n  \n    \n    \n      Almost....\n    \n  \n    \n    \n      Yay!\n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nWe're both web developers - so, we wanted to work on something that used technology but in a completely different way.\n\nWhat it does\n\nIt's a mirror that tells you the weather, time and shows a random XKCD comic every day :-) \n\nHow we built it\n\nThere were so many steps! First we had to find the materials. This included sourcing two way mirror from a local glass company called Mirror Crafter in South West Baltimore. Then we built the frame from wood and tore apart an old monitor. We then built the set up raspberry pi and monitor into the frame.\n\nChallenges we ran into\n\nWe really had to think outside of the box since our tools were limited. We also had to remember how to navigate without a mouse (harder than I remember). \n\nAccomplishments that we're proud of\n\nThe wood work. We know computers but it was really great to built something that turned out really solid and pretty lovely. It's actually a thing that we'll be proud to hang on the wall in our house.\n\nWhat we learned\n\nWe learned a lot about working with a raspberry pi from the command line and woodworking.\n\nWhat's next for Smart Mirror\n\nWe'll probably keep customizing the display but mostly just hang it on our wall. \n\n\n\n        \n    Built With\n\n    magic-mirror-(a-smart-mirror-framework-built-on-electron)raspberry-pi\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "aibrahim2k2"
        ], 
        "name": "Smart Mirror", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/423/datas/small.JPG", 
        "slug": "smart-mirror", 
        "tagline": "It's the mirror of the future", 
        "tags": [
            "magic-mirror-(a-smart-mirror-framework-built-on-electron)", 
            "raspberry-pi"
        ], 
        "url": "https://devpost.com/software/smart-mirror", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nTest stuff\n\nWhat it does\n\ntests stuff\n\nHow I built it\n\nwith tests\n\nChallenges I ran into\n\nIt tested me\n\nAccomplishments that I'm proud of\n\nMy tests\n\nWhat I learned\n\nHow to test\n\nWhat's next for Test Project\n\nMore tests\n\n\n\n        \n    Built With\n\n    rspec\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "chexmex222"
        ], 
        "name": "Test Project", 
        "photo": null, 
        "slug": "test-project-olbvey", 
        "tagline": "It's a test", 
        "tags": [
            "rspec"
        ], 
        "url": "https://devpost.com/software/test-project-olbvey", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  My own rain water harvesting system has been great, however it can easily run dry after a few weeks without rain - I think it can consume and use water smarter.\n\nControls the out flow to the garden of caught rain water in the catch tanks in a smart way, based on many factors, such as how much water is left in the tanks, when the next rain will be and how much moisture is in the ground.\n\nUsing an Arduino to read from moisture sensors, a sonar for water level and a rain sensor we control when to pump water into the garden.\n\nReading sensors, building apps.\n\nWe were able to complete a final package for the sensor and pump.\n\nSoftware is hard.\n\n\n\n        \n    Built With\n\n    arduino\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 3, 
        "members": [
            "vinylfox", 
            "schaki"
        ], 
        "name": "WaterBoard", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/294/091/datas/small.jpg", 
        "slug": "waterboard", 
        "tagline": "Catching rain water in a barrel? Use that water smarter.", 
        "tags": [
            "arduino"
        ], 
        "url": "https://devpost.com/software/waterboard", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nOur team liked the idea of \u201cHack for Good.\u201d There was a discussion on how we can\nhelp the community.Many ideas were tossed around until one team member mentioned\nbicycles.\n\nDonQuiSoft was founded by Greg Winton and Steve Lafferty. The App our team will\ncreate for this Hackathon is in memory of Steve. Steve passed away after a\nterrible bike accident.\n\nThe Problem We'd Like to Solve\n\nHelp bike riders broken down and in need of assistance. This is a peer-to-peer,\npay-it-forward initiative for the bike rider community.\n\n\u00a0\n\nWhat it Does\n\nThe version we are about to build will be the main feature of the \u201cLaffer App.\u201d\nA bike rider will be able to send out a \u201cBike Signal\u201d to call for assistance.\nHelpers in the area will be alerted and may accept the call. The rider will will\nget periodical updates upon estimated arrival for help. All profiles in this\nversion are hidden for security reasons. The Helper arrives at the bikers\nlocation and provides assistance.\n\nHow We Build it\n\nNo code was written prior!\n\nThere are 2 versions for the App\n\nThe thinking behind 2 platforms is: More people/helpers to reach out too.\n\n\nA iPhone version developed by Greg\nAn Android version developed by Tony\n\n\n\u00a0\n\nIt is supported by a NodeJS backend developed by Roger\n\nChallenges I ran into\n\nThere are so many features we like to add to \u201cLaffer\u201d. The Hackerthon is to\nshort! We ideal like to do a demo for everyone. The specifics are not determined\nas of now.\n\nWorking without a designer is not something we are used too.\n\nAccomplishments\n\nWe see our biggest accomplishment in our strength working together as a team.\nComing on your day off, to work on what we love to do, proves DonQuiSoft has the\nbest developer team out there.\n\nHaving met so many great, talented and inspirational people.\n\n\u00a0\n\nWhat I learned\n\nEven with the best efforts there is always something unexpected.\n\nCommunication has to be #1 in working together.\n\n\u00a0\n\n\u00a0\n\nWhat\u2019s next for \u201cLaffer\u201d\n\n\nHave the designer create art .\nBuilding \u201cLaffer\u201d for an official release.\nThere is a list of features, everything from login to gamification.\nWe have 2 more business models for \u201cLaffer\u201d\n\n-   Bike Clubs\n\n-   Bicycle Retailers.\n\n\n\n        \n    Built With\n\n    node.jsmongodbmeaniosandroid\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "donquirog", 
            "tmanb", 
            "katamutter", 
            "donquigreg"
        ], 
        "name": "Laffer", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk0Lzk4MS9kYXRhcy9vcmlnaW5hbC5wbmc=/blue.png?signature=fb85e18cd7e86356e748b753b4b4cd96f9e7212d", 
        "slug": "laffer", 
        "tagline": "Peer-to-peer bike help application", 
        "tags": [
            "node.js", 
            "mongodb", 
            "mean", 
            "ios", 
            "android"
        ], 
        "url": "https://devpost.com/software/laffer", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  BaltFut, Baltimore in the Future Tense\n\nFor several years now \u201cThe Big Moon Dig\u201d has been working on reviving human space exploration using 21st century processes, but \u2013 when you can hear the gun fire from your computer terminal it is time to do something --.\n\nSince the unrest last spring, we have been working on applying the latest science to the problems of Baltimore and to the world.  Fortunately there are now a lot of breath taking insights available from new science that we can apply to our problems.  Of course these arguments start out technical and rather complex.\n\nOur task at the Hackathon 2015 is to condense some of the material we have developed into a TED style talk that is accessible to the general public.  This requires a few really good graphics supported by a heartfelt and concise talk running 10 or 18 minutes.\n\nOur specialty is the big-picture, which we find mysteriously missing at the moment.  You can find endless stories of zombies or machines run amuck, but just try to find stories of real people facing the real problems of the 21st century with both heart and mind.\n\nOur efforts to date are available at:\n\nBig Moon Dig / Essay\nhttp://bigmoondig.com/Essays/BMDWhyWhat.html\n\nThese efforts include a video we made for a contest this fall on solutions for the California drought.  In the big-picture, California and Baltimore are on the same planet.\n\nThis fall our task is to develop materials for the University of Baltimore course \u201cDivided Baltimore\u201d ( http://blogs.ubalt.edu/dividedbaltimore/ ) and the MIT Course \u201cULab: Transforming Business, Society, & Self\u201d ( https://courses.edx.org/courses/course-v1:MITx+15.671x+3T2015/info ).  Our most important activities this weekend are to practice explaining our insights clearly and developing contacts.\n\nThis work is in the category of \u201cThe Big Picture\u201d, but the closest you have listed is \u201cSeafarer\u2019s Choice\u201d. \n\nTom Riley\nTomRiley@WoodwareDesigns.com\nThe Big Moon Dig\n\nUpdate Sunday morning:\n\nI am now rewriting the material into the form of a series of short TED talks.  Each will have a few good graphics and a straight forward exploration.  The first will setup up the idea and the last will give the specific proposals to address the problem.  I now have a first draft for the first TED talk.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  bigmoondig.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "tomriley"
        ], 
        "name": "BaltFut, Baltimore in the Future Tense", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/290/626/datas/small.jpg", 
        "slug": "baltfut-baltimore-in-the-future-tense", 
        "tagline": "We are working on applying the latest science to the problems of Baltimore.  The new insights are breathtaking.", 
        "tags": null, 
        "url": "https://devpost.com/software/baltfut-baltimore-in-the-future-tense", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Seafarer's Journey\n\nAn infinite multiplayer runner game (which is pirate themed) built in one weekend for the Baltimore Hackathon.\n\nTry the game on your machine:\n1) Connect to DHFTC\n2) In your web browser, go to 192.168.1.241:8080\n\nSummary:\nThe overall goal for the weekend was to make a fun game that we could share and play with our friends. We decided that we wanted to program for fun again. We spend so much time working on corporate projects or college projects that we wanted to take this opportunity to just develop something that is fun to make and use. We also wanted to incorporate the pirate theme of the hackathon into our project. Our end product: An infinite pirate themed side scroller. \n\nHow we prepared:\nPrior to Friday, we installed the API's we planned on using for the hackathon and set up a git repository to help us coordinate as we build our game. We began this weekend with nothing more than a dream and a good night's sleep.\n\nTools we used:\nWe used and integrated multiple open source APIs to help us build our game.\n\n\nNode.js: \"A JavaScript runtime built on Chrome's V8 JavaScript engine\"(*description taken from node.js webpage)\nExpress.js: Allows Webserver functionality\nPhaser.js: An html5 game engine\nSocket.io: Provides server/client functionality\n\n\nAll our graphics were generated using the beta version of Pyxel Edit. This tool allowed us to generate all the sprites and images displayed in Seafarer's Journey.\n\nWhere are we sitting: The far corner of the gym, next to the door to outside\n\nWhat would you like to do if you had more time/money? Future goals would be to host the game on a public webpage so more people could enjoy our hard work. Another thing that would be nice is improving the graphics by adding more details and making more sprites.\n\nChallenges we ran into:\nOne of the biggest challenges we ran into was setting up the server/client relationship to get other players to show up as a sprite in our world. Being able to send their position so that we could view them updating in real time was a tricky problem.\n\nAccomplishments that we're proud of:\n\n\nAbility for anyone on the network to connect to the game\nOther players showing up in our game instance where they are on the level.\nParallax style background moving at various speeds\n100% custom artwork made exclusively during the hackathon.\n\n\nWhat we learned:\nDave - Fun programming is still hard programming.\nMatt -  Graphics take a lot of time and patience.\n\n\n\nInstallation\n\nInstall node.js\n\nRun the followng commands using npm:\n\n\nnpm install phaser\nnpm install express --save\nnpm install socket.io\n\n\nOn Windows, you may have trouble using npm to install socket.io (may be fixed sometime soon) with nodejs 4.0.0. \nAs a temporary workaround, do the following:\n\nDepending on the date, a simple:\n\n\nnpm uninstall socket.io\nnpm install socket.io \n\n\nmay fix your issue - if the change to socket.io has been published to npm. If not, do the following:\n\n\nGo to C:\\Users\\%YOUR USERNAME%\\node_modules\\socket.io\\package.json\nChange the engine.io dependency from 1.5.2 to automattic/engine.io#7e77dd5\nAfter that edit, cd into your node_modules\\socket.io directory, and run npm install --production\n\n\nClick here to read more.\n\nUsage\n\ncd into the downloaded repo and run:\n\n\nIn a terminal: \"node app.js\"\nnavigate to http://localhost:8080 in your web browser\n\n\nContributing\n\n\nFork it!\nCreate your feature branch: git checkout -b my-new-feature\nCommit your changes: git commit -am 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request :D\n\n\nCredits\n\nWritten by David Kramer and Matthew Hammel in one weekend.\n\nLicense\n\nThe MIT License (MIT)\n\nCopyright (c) <2015> \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n        \n    Built With\n\n    phaser.jsexpress.jsnode.jssocket.io\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 2, 
        "members": [
            "davekram", 
            "mahammel"
        ], 
        "name": "Seafarer's Journey", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk1LzU5Ny9kYXRhcy9vcmlnaW5hbC5wbmc=/thumbnail.png?signature=f6ff49200494658ab88ff326bcdcccab8831c7c4", 
        "slug": "infinitepiraterunner", 
        "tagline": "An infinite multiplayer runner game (which is pirate themed) built in one weekend for the Baltimore Hackathon.", 
        "tags": [
            "phaser.js", 
            "express.js", 
            "node.js", 
            "socket.io"
        ], 
        "url": "https://devpost.com/software/infinitepiraterunner", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  1:00 update:  Because we have nothing worth demonstrating, we have decided to disqualify ourselves so we can continue to work.\n\nA refurbished WW2 helmet\nTwo circuits that will run the coils\nThe mounting for the circuits and PVC pipes.\nTwo wound secondary tesla coils.\nTwo support structures for the primary, also wound.\n\n12:45 update:  We have a circuit, we are tuning it.  Fabrication is almost done, all that's left is to glue things together and make it work.  The deadline of 1:00 will not be reached.\n\nSunday update:  Problem with circuits, it looks like we may not get the music part done.  Boo.\n\nMidnight Saturday update: We've successfully constructed two primary coils, two secondary coils, supports, and the circuit. We are aiming to get one test coil constructed before we leave tonight just so we can be sure our circuit works.Tonight Paul has some plasma cutting to do so we can put the coils on the helmet.But if this coil works tonight then tomorrow all we have to do is construction. We haven't even started on the modulator circuit yet, so we may not be able to make them play music this weekend :(\n\nWhat you see in some of the pictures we uploaded, in order:\n\n\nOur first tesla coil. We threw this together with stuff we had around just to make sure we had the science down and could tune the coils. It didn't make much of a spark but it did light up that bulb in the beer bottle. To clarify, that bulb is not plugged in. It's being powered by the field generated by the coil.\nWe found a great WWII helmet and polished it up, but the inside webbing was dead. Paul made some plates and brought his pop riveter so Jamie could reconstruct the webbing inside the helmet for easier (and safer HAHAHAHAHA) wearing. \nJamie in Inkscape designing our primary coil supports.\nCircuit diagram. We changed this a bit.\nBeautiful, Beautiful secondary coils. That's 30 gauge wire. Beautiful. \nWe're hoping to mount some fans to help with the heat. Bradford cut us some from my steel cans.\nLaying out the primary coil supports. Not drawn to scale. (Oh god, was it not drawn to scale. facepalm)\nStarting on the webbing for the helmet. \nBradford holding the coils he wound, both primary and secondary. He turned out to have as surprising aptitude for winding coils, so he is now our coil master.\nPaul and Bob soldering circuits. Despite the smile, Paul is not a serial killer. He's very nice.\n\n\n\nShort version: We thought it'd be cool. There were other things we thought'd be cool (drones with multiple cameras doing 3D surface mapping, mesh network devices, some projects not suited to an all-ages environment, some just goofy). This seemed to fit our skillsets and the time and space available.\n\nWhat we've done prior to the hackathon: Watch a lot of youtube videos, read web pages, pick a reference circuit, decide on how to customize it for our application. Order parts that can't be acquired locally. Use this as an excuse to pick up some tools we've been eyeing for a while. And last weekend, we built a small scale prototype based upon a different design with parts we had on hand (google Slayer Exciter). None of this coil will be reused; it was low power and only produced sparks a fraction of a mm long. But it could make light bulbs fluoresce. We also acquired the helmet, removed the paint and lining, and electrolytically removed the rust.\n\n\n\n        \n    Built With\n\n    pair-of-solid-state-tesla-coilscivil-defense-helmetmosfetsfiber-optic-isolation\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 2, 
        "members": [
            "grythumn", 
            "pgrodt", 
            "earlgrey", 
            "puzzlemaker"
        ], 
        "name": "Tesla Helmet", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/290/580/datas/small.jpg", 
        "slug": "tesla-helmet-c8trdq", 
        "tagline": "Hat with a pair of tesla coils that put out stereo sound", 
        "tags": [
            "pair-of-solid-state-tesla-coils", 
            "civil-defense-helmet", 
            "mosfets", 
            "fiber-optic-isolation"
        ], 
        "url": "https://devpost.com/software/tesla-helmet-c8trdq", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  A map of homeless resources in Baltimore and Philadelphia that has the ability to be updated by resource providers with real-time data and status through SMS and online updates.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "gaidam"
        ], 
        "name": "Sheltr Baltimore/Philly", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/903/datas/small.jpg", 
        "slug": "sheltr-baltimore-philly", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/sheltr-baltimore-philly", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  How might we improve the efficiency and quality of STD test result delivery for the Baltimore City Health Department?\nHow might we help Disease Intervention Specialists (DIS) spend more time providing treatment & counseling to patients who have tested positive for STDs? How might we increase the number of patients receiving STD testing in the city of Baltimore?\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "jennym3"
        ], 
        "name": "Code For Sex", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/858/datas/small.png", 
        "slug": "code-for-sex", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/code-for-sex", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Using Maryland State Property Records along with Baltimore City Property Tax data, GeoLocation data, and census data (to do)  to provide details about a given property\n\nAlso enhancing functionality to allow hyper linking between data elements (e.g. owner name, Block #, etc.)\n\nNote: bulk access to Maryland  property data is NOT FREE, the state provides an interface to the data BUT the Terms of Service forbid automated scraping of data.  \n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "paulj3"
        ], 
        "name": "SDAT Property Data Search / Display Improved", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/824/datas/small.png", 
        "slug": "sdat-property-data-search-display-improved", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/sdat-property-data-search-display-improved", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Improve upon the existing Baltimore Vacants open source project by adding neighborhood indicator data from BNIA.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  www.baltimorevacants.org\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "vinylfox"
        ], 
        "name": "Baltimore Vacants", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/754/datas/small.png", 
        "slug": "baltimore-vacants", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/baltimore-vacants", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Big Data  systems take in data from many sources, integrate it, correlate it, and then offer a summary of current information using a variety of visualization and reporting mechanisms.\n\nAlthough there are a lot of data sources available, this Civic Hacking event focuses on publicly available data from the Federal Aviation Administration (FAA).\n\nThe data will either be live or captured data which shows airport locations and near real-time flight information of various carriers.  The real-time aspect provides additional challenges which likely will yield an interesting design.\nThe result: An open source suite of data and code to help solve problems in the air/space/maritime world.\nThanks for helping!\n\nGitHub: https://github.com/r2ad/planeBigData\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "r2ad-opencoder", 
            "vladk1"
        ], 
        "name": "Open Plane Big Data", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/726/datas/small.png", 
        "slug": "open-plane-big-data", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/open-plane-big-data", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Apps for Baltimore is a portfolio of civic applications built by the local tech community. By using technology, entrepreneurial thinking, and open data provided by Baltimore or Maryland, these apps look to tackle some of our most pressing social challenges.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  www.appsforbaltimore.org\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "eliotp1"
        ], 
        "name": "Apps For Baltimore", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/099/683/datas/small.png", 
        "slug": "apps-for-baltimore", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/apps-for-baltimore", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Getting to and from parties off campus is not only difficult, but can also be dangerous. If you leave campus to get to a fraternity, but haven't been there before, it's easy to get lost and end up wandering the streets of Baltimore. BlackLight is an app that helps students safely navigate to and from parties by showing them which frats are active that night, and how exactly to get there.\n\nWhen you open the app, you are presented with a list of fraternities sorted by the number of people attending each one. When the app detects that the phone has come within 100ft of a known fraternity location, it will automatically \"check-in\" the user at that frat and update the number of people in attendance there. Using the Facebook login API we can also show users where their friends are, and also filter the displayed frats based on the school they attend.\n\nIf you don't know how to get to a fraternity, you can simply click a button and instantly receive step by step directions via the Google Maps API. We even support Street View to make it easy for users to verify that they are in the correct location.\n\nFinally, since safety is at the core of BlackLight, we've included a page with emergency links to Hopkins security and escort services. There's also a \"Get Me Home\" button that will give you directions on how to get back to your dorm.\n\n\n\n        \n    Built With\n\n    facebookgoogle-mapsherokjavascriptnode.jsobjective-cpostgresqlios\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "akshaysrivatsan", 
            "treinhart"
        ], 
        "name": "BlackLight", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/153/905/datas/small.jpg", 
        "slug": "blacklight", 
        "tagline": "Where it's safe to party", 
        "tags": [
            "facebook", 
            "google-maps", 
            "herok", 
            "javascript", 
            "node.js", 
            "objective-c", 
            "postgresql", 
            "ios"
        ], 
        "url": "https://devpost.com/software/blacklight", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Setting Per Diems Separating Downtown from Suburban Locations\n\nCurrently each major metropolitan city has the per diem rate set based on the county where it is located. To be more effective per diem rates should be set by using specific downtown zip codes to include the business area of the city. Areas outside of downtown should be separated into another area and suburban areas separated further.\nThis will allow the rates to be set on the business environment of each city and adjust the rates to more appropriate levels based on the area. This is currently done in Baltimore where there is a rate for the city of Baltimore and a separate and lower rate in the rest of the county. This same principle has been applied to Boston where Cambridge which is part of Middlesex County has its rates match Boston (Suffolk County) rather than the rest of Middlesex County as it has the same business environment as Boston.\nSavings will come from having travelers stay close to their business destination in a quality lodging facility. Currently those who cannot find accommodations at the current per diem levels are forced to stay in suburban locations, rent cars, pay for parking and gas plus the travel time factor between their business destination and where they were able to secure accommodations.\nWith the two working models listed above the frame work exists for Smith Travel to separate the lodging rates between city and county locations thus giving more accurate rates for each location.\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "tedmiller1951"
        ], 
        "name": "Setting Per Diems Separating Downtown from Suburban Locations", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/120/614/datas/small.jpg", 
        "slug": "setting-per-diems-separating-downtown-from-suburban-locations", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/setting-per-diems-separating-downtown-from-suburban-locations", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  We used the Baltimore 311 2013 call data available in Socrata's Open Data API. We made use of leaflet and d3 javascript libraries to visualize the data. The choropleth map view depicts the varying number of calls by zip code. When mousing over a zip area you will see popups displaying additional data about the area including a d3 pie chart of the top 10 calls in each area. You can zoom in on an area by clicking on it. In order to create the boundaries of the choropleth we converted shapefiles to geojson files. We then used the zipcodes from the geojson file to perform searches on calls in the relevant zip codes. The Call Map view lists all of the reports for the various types of requests. To get more detail on a call click on one of the markers and a popup will show.\n\n\n\n        \n    Built With\n\n    socrata-open-dataleaflet.jsd3.jsweb\n  \n\n        \n    Try it out\n\n    \n        \n  \n  semesky.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "lsemesky", 
            "ghoshkaj"
        ], 
        "name": "Baltimore Information Graphical Data (B.I.G. Data)", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/119/883/datas/small.png", 
        "slug": "baltimore-information-graphical-data-b-i-g-data", 
        "tagline": null, 
        "tags": [
            "socrata-open-data", 
            "leaflet.js", 
            "d3.js", 
            "web"
        ], 
        "url": "https://devpost.com/software/baltimore-information-graphical-data-b-i-g-data", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Phind it for Me is a new service based on an open source project launching initially in Philadelphia (with other cities to follow shortly) that aims to better connect people with their neighborhoods.\nThe application works by letting users send a simple text message (from any SMS-enabled mobile phone) to find the closest location in their neighborhood for a specific type of service (e.g., libraries, schools, etc.) This helps citizens become more connected to the places where they live by making it easy to find the things they need right in their own communities.\nWhere is the closest library to where you live or work? Where is the closest school, hospital, senior center, recreation center, public pool, polling place, or hospital?\nPhind it for Me answers these question by allowing people to send a simple text message to find out.\nThe code that powers Phind it for Me is open source and available on GitHub.\nThe data that powers Phind it for Me comes from the OpenDataPhilly project and is housed in PHLAPI. It is free and available for any developer to use. Data repositories similar to PHLAPI also exist for other cities, like Baltimore, Seattle and Portland.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  phinditfor.me\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "markheadd"
        ], 
        "name": "Phind It For Me", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/109/759/datas/small.jpg", 
        "slug": "phind-it-for-me--3", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/phind-it-for-me--3", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  The data that powers\u00a0Phind it for Me\u00a0comes from the\u00a0OpenDataPhilly\u00a0project and is housed in\u00a0PHLAPI. It is free and available for any developer to use. Data repositories similar to PHLAPI also exist for other cities, like Baltimore, Seattle and Portland.\nPhind it for Me\u00a0is a new service based on an open source project launching initially in Philadelphia (with other cities to follow shortly) that aims to better connect people with their neighborhoods.\nThe application works by letting users send a simple text message (from any SMS-enabled mobile phone) to find the closest location in their neighborhood for a specific type of service (e.g., libraries, schools, etc.) This helps citizens become more connected to the places where they live by making it easy to find the things they need right in their own communities.\nWhere is the closest library to where you live or work? Where is the closest school, hospital, senior center, recreation center, public pool, polling place, or hospital?\nPhind it for Me\u00a0answers these question by allowing people to send a simple text message to find out.\nThe code that powers\u00a0Phind it for Me\u00a0is open source and available on\u00a0GitHub.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  phinditfor.me\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "markheadd"
        ], 
        "name": "Phind It For Me", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/109/752/datas/small.jpg", 
        "slug": "phind-it-for-me--2", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/phind-it-for-me--2", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Phind it for Me is a new service based on an open source project launching initially in Philadelphia (with other cities to follow shortly) that aims to better connect people with their neighborhoods.\nThe application works by letting users send a simple text message (from any SMS-enabled mobile phone) to find the closest location in their neighborhood for a specific type of service (e.g., libraries, schools, etc.) This helps citizens become more connected to the places where they live by making it easy to find the things they need right in their own communities.\nWhere is the closest library to where you live or work? Where is the closest school, hospital, senior center, recreation center, public pool, polling place, or hospital?\nPhind it for Me answers these question by allowing people to send a simple text message to find out.\nThe code that powers Phind it for Me is open source and available on GitHub.\nThe data that powers Phind it for Me comes from the OpenDataPhilly project and is housed in PHLAPI. It is free and available for any developer to use. Data repositories similar to PHLAPI also exist for other cities, like Baltimore, Seattle and Portland.\n\n\n\n      \n        \n    Try it out\n\n    \n        \n  \n  phinditfor.me\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "markheadd"
        ], 
        "name": "Phind It For Me", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/109/746/datas/small.jpg", 
        "slug": "phind-it-for-me", 
        "tagline": null, 
        "tags": null, 
        "url": "https://devpost.com/software/phind-it-for-me", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  (Will be updated as I progress)\n\n\n\n        \n    Built With\n\n    reactstyled-componentsgraphqlwordpress\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "jonathanprozzi"
        ], 
        "name": "Baltimore Furniture Bank (Web App)", 
        "photo": null, 
        "slug": "baltimore-furniture-bank-web-app", 
        "tagline": "Baltimore Furniture Bank's web app connects furniture donations with formerly homeless clients needing furnishings.", 
        "tags": [
            "react", 
            "styled-components", 
            "graphql", 
            "wordpress"
        ], 
        "url": "https://devpost.com/software/baltimore-furniture-bank-web-app", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nTbd\n\nWhat it does\n\nHow I built it\n\nChallenges I ran into\n\nAccomplishments that I'm proud of\n\nWhat I learned\n\nWhat's next for Spare - Change for Charity\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "merlinpatt"
        ], 
        "name": "Spare - Change for Charity", 
        "photo": null, 
        "slug": "spare-change-for-charity", 
        "tagline": "Turn your spare change into change for charity", 
        "tags": null, 
        "url": "https://devpost.com/software/spare-change-for-charity", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  BMoreCareful\n\nhttps://bmorecareful.info\n\nBMoreCareful is an android app designed with the hopes of increasing awareness and safety in Baltimore. It uses data pulled from the Baltimore Police Department to show users where 911 calls have come from within the past 24 hours. \n\n\n\n        \n    Built With\n\n    javalinodeandroid-studiobasheclipsegoogle-directionsgoogle-mapsgoogle-placesgoogle-playgooglesocket.iodreamweaverhtml\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "damorales9", 
            "littlepazienza", 
            "jthettleman", 
            "apierce-ptak"
        ], 
        "name": "BMoreCareful", 
        "photo": null, 
        "slug": "bmorecareful", 
        "tagline": "BMoreCareful is an android app designed with the hopes of increasing awareness and safety in Baltimore.", 
        "tags": [
            "java", 
            "linode", 
            "android-studio", 
            "bash", 
            "eclipse", 
            "google-directions", 
            "google-maps", 
            "google-places", 
            "google-play", 
            "google", 
            "socket.io", 
            "dreamweaver", 
            "html"
        ], 
        "url": "https://devpost.com/software/bmorecareful", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Problem\n\nSome Black women think they aren\u2019t capable of doing something great in STEM because they are constantly told how much they can\u2019t do it.\n\nSolution\n\nInstead of telling them that they can\u2019t do it and instead of telling that they can be in STEM, show them that they can do it\n\nInspiration\n\nThe women in my hometown in Baltimore City barely think of pursuing stem! STEM is something most of my past peers couldn\u2019t imagine. Violence, high teen pregnancy and other issues in Baltimore are what most of our women face. STEM barely crosses their mind as something plausible. I am inspired to show the women that they can do it and help is available!\n\nWhat it does\n\nIt is a website that teaches women how to do certain things in STEM. Without showing people how to do things, they won't be motivated to accomplish anything. \n\nHow I built it\n\nI used Komodo Edit 11 and open source code to build the website.\n\nChallenges I ran into\n\nI ran into a time problem. I wasn't able to completely finish and develop everything correctly.\n\nAccomplishments that I'm proud of\n\nFinishing this project and putting smiles on people's faces.\n\nWhat I learned\n\nI learned how to code websites. \n\nWhat's next for Dark Roads (Light The Way Edition)\n\nThe next steps are to build on the BE AMAZED section and expand the site to be more inclusive of other STEM areas.This project long term future goals is to show women that they can do STEM! The outline of the website will show how to do simple, beautiful things in each field. It will outline the steps and prompt the user to follow them on their own! This way, their path can be lighted up and have direction. When I think of light the way, I think of giving people direction to those with darken paths! Isn't that what light does?\n\n\n\n        \n    Built With\n\n    html5javascriptcss\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "faithwilkinsel"
        ], 
        "name": "Dark Roads (Light The Way Edition)", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/722/300/datas/small.png", 
        "slug": "dark-roads-light-the-way-edition", 
        "tagline": "Empower Women From Baltimore City To Pursue STEM careers", 
        "tags": [
            "html5", 
            "javascript", 
            "css"
        ], 
        "url": "https://devpost.com/software/dark-roads-light-the-way-edition", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Job Search\n    \n\n    \n\n\n\n      \n  Inspiration\n\nThe opiate crisis in the United States is getting worse each year, In Baltimore alone the amount of those who overdosed double from 2015 to 2016. \n\nWhat it does\n\nWe realize the main issue is that many people lack the long term support needed to wean off addiction. In the case with non violent drug offenders not having proper medical care is associated with higher relapse and recidivism. \n\nHow we built it\n\nWe used Sketch App in order to build our product\n\nChallenges we ran into\n\nThe main challenge was understanding the problem and a specific segment to tap into it. The opiate crisis has many stakeholders and therefore many areas to fix, and so no picking a niche market was pivotal and difficult. \n\nAccomplishments that we're proud of\n\nWe are proud that we were able to think of an idea that could potentially aid hundred of thousand people each year in the United States\n\nWhat we learned\n\nWe learned how bad the opiate crisis is, and how addiction is  a disorder that can physically rewire someone's brain. \n\nWhat's next for Rehabilita\n\nPotentially partnering with Blue Cross Blue Shield to implement our solution in Baltimore. \n\n\n\n        \n    Built With\n\n    sketch\n  \n\n        \n    Try it out\n\n    \n        \n  \n  docs.google.com\n\n        \n  \n  sketch.cloud\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "sarahelsieg", 
            "samiayele"
        ], 
        "name": "Rehabilita", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/678/531/datas/small.jpg", 
        "slug": "rehabilita-s53w0x", 
        "tagline": "Decreasing recidivism and relapse in opiate addicted ex-offenders by providing access to medical insurance and jobs", 
        "tags": [
            "sketch"
        ], 
        "url": "https://devpost.com/software/rehabilita-s53w0x", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Start-Up Page for the App\n    \n  \n    \n    \n      Dashboard for the app\n    \n  \n    \n    \n      Navigation Bar\n    \n  \n    \n    \n      Profile #1\n    \n  \n    \n    \n      Chat #1\n    \n  \n    \n    \n      Profile #2\n    \n  \n    \n    \n      Chat #2\n    \n  \n    \n    \n      Profile #3\n    \n  \n    \n    \n      Chat #3\n    \n  \n    \n    \n      Profile #4\n    \n  \n    \n    \n      Chat #4\n    \n  \n    \n    \n      Profile #5\n    \n  \n    \n    \n      Chat #5\n    \n  \n    \n    \n      Community Events\n    \n\n    \n\n\n\n      \n  Inspiration\n\nWith the increase of gyms being constructed, it has become a societal standard that the path to a healthier lifestyle is through paying for memberships and trainers. While they may be effective, they are exceedingly expensive. The stigma against more traditional workouts methods like jogging and swimming has been on the rise and are being seen as less \u201ceffective\u201d. \n\nThe inspiration for this project is the concept of community involvement and \u201cpeer-to-peer\u201d fitness to increase motivation for living a healthier lifestyle. Using sustainable and cost-efficient methods, we created a system that inspires people to get to know their community members all the while, working out to a better future lifestyle. \n\nWhat it does\n\niFitness is an app that matches the users with people in their community that share similar fitness goals. The application uses a \u201cpeer to peer\u201d fitness system that motivates users to work out with each other based on their interests, goals, and comfort levels and provides rewards at each milestone reached. These rewards points can be redeemed for healthy food options reinforcing the message and the need for a healthier lifestyle. iFitness also provides users with a cost-efficient means to meet with fellow community members and participate in activities such as yoga in the park, and group morning runs. \n\nWe also integrated the usage of a chatbot service that can provide the users with the nutritional facts they desire. The chatbot is conveniently implemented into facebook messenger due to its popularity among all ages of people and its convenient accessibility. \n\nHow we built it\n\nThe team of 5 consisting of Varun Jain, Shaheer Hassan, Aidan Forsyth, Hafez Issa, and Abdullh Mohamed competed at the 2018 MedHacks Hackathon in Baltimore. The 5 used Adobe XD to create the design and basic functionality for an app that allows users to find fitness partners and fitness events in their area. In addition, Node.js along with several chat and communication-based modules (knex, axios, messenger, etc) was used to successfully create a chatbot that will provide the user with nutritional information as well as a fitness exercises through conversation. In the chatbot, Rasa-NLU was added so that basic phrases from the user would be understood from the bot.\n\nChallenges we ran into\n\nThroughout the Hackathon, there were various challenges we ran into especially in regards to brainstorming our idea for the hackathon. Thankfully, we were able to work around our challenges and successfully complete a project.\nFirstly, the ideas that we brainstormed were very complex and required a high level of programming ability, which none of the members of our team had. In fact, this was the first hackathon for all of our team members and we all either had minimal or no experience with programming. The first idea that we thought of was a blockchain system using SimplyHealth\u2019s KPS system to encrypt patient data. The problems that we encountered from this was storing complex values other than strings and integers. We were able to store a simple value such as Beats per Minute and blood pressure though. We also encountered a variety of debugging issues with our blockchain code. We also encountered issues with our fitness hub idea and this was because we were trying to combine a large variety of modules into one app. Coding the individual modules was not too difficult, but then we attempted the code for the app using Java and that proved to be great difficulty for our team. Through all of the struggles our team encountered, we were able to design our app using Adobe-XD as well as program a working chatbot that could be deployed onto facebook messenger. The last overall challenge that we had was adjusting to the new environment of the hackathon as it was the first hackathon for everyone on our team and we had no idea what to expect initially. We encountered a large number of surprises during this competition and they all had a positive influence on our experience at the conference.\n\nAccomplishments that we're proud of\n\nWe're definitely proud of the consistent accuracy that the chatbot services bring when stating nutrition facts. Not only that, but we are also proud in developing a user-friendly interface in the iFitness app that is fairly easy to use for all demographics. Even though we may not have coded up a fully functional backend to the application, we are proud to have developed a functional and eye-catching front end with little to no coding experience. Last but not least, we are extremely proud of the fact that this is our first hackathon and that we were able to complete a successful project with limited experience. \n\nWhat we learned\n\nThrough our experience at Medhacks Snow 2018, we learned how to manage a team of differently skilled individuals and combine everyone's skills into an interdisciplinary application. Through this, we also gained exposure to programming, design and had the opportunity to network with world-class researches and tech companies. Something that really took a while for us to realize is that hackathons aren\u2019t necessarily entirely digital, but there are other important social, accessibility, and implementation aspects that are crucial to the development of innovations, especially in community health and infrastructure. Most importantly, we learned the importance of making do with what you have in a limited time frame. \n\nWhat's next for iFitness\n\nGoing forth, we\u2019d like to fully integrate a functional backend with a user-profile login system. We\u2019d also like to acquire community partners to offer a wider variety of redeemable awards for our points service. Additionally, we would like to consult with the expertise of nutritionists and personal trainers that can provide valuable input for delivering a more effective service that will improve community health and fitness infrastructure. \n\n\n\n        \n    Built With\n\n    adobe-xdjavascriptfacebook-messengerfitbitknexaxiosrasa-nlu\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "varun901", 
            "shaheerbee", 
            "aidanforsyth3", 
            "abdullhmohamed"
        ], 
        "name": "iFitness", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/677/078/datas/small.png", 
        "slug": "ifitness", 
        "tagline": "A single swipe can make it right, change the way you live your life.", 
        "tags": [
            "adobe-xd", 
            "javascript", 
            "facebook-messenger", 
            "fitbit", 
            "knex", 
            "axios", 
            "rasa-nlu"
        ], 
        "url": "https://devpost.com/software/ifitness", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nMaps of income often only portray average or median income, providing only a partial view on the distribution of income in a particular geographic area.  Additional insight can be gained by considering the entire distribution of incomes.\n\nThis project was inspired by the need to better identify the range of incomes earned by households in different parts of the country.\n\nAdditionally, I wanted to automate map creation as much as possible.  From gathering and processing data to generating the map, I wanted everything to be done in code where possible.\n\nThere are a number of use cases possible for this data, but I had two specific cases in mind:\n\n1. Identifying low-income areas where many people are likely to be eligible for tax credits.\n\nThis use case is in support of an earlier project of mine: The Baltimore Tax Credit Map\n\n2. Finding areas where housing might be found that matches a family's income\n\nThis use was inspired by the challenge of trying to understand suitable places to live for a given income level, especially when moving to a new city.\n\nVisual styling and implementation was influenced by a recent WaPo visualization by Christopher Ingraham and Lazaro Gamio and this choropleth by Mike Bostock.\n\nWhat it does\n\nThe project is a series of interactive maps that allow users to view the relationship between income and location.  Users can choose an income range and see where in the a given city, county, state or larger region that people with annual household incomes in that range live.  Exploration is encouraged and quickly reveals high income, low income, and middle class areas.  Maps will be included for several major urban areas, though more can be generated on demand.\n\nHow I built it\n\nThe project consists of two primary components:\n\n1. Data gathering and cleaning\n\nPython scripts were written to gather income data from the US Census.  This effort was assisted by use of the Sunlight Foundation Census API.  Additionally, collection of necessary TIGER shape files was automated with Python.\n\nData from the census was cleaned and organized using pandas.  TIGER shapefiles were processed and filtered using geopandas.  The end of this stage results in a census data file in csv format and a separate shapefile formatted as geojson.\n\n2. Map visualization\n\nMap visualization was done using d3.js.\n\nChallenges I ran into\n\nTIGER shapefiles for tracts and block groups are packaged for each state as a whole.  Often, we are interested in only mapping one or two counties and thus it is necessary to filter out only the regions of interest.  I managed to accomplish this using the Python module geopandas and filtering the shape data to only include regions that were specified by the user.\n\nd3 is often counter-intuitive and difficult to work with.  The number of challenges I ran into with d3 are too many to list.\n\nAccomplishments that I'm proud of\n\nOn acquiring data:\n\nAt this point, I'm very proud of wrangling the US Census and TIGER shape data into submission.  There is a wide variety of information available from the US Census website, but understanding exactly what's available and how to get it is challenging.\n\nEven using an API, it can be difficult to figure out exactly what information is available.  The American FactFinder site was very helpful in this regard.  Once the desired data has been identified, the proper FIPS codes and Variable codes have to be found in order to automate data acquisition. Just managing to figure out how to automate this process was an accomplishment.\n\nOn visualization:\n\nI'm proud of the entire visualization.  Admittedly, a lot of it was only made possible by scouring and modeling off of similar projects, but just getting all the parts working together was a challenge.  This is one of my few projects with any real amount of interactivity or significant UI elements.  Getting maps to render properly is challenging.  Styling the shape fills based on data is challenging.  Having everything update properly when sliders and selections change is also challenging.\n\nHonestly, I'm still amazed the visualization works at all.\n\nWhat I learned\n\nThis is perhaps the most modular and reproducible mapping effort I have made to date.  Other than looking up county codes and census attribute codes, map generation is fully automated without any reliance on manual tools.  I have tested the code and found that it readily extends to multiple scales.  I also learned to manage my time pretty well given the ground that had to be covered for this project in less than 48 hours.\n\nWhat's next for Income Explorer\n\nFor data gathering, I intend to polish up my existing python code to make it more readily extensible to acquiring data from many metropolitan areas as well as attributes beyond household income.\n\nOn the visualization side, I plan to add additional interactive elements such as shape highlighting on mouseover as well as detailed tooltips.  Site design and styling can use improvement as well.\n\n\n\n        \n    Built With\n\n    pythonpandasgeopandascensus-apijavascriptd3.jsjquery\n  \n\n        \n    Try it out\n\n    \n        \n  \n  ryan-j-smith.github.io\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "ryan-j-smith"
        ], 
        "name": "Income Explorer", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk1LzIwNy9kYXRhcy9vcmlnaW5hbC5QTkc=/incomeExplorer.PNG?signature=0b11a67d9506bf09d062578c5187afbc50e2ed2f", 
        "slug": "income-explorer", 
        "tagline": "Interactive maps to better understand the relationship between income and geography", 
        "tags": [
            "python", 
            "pandas", 
            "geopandas", 
            "census-api", 
            "javascript", 
            "d3.js", 
            "jquery"
        ], 
        "url": "https://devpost.com/software/income-explorer", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  We had trouble with the images on DevPost - for images of our project please view here: https://www.dropbox.com/sh/afynhtvu4j7q3uj/AABGfOo1zk_qlzqi4L9-UJSja?dl=0\n\nInspiration\n\nDriving to works a few weeks ago,  I (Amanda) saw a dog running wildly down Lombard St. towards Patterson Park. The dog looked well-fed and cared for, but seemed to be very scared. While I was not in a position to make a u-turn and follow the dog, I wanted to find a way to contact the owner with the whereabouts of their dog. It took three days for me to find the Craigslist posting, and unfortunately at the time the information was unhelpful to the owner. If someone were able to see sightings of animals with similar descriptions to their pets, they could narrow their search considerably!\n\nWhat it does\n\nPaw Patrol is the Waze for pets- it posts lost pets, found pets, and pet sightings to an interactive map that updates in real time. \n\nIf Kim's pet runs out the door one morning on her way to work, she can post her lost pet with the location where it went missing, a description, and a photo. Paul's on his way to work and he sees a terrier running wildly at the corner of Baltimore and Caroline on the east side. He posts a description of the pet, the location, and a photo, enabling tracking of a pet. Paul's update creates a general location of the lost pet's whereabouts so Kim can start looking for her lost pet in an intuitive manner. The site also aggregates data from found pet sites so Paw Patrol will be a one-stop shop for finding pets. \n\nHow we built it\n\nThe site is built using Mapbox, an open-source JavaScript library that allows you to store and query a set of items based on their geographic location. We initially used a FireBase boilerplate and incorporated GeoFire to pull coordinate data from the FireBase database, but pivoted after learning (in a few hours) how intuitive and interactive Mapbox's API was in relation to our project. The database was populated by aggregated JSON data from various pet lost and found sites. The front-end was built with HTML, CSS, jQuery, and more. \n\nChallenges we ran into\n\nDealing with the HTML5 canvas was problematic on every level. The map was housed in the canvas and any attempt to style the map, even wrapping it in a div, resulted in doom. On the back-end, a large pain point was pulling in the coordinate data from the database and incorporating the real-time components. The data aggregation through node presented a challenge in formatting the database as well, but with a lot of elbow grease, ingenuity, and quick-thinking, we were able to come to a finished product that we're quite excited about! \n\nAccomplishments that we're proud of\n\nWe all come from varied backgrounds (designers, developers, and game designers), and was able to not only come together and work in functions outside of our job titles and comfort levels, but learn completely new languages, libraries, frameworks, and platforms in a few hours. We worked together, laughed together, and figured out how to make Google Maps conform to our bidding. We tested, broke, retested, and pivoted. We laughed, we almost cried, and we went from strangers to buddies in a matter of days. This was an amazing experience and we're all very proud to have gotten this far. \n\nWhat we learned\n\nWe learned various tricks and conventions in Firebase, Mapbox, JSON, node.js, jQuery, GeoFire, and more. We strengthened our knowledge of database structure, and learned new ways of accomplishing queries and data calls. We also got really good at version control and working collaboratively in Git/Github. \n\nDid you start on the project before the weekend?\n\nAmanda did some basic planning on Trello. \n\nWhat existed before you started?\n\nWe used MapBox and FireBase open source code. \n\nWhere are you sitting?\n\nBy the kitchen in the main room. \n\nWhat's next for Paw Patrol\n\nWe are all committed to creating a production-ready, polished product that pet owners love, and have a laundry list of features that we'd love to accomplish for the future, including: \n\n\nGeolocation as a starting point for the map \nAn added searchable database for lost/found animals\nAn accompanying mobile app\n\n\nThank you!\n\nThanks so much for considering our project. We'd like to publicly thank and show appreciation to the Baltimore Hackathon 2015 organizers for pulling together such an amazing event, Angelique Weger for introducing us via the DevGrrls Slack group, and to coffee, Red Bull, and soda which fueled our development marathon. And bacon, because Mira really likes bacon. \n\n\n\n        \n    Built With\n\n    html5css3firebasejavascriptrubyjquerynode.jsgoogle-maps\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 4, 
        "members": [
            "abosarge", 
            "lynmuldrow", 
            "coderbug", 
            "stephsadesigner"
        ], 
        "name": "PawPatrol", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk1LzUwMC9kYXRhcy9vcmlnaW5hbC5wbmc=/Screen_Shot_2015-09-20_at_12.20.24_PM.png?signature=e0172d69657b9ed6a09a23a64b4d1cd6b1036978", 
        "slug": "lost-pets-ehtq7c", 
        "tagline": "Lose your pet? Use PawPatrol to crowdsource your furry friend's whereabouts! PawPatrol is Waze for pets. ", 
        "tags": [
            "html5", 
            "css3", 
            "firebase", 
            "javascript", 
            "ruby", 
            "jquery", 
            "node.js", 
            "google-maps"
        ], 
        "url": "https://devpost.com/software/lost-pets-ehtq7c", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  What it does\n\nMaze 2: Electric Boogaloo is a game that randomly generates mazes that must be solved using the mouse without touching walls. \n\nHow I built it\n\nThis project can essentially be split into two parts: the maze generator and the graphics/game engine. The most complicated component of this was implementing the maze generation. We chose to generate a braid maze so that there would be very few dead ends. Our algorithm started by adding walls around the border of the maze. Then, we added walls at random within the maze without causing an dead ends. This created a maze-like structure of walls that did not necessarily have a solution and could have certain sections completely cut off from the rest of the maze. To connect these sections, we first identified each section with a unique id. Then, we went through every wall in the maze and checked if it separated two cells of different labels. If it did, we deleted the wall and changed all of the connected cells to a single id. Once all the cells had the same label, the maze was entirely connected and was finished. In order to punish the user for crashing into walls, we took advantage of the fact that the background was black. In order to check if the mouse had collided with a wall, we simply checked if the color at the mouse position was not black.\n\nChallenges I ran into\n\nIt was difficult to get the maze generation algorithm working because we went into it without fully understanding how we would approach implementation, so we had to rewrite our program structure multiple times. We originally stored the maze as a simple array of all the wall segments. Because it was completely unorganized, we had to search the array every time we wanted to manipulate a certain wall piece. We then stored the maze as a grid of cells, with 4 values each to show where the cell had walls, but this was inconvenient because there was no way of directly referencing walls. Also, one cell's top wall was another one's bottom, and so handling these duplicate walls was confusing and inefficient. We finally settled on the structure in place now: two arrays containing all the possible walls. This was the best way because we could refer to specific walls, and then find the walls around with a function of the index, which was much better than searching an array and did not have to handle duplicate walls.\nFor the graphics, we used an html5 canvas. This allowed us to draw directly to the screen and manage the ui at a relatively low level. The only downside to using a canvas over just html elements such as divs or spans was that a canvas's pixel size is fixed. This meant that if the window were ever resized, it would not be as simple as automatically adjusting relative positions for html elements. We had to recalculate the coordinates of everything we wanted to draw based on the new dimensions. Once this was completed, however, it did not interfere with any of the other components and was very reliable.\n\nAccomplishments that I'm proud of\n\nI am proud of getting the maze generation algorithm and the graphics to work without any outside code or libraries. Everything was done by us 100% from scratch during the weekend.\n\nWhat's next for Maze 2: Electric Boogaloo\n\nIf we had had more time we would have made a better ui, added enemies and items, and implemented a scoring system.\n\n\n\n        \n    Built With\n\n    javascriptcss3html5\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.tjhsst.edu\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 2, 
        "members": [
            "romangvk", 
            "sunny14631"
        ], 
        "name": "Maze 2: Electric Boogaloo", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk0LzY3Ni9kYXRhcy9vcmlnaW5hbC5wbmc=/3.png?signature=b83910a702a7766c6d52824f26a12e83d94bfbac", 
        "slug": "maze-2-electric-boogaloo", 
        "tagline": "Endless maze game that generates the mazes in real time.", 
        "tags": [
            "javascript", 
            "css3", 
            "html5"
        ], 
        "url": "https://devpost.com/software/maze-2-electric-boogaloo", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nAs college students living on a large campus we needed a method of fast and cool transportation. Longboards are cool, but not cool enough. \n\nWhat it does\n\nWe built a modular kit that attaches to any flat longboard via 4 screws. This kit has an electric motor, a pair of headlights, and brake lights. We custom built a handheld remote controller as well. \n\nHow I built it\n\nWe 3D printed parts to mount the motor to the truck, and attach to the wheel. We laser cut pieces of wood to house the batteries and other electronic components needed to power the motors and communicate with the remote control. \nWe 3D printed a remote control casing to fit around the electronic components.\n\nChallenges I ran into\n\n3D prints failed, laser cutter was not calibrated correctly which resulted in use wasting some material and had to redesign our box. \n\nAccomplishments that I'm proud of\n\nAccomplishing this project within the time frame. \n\nWhat I learned\n\nExpect the unexpected.\n\nWhat's next for MEVI Longboard\n\nWe are planning on refining this prototype and try to market it to college students as a ready-to-attach kit to longboards, and start selling them online. \n\n\n\n        \n    Built With\n\n    arduinodiy-electronic-kitsrecharable-battery3d-printed-casingslaser-cut-woodmotors\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "xyleques", 
            "jmjchang999", 
            "kevicha1"
        ], 
        "name": "MEVI Longboard", 
        "photo": null, 
        "slug": "mevi-longboard", 
        "tagline": "A kit to motorize longboards with a custom made remote control", 
        "tags": [
            "arduino", 
            "diy-electronic-kits", 
            "recharable-battery", 
            "3d-printed-casings", 
            "laser-cut-wood", 
            "motors"
        ], 
        "url": "https://devpost.com/software/mevi-longboard", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  About\n\nThe armchair project introduces a wireless interface to control a motorized wheelchair.  Custom computer software interprets hand gestures from a Myo Gesture Control Armband, sends the wireless commands to a Raspberry Pi mounted on the wheelchair, which in turn sends commands to an Arduino to operate one of two servos mounted next to the wheelchair's controller.  \n\nOur inspiration for this project came from a desire to do a hack that would have a humanitarian element. One of our members had a contact at The Delrey School who was able to lend us an electric wheelchair. Josh Z. and Luke met on the Hack-A-Thon\u2019s \u201cFind a group\u201d channel. Josh S. joined to offer his experience with hardware hacking and electronics.\n\nArmchair removes the requirement that the driver of an electric wheelchair be able to manipulate the control stick (or even be sitting in the chair at all). Using Armchair, a disabled person who has limited limb movement, shortened arms, or even one who is missing a hand entirely can still control their wheelchair with simple arm motions and muscle contractions.\n\nPeople\n\n\nJoshua Ziggas - Software Engineer, Anthem Engineering\nLuke Samuels - Sr. SysAdmin, ZOS\nJoshua Skillman - Electrical Engineer, BGE\n\n\nShoutouts\n\n\nThe Delrey School\nFelipe Albertao\n\n\nDependencies\n\n\nNodeJS, a JavaScript runtime built on Chrome's V8 JavaScript engine.\nMyoJS, Thalmic Labs Myo JavaScript Framework.\nWebSocket-Node, A WebSocket Implementation for NodeJS.\nQ, A tool for creating and composing asynchronous promises in JavaScript.\njohnny-five, JavaScript Robotics and IoT programming framework.\n\n\nWork Performed Prior to Contest\n\n-Planning discussions only\n\nInstallation\n\nMyo Server\n\n\nnpm install -g q\nnpm install -g websocket\n./install_server_dependencies.sh\n\n\nRaspberry Pi Client\n\n\nnpm install -g websocket\nnpm install -g johnny-five\n\n\nUsage\n\nMyo Server\n\n\nnode myojs/examples/armchair.js\n\n\nRaspberry Pi Client\n\n\nnode armchair_client.js\n\n\n\n\n        \n    Built With\n\n    javascriptnode.jsjohnny-five\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": true, 
        "like_count": 3, 
        "members": [
            "jzig", 
            "degeneratedevops", 
            "skillmanjj"
        ], 
        "name": "armchair", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/291/129/datas/small.jpg", 
        "slug": "armchair", 
        "tagline": "Remote controlled wheelchair via Myo armband", 
        "tags": [
            "javascript", 
            "node.js", 
            "johnny-five"
        ], 
        "url": "https://devpost.com/software/armchair", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nAccurate 3d imaging of objects where using current inexpensive scanning systems is impractical. \n\nWhat it does\n\nWe used inexpensive parts to 3d image/scan an area with very accurate pixel locations in 3d space. The LiDAR only provides a range measurement. To image, the laser range finder needs to scan. Using a servo would add too much noise for accurate imaging, especially at a distance.  The worm geared gimbal we designed and built provides very accurate elevation and azimuth angles (in theory, based on gear ratios, an accuracy of 0.00013 degrees). In conjunction with the accurate range reading (to ~1 cm) and further processing algorithms such as superresoltion, a very accurate 3D image can be generated.\n\nHow I built it\n\nOn Friday night, we designed and 3D printed most of the gimbal parts (8 hours of printing). On Saturday we assembled the worm geared gimbal (printed parts + two stepper motors) and experimented with the LiDAR for the first time. We used an Arduino Uno for gimbal control and lidar data acquisition. We wrote a processing scetch to receive the data and display raw results. We also imported the data in Python for possible superresolution processing algorithms for subpixel resolution enhancement. \n\nChallenges I ran into\n\nDetection of position of Gimbal. Registration of one line to next. People walking in front of the scanner. Speed of worm drive (it is slow) due to very low cost stepper motors. \n\nAccomplishments that I'm proud of\n\nOur goal was to 3d image an area or object with cheap parts, which we accomplished. The worm geared gimbal worked just as expected (though the $1 stepper motor was limiting factor). With additional detection of position, a better motor, and image processing, accurate 3d images/scans are practical. \n\nWhat I learned\n\nImaging with a laser is difficult. \n\nWhat's next for Worm LiDAR\n\nKeep working on it. Speed up be collecting by running lidar and gimbal at same time (limitation of Ardunio model) rather than start/stopping the drive (currently running at 100 hz). Could speedup  5-7x easily. That will also help with pixel registration. Additionally, a lot of room for sub-pixel resolution using image processing algorithms. \n\n\n\n        \n    Built With\n\n    arduino3dprintingprocessingopencv\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 5, 
        "members": [
            "ndurland", 
            "maxcorbin"
        ], 
        "name": "Worm LiDAR", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvMjk1LzUyNi9kYXRhcy9vcmlnaW5hbC5wbmc=/scan_bb_board_128x128.png?signature=4ca435e4c74fcea2b10db85c7225f762cc9ee281", 
        "slug": "worm-lidar", 
        "tagline": "Accurate 3d imaging from a distance for cheap", 
        "tags": [
            "arduino", 
            "3dprinting", 
            "processing", 
            "opencv"
        ], 
        "url": "https://devpost.com/software/worm-lidar", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspired by the muscle memory required for technical sports like whitewater kayaking or golf, this device aims to optimize the wearer's performance.  \n\nIt measures upper body motion of user, sends signal out using low energy Bluetooth to software on a computer analyze output. In our prototype, we show the position of the sensor in 3D space, but many other visualization and analysis techniques could be used. For example, celebrity endorsement allowing users to compare their own motion to pro athletes.\n\nIf developed into a product, we'd sell a kit containing the sensor, and the larger unit containing the battery, Bluetooth, and CPU. This would be a one-time investment and include a a sensor of higher quality than the one we used. Then we'd sell shirts containing a a slot for the sensor, and conductive thread down to the belt for the larger unit. Compared to sewing the sensor into the shirt, his allows the shirts to be less expensive, washable, water- and sweat-proof, and available in many sizes and colors.\n\n\n\n        \n    Built With\n\n    adafruit-florabluetooththree.jssocket.ioarduinolsm9ds0\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "ryanklee", 
            "max5380g", 
            "parishjames"
        ], 
        "name": "Haptic Sportswear", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/295/575/datas/small.JPG", 
        "slug": "haptic-sportswear", 
        "tagline": "A sensor clothing system that provides feedback on body motion to optimize sports performance", 
        "tags": [
            "adafruit-flora", 
            "bluetooth", 
            "three.js", 
            "socket.io", 
            "arduino", 
            "lsm9ds0"
        ], 
        "url": "https://devpost.com/software/haptic-sportswear", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nAbout a year ago, I first saw the commercials for Amazon Echo. My immediate thought was, \"Oh man, that would be so cool if it had an app for doing recipes where it could speak the recipe to you. I love to cook, and I use my computer to find recipes. AllRecipes.com is my favorite website to get recipes from. However, it's always really frustrating when you're hands are messy and you're about to drop in the sriracha, but you can't remember if it was 1 tablespoon or 1 teaspoon. Now I need to wash my hands, dry them off, enter my password in (since my screen has locked again, find my place in the recipe again, and then go back to getting my cooking. Then it's rinse and repeat for the next step :)\n\nSince then, I've looked for apps that would solve this problem. Finally, I realized I could build it myself and found the Hackathon to be the perfect opportunity.\n\nWhat it does\n\nSous Chef solves this problem by allowing you to have a dialog with the web app. Sous Chef understands simple voice commands like, \"Next Step.\" or \"How many _____?\" and can talk back to you with the proper response. Now when you're standing in front of your bowl trying to remember how much sriracha to put in, just ask Sous Chef, \"How much Sriracha?\" Sous Chef will vocally respond with the amount you are looking for.\n\nSous Chef makes the process as simple as possible by also having an optional chrome extension. Found the perfect recipe on AllRecipes? Click the Sous Chef extension app and click, \"Let's Cook\". You're automatically redirected to the Sous Chef site and you're recipe is automatically loaded. You are immediately ready to start interacting with Sous Chef and start going through the list of ingredients!\n\nHow I built it\n\nSous Chef is built with a combination of HTML, Javascript, CSS, and PHP. Sous Chef downloads the DOM of a given URL with PHP. We then use javascript to parse through the DOM to give us a list of ingredients and steps. Finally, we use the Google Web Speech API and a wrapper called Annyang to give us voice command inputs and voice response outputs to the user. Finally, a chrome extension is built using a combination of HTML and javascript to make the web app incredibly simplistic to use.\n\nChallenges I ran into\n\nOur biggest problems were actually pretty silly. Javascript doesn't let you to get the DOM of a cross domain, even though there are a 100 other ways you can get it. This took up a few hours. We also ran into an issue where our app was working on our \"test\" server but not our \"production\" server. A few hours of painful debugging, turns out no one ever installed php on the \"production\" server. Ugh...\n\nBesides that though, we actually had a really smooth process and were able to finish extremely early. I credit this to having a good plan from the outset and constant communication between the two of us to make sure we both knew who was doing what and what we expected from the other person's code.\n\nAccomplishments that I'm proud of\n\nI was really proud that after a year of wanting to create this app I was finally able to do it. It actually was amazing how quickly we were able to do it and makes me want to go to more of these in the future to work on the other ideas that I have.\n\nI'm most proud that I decided last minute to tackle an entire area that I've basically never touched before and was able to learn it extremely fast. This really made me feel like I can take on anything!\n\nWhat I learned\n\nUp until Thursday night I had envisioned this as an Android app. However, I realized the day before the Hackathon that it would be much more useful for myself, and would be more universally usable by others if it was a web app.\n\nSo with that being said, I was really learning web development on the fly as I really never did much of it before. I hadn't done javascript probably since high school. Luckily, my partner Mike was well-versed so I was able to ask him a ton of questions. I love learning new languages and APIs so it was really exciting to take on a challenge that was completely new to me and I learned a lot.\n\nI think we learned most from the road blocks we ran into. We realized that (for some reason that makes absolutely no sense to me) you can't grab the DOM of a remote domain via Javascript due to security issues, even though there are a 100 other ways you can do it. Every issue we ran into we were able to overcome though which is a very satisfying feeling.\n\nWhat's next for Sous Chef\n\nIt really needs some field testing, which I'm excited to start! I would like to make using Sous Chef feel as natural as possible. That means, users can speak to it like they would if they were talking to an actual person. This is not a complicated task, I just need to figure out what someone would like to say to Sous Chef. Once I know how people would like to speak to it, it is trivial to match input commands to functions of the web app. \n\nI'd also like to experiment with voice modulation to see if I can find a more natural sounding voice. The standard voices sound a bit robot-y and I would like to make the experience more personable.\n\nWe could also work to include other popular recipe sites to parse. \n\nFinally, we would just be cleaning up some of the UI. The simplification of the recipe in the web app was actually an unintended side-effect, but when discussing with my girlfriend, that was actually one of her favorite features. We also feel like it adds a nice touch and it would be nice to dress it up just a bit so that the user feels like they're still getting a 1st class experience using our web app.\n\nWith these additions, I feel like we would actually have a MVP that we could setup on a real environment and actually host the web app. The chrome extension can also be included to make Sous Chef incredibly easy to use.\n\n\n\n        \n    Built With\n\n    javascriptphphtml5google-web-speech-apijquerybootstrap\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "gjk910327"
        ], 
        "name": "Sous Chef", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/294/173/datas/small.png", 
        "slug": "sous-chef", 
        "tagline": "A web app which takes recipes from AllRecipes and allows for voice commands and speaks the recipe to you", 
        "tags": [
            "javascript", 
            "php", 
            "html5", 
            "google-web-speech-api", 
            "jquery", 
            "bootstrap"
        ], 
        "url": "https://devpost.com/software/sous-chef", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\n\n\n        \n    Built With\n\n    a-sprinkle-of-magic\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "madmaze", 
            "p2edwards"
        ], 
        "name": "derp", 
        "photo": null, 
        "slug": "pilltron3000", 
        "tagline": "derp", 
        "tags": [
            "a-sprinkle-of-magic"
        ], 
        "url": "https://devpost.com/software/pilltron3000", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nI like to ride my bike to work. It is great exercise and we have limited parking but with it getting darker earlier and my hours running late into the evening, I worry about motorists being to able to see me. I used an Instructable as a springboard and made some adjustments.\n\nWhat it does\n\nA roller is connected to the wheel of my bike which turns a stepper motor, sending a current to an old cell phone charger which then powers EL wire.\n\nHow I built it\n\nFirst I had to determine what wires coming out of the stepper motor were live and common. Then I had to break a few old cell phone chargers. The third try was a charm. I was able to identify the transformer and connect the stepper motor wires. Then things got a little weird. Rather than remove the remainder of the charger, convert the current and risk blowing out the EL wire, we decided to keep the charger and send the current on through to the EL wire pocket inverter. I was able to strip the charger cord and attach it to the positive and negative of the pocket inverter with alligator clips. We then attached the stepper motor to an electric drill and tested it. The EL wire lit up but not consistently. We were able to trouble shoot the button feature on the pocket inverter and get the wire to blink consistently. Then I had to determine how to attach everything to my bike, 3D design and print a roller, and solder all of the alligator clip connections. Determining how to attach everything took a lot of trial and error and zip ties. I had to get the angle of roller to be compatible with my tire and keep the rest of the device from interfering. Then I began soldering the components together. \n\nChallenges I ran into\n\n\nFirst, we were able to get the EL wire to light up but not consistently. Through trial and error, we were able to determine that the issue was the button on the pocket inverter. We had to solder a wire to keep the button continuously open.\nOnce everything was working with alligator clips holding it together, I soldered everything. Then it stopped working. Using the drill and the mulitmeter, I was able to determine that issue was in the connection between phone charger cord and the pocket inverter but have not had time to successfully trouble shoot. \n\n\nAccomplishments that I'm proud of\n\nThis entire project was out of my comfort zone and daunting. I am very proud to have gotten the current to work and gotten the roller to work with my bike wheel. I learned quite a bit about tools and electrical current. I'm proud of coming so close to making something practical and useful with parts that were around. I will continue to make this work.\n\nWhat I learned\n\nWhat a step motor is\nHow to use a multimeter\nWhat a transformer looks like\nThe basic concept of a transformer\nThe basic concepts of AC and DC currents\n\nWhat's next for Pedal Powered Bike Light\n\nI need to continue working with the pocket inverter. Using the multimeter, I was able to measure current up to that connection. The EL wire is still working with a regular pocket inverter so the fault is somewhere in soldering the phone charger cord to the pocket inverter. Eventually, I would like to build a weather-proof housing unit and possibly condense some of the parts.\n\n\n\n        \n    Built With\n\n    stepper-motorel-wireold-cell-phone-charger\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "ambergc"
        ], 
        "name": "Pedal Powered Bike Light", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/294/278/datas/small.JPG", 
        "slug": "pedal-powered-bike-light", 
        "tagline": "It's getting too dark too early for me to bike home from work without a light.", 
        "tags": [
            "stepper-motor", 
            "el-wire", 
            "old-cell-phone-charger"
        ], 
        "url": "https://devpost.com/software/pedal-powered-bike-light", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nMy sister convinced me to run a half marathon with her later this year. She lives in Washington DC, so we can never run against one another. I wanted a better way to compete with her other than texting our times back and forth. Brian and I built Run With Me to do just that. Run With Me provides real time information during the race, and can drive us to run harder as if we were next to each other.\n\nWhat it does\n\nNothing inspires a person more than a competition, and until now the only competition in running applications was data vs data.  You look up a run.  You do the run.  You check your standings.  No live feedback.  No real motivation to run faster.  You never run harder than when someone is there next to you.  Pushing you to the limit.  But what if your running partner isn\u2019t in the same City or timezone?  Perhaps this distance keeps you running solo?  Run With Me makes sure that there is always someone right next to you.  With Run With Me you choose a time and a distance, and then challenge someone to a virtual race.  A GPS enabled running band synchronizes you and your partners distance as you both run.  In race audio notifications let you know if you are ahead, behind or finished.  Don\u2019t always have a running partner?  Our ghost runner feature allows you to challenge a previous run performed by you or anyone in the Run With Me community.  Run like you should\u2026Run With Me.\n\nHow I built it\n\nThe system consists of: a UI written with React JS framework and Mongo DB for storage, an arduino platform with GPS and zigbee modules and python/django applications.  The ardunio platform is hardware that I had constructed for a previous project.  This includes all of the soldering and positions of the sensors on the board.  To use the application the user would run with the ardunio platform and the gps readings will be read every 4 seconds and then sent to a computer via zigbee.  Once received by the computer a python application hits a django rest service to load the readings into the database.  The React application maintains the user presentation of the race.  Positions will be periodically polled from the javascript application via the rest service to determine the progress of the race.  During the race audio updates will indicate to a user when passing or falling behind.  At the completion of the race the application resets and a new race can begin.\n\nChallenges I ran into\n\nThe first challenge was working with a bluetooth module.  The original plan for communication with the armband platform was to have it communicate over bluetooth to a background cell phone application that would load values into the database via the django rest service.  Despite my best efforts the bluetooth module would not work with the arduino uno platform due to a missing output pin on the bluetooth module.  Without the output pin debugging was not going to be possible while the bluetooth device was attached to the arduino, so we decided it would be best to reevaluate the approach.  I had some basic python code for Zigbee Digimesh, so instead of bluetooth to phone the armband platform sends data over zigbee to a computer.  This vastly reduced the portability of the proof of concept system.\n\nChallenges with the javascript program were mostly related to quantity of work required to get the framework and race program running.  Most of the work itself was straight forward, but it was difficult to work long hours on little sleep to complete the project. We made design decisions early on in the project that left most of the major lifting to the javascript application. A more balanced devision of the functionality between the two applications would have made it easier to isolate issues.\n\nWhat I learned\n\nSome of the design decisions that we made early on in the process led to an imbalance in the work.  By relying heavily on the javascript program to store information and execute the race itself Dan was saddled with a disproportionate amount of the work.  In the future it would be good to do a more thorough breakdown of the expected work to ensure that work can be split more easily. \nIt is important to schedule deliberate moments to evaluate progress, and rearrange development resources.    \n\nWhat's next for Run With Me\n\nWe would like to create our own arm band that allows us to add other sensors to provide runners with additional data (heart rate, breathing rate. sweat rate, etc), but we have to acknowledge that there are already many fitness bands out there.  Run With Me would benefit greatly if it could work at least in some capacity with popular fitness bands and trackers.\n\nA future iteration of the arm band running platform that we design would have to be bluetooth enabled to allow the user to pair with a phone to upload the live data into the database.  Additional sensors would be modular so they can be added to the platform with minimal effort by the user.\n\nThe UI that we have created is merely the tip of the iceberg of functionality that can be provided given the data collected.  Beyond live in race statistics Run with Me would provide historical race data analysis, custom sound recording, and both android and IOS support.  The potential for custom race views, charts and statistics leaves the design of the final application decidedly open ended.\n\n\n\n        \n    Built With\n\n    reactfluxpythondjangoarduinosqlitemongodbsocket.ionode.js\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 0, 
        "members": [
            "kanhofer", 
            "dmichaelis0"
        ], 
        "name": "Run With Me", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/295/463/datas/small.jpg", 
        "slug": "run-with-me-9kcxal", 
        "tagline": "Never run alone again with Run With Me. Virtually race against anyone as if they were right next to you.", 
        "tags": [
            "react", 
            "flux", 
            "python", 
            "django", 
            "arduino", 
            "sqlite", 
            "mongodb", 
            "socket.io", 
            "node.js"
        ], 
        "url": "https://devpost.com/software/run-with-me-9kcxal", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nSolve the problem of confusing and difficult to see or read parking signs.\n\nHow we built it & What it does\n\nWe built an Ionic mobile application that presents the user with a single button.  When the user presses the button we get their GPS coordinate and send it to our server.  Our server resolves their location to an address using the Google Maps API, we then query the Baltimore Open Data's Residential Parking data to find the parking restrictions for that street.  We then parse these restrictions and validate that any conditions are met and then let the user know if they can park there, and present them with easy to read restrictions, exceptions, and whether or not they can park there.\n\nChallenges we ran into\n\nGetting google maps to work in ionic\n\nAccomplishments that we're proud of\n\nIt works!\n\n\n\n        \n    Built With\n\n    google-mapsionic-2apachenode.jsexpress.jsdotenvrequestherokubaltimore-open-data-api\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 5, 
        "members": [
            "jeremyruroede", 
            "malexanderboyd", 
            "dprops2"
        ], 
        "name": "ParkMore", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/259/datas/small.png", 
        "slug": "parkmore-u5zj2b", 
        "tagline": "A street parking verification app for free city parking", 
        "tags": [
            "google-maps", 
            "ionic-2", 
            "apache", 
            "node.js", 
            "express.js", 
            "dotenv", 
            "request", 
            "heroku", 
            "baltimore-open-data-api"
        ], 
        "url": "https://devpost.com/software/parkmore-u5zj2b", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      Website screencap\n    \n  \n    \n    \n      System Diagram\n    \n  \n    \n    \n      System Diagram\n    \n\n    \n\n\n\n      \n  Inspiration\n\nI moved to Baltimore 2 months ago and am responsible for my apartment's water bill. I had trouble tracking down how to redirect the physical bill to my location, and was surprised to learn the city doesn't support electronic accounts or email billing at all. I'm also a lazy programmer so I wanted this automated reminder every month.\n\nWhat it does\n\nYou go to www.charmcitywaterbiller.com (yes I bought a domain yesterday just for this :) and sign up. That's it! The system will record your information and email you every time your bill is posted (monthly). You can sign up for multiple addresses with the same email if you want.\n\nHow I built it\n\nI wrote a wrapper that crawls the Baltimore City water bill website, and exposes the bill through an API tied to an AWS Lambda function. Now anyone can query the website using this API call. I wrote several other API calls using Lambda functions that do the following: /Subscribe an email to a water bill account, /Run the crawler and email all subscribers if the bill was updated. The database is stored in DynamoDB in 3 tables.  The website is run from S3.\n\nChallenges I ran into\n\nDynamo is still a newer service, and APIs are still a little low level. I spent too much time focusing on the CRUD aspects of emails and bill data that could have been spent on some stretch goals I had (like text notifications through Nexmo, email confirmation, unsubscribing, and pretty-ifying the email you receive)\n\nAccomplishments that I'm proud of\n\n\nI built the entire project within this weekend, and it is a fully functional live website that met my MVP goals (anyone can go to the site and sign up right now)\nThe project is built and deployed every commit to master using GitLab and Terraform. What this means is I have a scalable, data-backed solution with CI and CD without spinning up a single server\nSince it's a low frequency API, it will fall under AWS' free tier and be free for me. As a bonus, it's built on js and .NET Core, so it's 100% cross platform. Check out the code on GitLab - you can see the continuous deployment pipelines as well. Please note this project and it's 36+ commits are all in the feature/local branch on GitLab. Once I move this to \"production\" I will merge to master.\n\n\nWhat I learned\n\n\nDynamoDB needs a higher level API wrapper (at least for .NET)!\nServerless development is incredibly fun. Setting up an API that has inherent ability to accept 100s of requests a second (barring your actual logic)\n\n\nWhat's next for Charm City Water Biller\n\n\nUse Nexmo and have users opt in for text notifications\nAdd confirmation and unsubscription workflows and API endpoints\nClean up some of CI/CD automation - some hacks in there to tie things together\nAdd better formatting to the email\nClean up deployment for \"production\" - some hand rolled things can easily be removed\nOffer some data analysis - after all this records every account every month. There are a lot of interesting options here - one that comes to mind is mapping the highest \"delinquent\" accounts by neighborhood.\n\n\n\n\n        \n    Built With\n\n    amazon-dynamodbamazon-lambdagitlabterraformc#\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.charmcitywaterbiller.com\n\n        \n  \n  gitlab.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "ryanhall"
        ], 
        "name": "Charm City Water Biller", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/236/datas/small.PNG", 
        "slug": "charm-city-water-biller", 
        "tagline": "Want your water bill emailed every month? The city doesn't provide that but Charm City Water Biller does!", 
        "tags": [
            "amazon-dynamodb", 
            "amazon-lambda", 
            "gitlab", 
            "terraform", 
            "c#"
        ], 
        "url": "https://devpost.com/software/charm-city-water-biller", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Hackathon ReadMe\n\nProject Scope\n\n\nLeafTrack is an online community created by Quierra Wells, Ethan, and Durul,and app focused on facilitating connections between marijuana producers, medical practitioners, and patients. Users can check product prices, type and description of the product through the application. LeafTrack is for patients who want to find the best medical marijuana strain for specific ailments, such as menstrual cramps, depression, autism, and addiction.  With LeafTrack patients can easily find the medical professionals and schedule a consultation in a matter of seconds!\nThe purpose of this project is to offer aid in the relief efforts for Baltimore's opioid epidemic. The application offers patients listing of products and doctors that specialize in medicinal marijuana therapy. The information in the app offers a localized listing of medical practitioners, dispensaries, and products within Baltimore.\nLeafTrack is an app focused on facilitating connections between medical marijuana producers, medical practitioners, and patients. Users can check prices, view product description, and request a consultation through application.\n\n\nPlatform / Eco-System\n\nWebSite for public information disclosure & blog site\n\n\nDomain name owned\nInternet Webserver Hosting site\nWordpress Version: 4.7.4 \nWordpress plugins: Disable Comments, JetPack, My Private Site, RSS Importer, External Links, Wordfence Security \n3than as webmasters\nhttp://greenleafnetwork.org/\n\n\nWebsite Details\n\n\nWebsite:\nExplores the history of Medical Cannabis\nKeeps up with the latest cannabis news \nConnects with the community via social media and slack http://greenleafnetwork.slack.com\nWebsite is built using a responsive Wordpress template\n\n\nMobile app for iOS\n\n\nDurul as developers\n\n\nMobile app Details\n\n\nHome Tab provides information about the availability of a product using your location\nCompanies Tab gets a paginated list of producers\nMap allows you to find local dispensaries\nSee a localized list of doctors and and schedule a consultation\nLoosely utilizes free version Cannabis Reports API. \n\n\nMobile app API Details\n\n\nCannabis Reports Cannabis API https://www.cannabisreports.com/api\n\n\nMobile app Requirements\n\n\nSwift 3.0+\niOS 8.0 or later\nXcode 8\nDeployment Target = iOS 10.3\nBase SDK = iOS 9.3\nwatchOS support \ntvOS support\n\n\nSelf-subscribe to our MailChimp Newsletter\n\n\nhttp://eepurl.com/bVuSYz\nhttps://mailchimp.com\npostmaster is 3than\n\n\nTwitter account for marketing and social postings\n\n\nhttps://twitter.com/greenleaf_net\npostmaster is 3than\n\n\nProject Name\n\nGreenleaf Network for the project and website url\nLeafTrack for the iOS app\n\nTeam Members and Roles\n\n\nEthan - Project Management, Lite Code, Lite HTML - Slack: https://baltimorehackathon.slack.com/team/3than\nQuierra - Augmentity Reality / Unity3d - Slack: https://baltimorehackathon.slack.com/team/qwells\nDurul - Coder - Slack: https://baltimorehackathon.slack.com/team/durul\n\n\neMail addresses\n\nThe following email addresses are valid.  \n\n\nabuse@greenleafnetwork.org\ngreenleafnetwork@greenleafnetwork.org\nhostmaster@greenleafnetwork.org\nnewsletter@greenleafnetwork.org\npostmaster@greenleafnetwork.org\nCurrently all of these addresses are being redirected to 3than\n\n\nOwnership - This is a community project co-owned by those team members who contribute to the final submitted project\n\n\nCopyright - All trademarks and registered trademarks are the property of their respective owners.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n        \n    Built With\n\n    swiftiostvoswatchos\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 4, 
        "members": [
            "durul", 
            "quierrawells"
        ], 
        "name": "LeafTrack", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzM2NC9kYXRhcy9vcmlnaW5hbC5wbmc=/leaftrack-01.png?signature=0cb8fcc257c753b687a871a9ada452610635aa2a", 
        "slug": "hackathon-gvz27h", 
        "tagline": "LeafTrack is an mobile app focused on facilitating connections between marijuana dealer, practitioners, and patients.", 
        "tags": [
            "swift", 
            "ios", 
            "tvos", 
            "watchos"
        ], 
        "url": "https://devpost.com/software/hackathon-gvz27h", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  infest\n\nProvides an API for the Baltimore City Recent Food Establishment Closures page \nhere\n\nThe application scrapes data from the page periodically and exposes that information in a queryable REST api.\n\nAs of early 2017, this particular data is not exposed on the Open Baltimore Portal, and having this data easily accessible\nwill enable a wider variety of civic hacking the future. Examples could include notification systems, search engines/food review\nintegrations, and geographic visualizations\n\nusing\n\nThe app is deployed here\n\nThe valid url params are as follows:\n\n\nper_page - the number of results returned per page - default is 20\npage - the page offset - default is 1\nsort - accepts lowercase param names followed by either \".asc\" or \".desc\" (e.g. \"closuredate.desc\")\nname - filters for an exact match on the name field\nstartDate - shows all records for which closuredate is after the given date. Format is m/d/yyyy\nendDate - shows all records for which closuredate is before the given date. Format is m/d/yyy\nreason - does a full text search in the reason field for the given item\n\n\nrunning\n\nThe below environment variables must be set for the app to run. Defaults are given as well.\n\n\nCLOSURES_URL - the url of the health department page with the restaurant closures\nCLOSURES_SCHEDULE - a schedule compatible with the robfig/cron library. Default is every minute.\nPORT - the port that the application will run on\nGO_ENV - Either \"development\" or \"production\" depending on the environment. Default is development if unset.\n\n\n\n\n        \n    Built With\n\n    go\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "jboverfelt"
        ], 
        "name": "infest", 
        "photo": null, 
        "slug": "infest", 
        "tagline": "An API for Baltimore City Restaurants closed down for health code violations", 
        "tags": [
            "go"
        ], 
        "url": "https://devpost.com/software/infest", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      paper\n    \n  \n    \n    \n      login\n    \n  \n    \n    \n      dashboard\n    \n  \n    \n    \n      forms\n    \n  \n    \n    \n      form1\n    \n  \n    \n    \n      form2\n    \n\n    \n\n\n\n      \n  Agency Portal\n\nThe agency portal is a solution to 3 process-specific problems faced by the General Services agency of Baltimore City. It is a form intake portal and processing system that employees can use to submit professional development training requests, perform reviews and approvals, track status and initiate the procurement process for trainings or professional development in a way that is paperless and reportable.\n\nInspiration\n\nThe agency has a number of paper-based processes that are entirely inefficient.  The training request is an example, and is the subject of this prototype.  Employees routinely make time-sensitive requests for professional development, but employees, supervisors, and agency directors have no information about the overall performance of the process and therefore are unable to measure or improve it. Today, this request involves 4 to 5 people handing off a single piece of paper for signatures.  The process is not standardized and can take anywhere from 2 days for approval to 2 months if the paper is lost or hidden in a pile on someone's desk.   The move to an electronic system will allow us to use data from individual events to manage the process to bring predictability, tracking, reporting, and allow us to use this information to do the following:\n\n\nuse historical data about the type of training requests to inform our HR department about the patterns in training needs by division to take planning action\nuse historical data about dollar values of training request by division and by activity to more accurately inform the budget projections and budget development process for each fiscal year\nuse this data to identify instances in which multiple staff people across different divisions who don't know each other request the same type of training that could be purchased for a cheaper price if we are aware of these request and can coordinate and get a better deal. \nuse the data to develop tack time standards for process actors \nuse this data to answer questions we cannot today about who has what training needs and what is the volume annually and how do training requests match up with (or not) the direction HR and the director want to move the organization in terms of human capital development.\n\n\nWhat it does\n\n\nAllow users to submit a training request. \nAllow users to see their submissions, and the status of those submissions\nAllow supervisors to review training requests. \nAllow users to see their requests for professional development as well as the forms they are required to act on that were submitted by their direct reports.\nIt provides high level summary information for each user on all professional development requests\n\n\nHow we built it\n\n\nJavaScript\nNode & NPM\nExpress\nMongodb\nWebpack\nWebpack Dev Server\nReact\nReact Router\nBabel\nGriddle React\nReact Bootstrap\n\n\nChallenges we ran into\n\nOne of Brian's personal development goals was to build something using \"bare\" technologies.  There are many out of the box solutions and starter kits for using a particular technology stack, especially related to React, but I feel that when I use those things, I am only working toward the goal, rather than enriching my own knowledge of how the base technologies work.  I used all of the technologies listed above in their \"natural\" state, and did not rely on the 3rd party libraries to manage them.  About a third of my time was spent learning how to use the technologies I wasn't already familiar with on their own.  This was challenging for me because I essentially only had 24 hours to implement a prototype, and I was stressing out trying to learn these familiar technologies on their own.\n\nWe did not have enough time to implement all of the base functionality we originally intended.\n\nAccomplishments that we're proud of\n\nBrian built some awesome shit in an extremely short period of time!  In less than 48 hours of work I can see the beginnings of a solution that can fix a problem my agency has faced for years.  It is a problem many agencies have.   I am also proud that it will be openly available to other municipal employees that have similar challenges with small paper form processes that are used often. \n\nI think we were able to accomplish as much as we did in 24 hours as a result of employing the concepts of data-driven development (among other things, such as great communication between us).  Step One was understanding the requirements, modeling the data, then building out all data structures before any other development was done.  These well thought-out data structures proved to be invaluable for rapid prototyping and \"natural\" feeling flows in the code.\n\nI am also proud of building a working prototype using from scratch using the above technology stack.  This increases my understanding of how these technologies work as well as reducing dependencies and overhead.\n\nWhat we learned\n\n\nHow to think about structuring data you will use to inform how you build an application. \nHow to think about capturing records and properties of a record more easily in Mongodb. \nSyntax and more efficient ways for using if statements. \nHow to build a web application with the selected technology stack from scratch\n\n\nWhat's next for Agency Portal\n\n\nBetter code structure\nBetter use of the existing libraries\nDeveloping notifications to task actors based on submission and failure to complete tasks within set timeframes. \nAllowing supervisors to approve or reject and for requestors to be informed of the action and reasons. \nAllowing purchasers to perform approval task after supervisor approval.\nAllowing for uploading attachments with submissions so that a supervisor has all information necessary for review and purchaser has all information needed for payment.\nField test...?\n\n\n\n\n        \n    Built With\n\n    javascriptnode.jsmongodbreactbootstrap\n  \n\n        \n    Try it out\n\n    \n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "brianpandress", 
            "brl1906"
        ], 
        "name": "Agency Portal", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/173/datas/small.png", 
        "slug": "agency-portal", 
        "tagline": "Give the Department of General Services a way to handle training requests and other paperwork digitally.", 
        "tags": [
            "javascript", 
            "node.js", 
            "mongodb", 
            "react", 
            "bootstrap"
        ], 
        "url": "https://devpost.com/software/agency-portal", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n        \n    \n\n\n\n      \n  Inspiration\n\nThere is lack of arts and enrichment education in Baltimore City Schools. My company 'Kariz Kids Youth Enrichment Services' have been serving youth in the community since 2011. The purpose of our youth program is to teach kids about the fundamentals of the music business incorporating financial literacy and music production. After 6+ years of teaching this curriculum in schools, we recently began facing challenges in funding. This challenge is a refection of City Schools and organizations falling victim to city budget cuts resulting in the lack of creative outlets for youth. This Application would make our services become more affordable and accessible  by schools thus exposing this platform to more youth and encouraging them to be creative while polishing math skills, and vocabulary. \n\nHow Does It Work?\nTheres a Digital Audio Workstation Interface. \nUser answers math questions. Each question is worth a certain amount of credit (money). \nThis credit is used to purchased instruments and sounds.\nThese sounds are in loop form. After the word problem is answered correctly, money deposits into the users account.\nThese funds are used to purchase a maximum of 8 different audio tracks and one empty audio track to record vocals. The goal is to answer enough Math questions correct in order to complete the recording of a song.\n\nThe Progress:\n\nTeam Abilities:\nKariz: Music Producer / Youth Educator/ Founder of Kariz Kids Youth Enrichment Services. \nDrew: web developer bootcamp grad Javascript / JQuery  / HTML / CSS\nAllen: Javascript / JQuery  / HTML / CSS\n\nHow I built it\n\nHow was it Built: We built a web app using the HTML5 web audio API to play audio, update the DOM, and record audio. We pulled in the Buzz JS library to merge two audio files in the browser, allowing the user to record an audio track on top of our prerecorded audio.\n\nWhat's next for Math+Music=Money\n\nWhats Next?\nUltimately we would like to have several different tempo's, loop's and instruments to choose from. There will be an export option for the final song. There will also be an option that will give listeners an opportunity to purchase the song. All proceeds go directly to the user (the youth that created the song). \n\n\n\n        \n    Built With\n\n    javascriptjquerycss3html5\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 1, 
        "members": [
            "karizmarcel", 
            "drewswinburne", 
            "atsong09"
        ], 
        "name": "Math+Music=Money ", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzE2NC9kYXRhcy9vcmlnaW5hbC5wbmc=/MMM_GREEN_LOGO_NEW.png?signature=fbf4ee16f3fa39becacceb6f4d5627e49fa01864", 
        "slug": "math-music-money", 
        "tagline": "Educate, Produce A Song, Make Some Cash", 
        "tags": [
            "javascript", 
            "jquery", 
            "css3", 
            "html5"
        ], 
        "url": "https://devpost.com/software/math-music-money", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nWe wanted to see if we could generate a heatmap and render it on a site if we supplied the data, and we could! So we used that ability to make a heatmap of vacant houses to be able to better visualize the different neighborhoods of Baltimore.\n\nWhat it does\n\nIt renders a heatmap of vacant houses in Baltimore.\n\nHow we built it\n\nWe have a simple HTML webpage with a Javascript portion that gets the info and renders the heatmap\n\nChallenges we ran into\n\nWe wanted to further implement NodeJS and React frameworks but time constraints only allowed us to learn about them.\n\nAccomplishments that we're proud of\n\nWe managed to get something hosted and working!\n\nWhat we learned\n\nWe learned how to host websites on GitHub, how to use HTML and Javascript, and we started learning how to use NodeJS and other Javascript frameworks.\n\nWhat's next for Vacant-House-Heatmap\n\nPerhaps we could add information for other cities, or compare two heatmaps for different statistics in order to draw correlations about the Baltimore community.\nhttps://dendygar.github.io/Vacant-House-Heatmap/\n\n\n\n        \n    Built With\n\n    javascripthtmlgoogle-mapsheatmap\n  \n\n        \n    Try it out\n\n    \n        \n  \n  dendygar.github.io\n\n        \n  \n  github.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "dendygar", 
            "kevinp2", 
            "goughjames45"
        ], 
        "name": "Vacant-House-Heatmap", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/506/159/datas/small.png", 
        "slug": "vacant-house-heatmap", 
        "tagline": "Creates a heatmap for vacant houses in Baltimore", 
        "tags": [
            "javascript", 
            "html", 
            "google-maps", 
            "heatmap"
        ], 
        "url": "https://devpost.com/software/vacant-house-heatmap", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nBlack Lives Matter chapters in the country have been working on ways to make police accountability more accessible. We wanted to also provide a resource for undocumented immigrants related to ICE and other immigration officials. \n\nWhat it does\n\nCCC Watch provides a hub of mapping resources for police accountability and personal safety. It lists a person's rights when dealing with the police. The main functionality comes from the three maps. We have a resource map that integrates Google Maps to help inform people of law and harm reduction organizations in the area. We have an Incident Map that uses an Ushahidi deployment to allow users to dynamically map and report incidents as well as include a right-up, images, and video describing it. Finally, the story map allows users to create a crowdsourced oral history of Baltimore, similar to the Ushahidi deployment, but more general in scope for any stories users want to tell.\n\nHow we built it\n\nWe used SquareSpace and HTML5+CSS to get a site off the ground. Sourcing various copwatch orgs, we created a page of rights relating to arrests. Then, using GIS and GoogleMaps, we used JavaScript to create the resource map. Ushahidi provided a platform for us to create a crowdsourced map deployment. Finally the story map is similar in function to the Ushahidi deployment, using StoryMapJS.\n\nChallenges we ran into\n\nGIS broke a lot. Initially this project started as an app, but Android Studio was a disaster (we also had no prior experience with app building)\n\nAccomplishments that we're proud of\n\nThe visual design of the website and our Google Maps integration! The site is also intentionally bare bones, so that it can be easily accessed even when internet is limited.\n\nWhat we learned\n\nProbably don't set out to create an app when neither of you has experience, the program keeps crashing, and you only have 24 hours.\n\nWhat's next for CCC Watch\n\nExpand the Ushahidi deployment. Embed all the maps into the site so that every component is centralized. Maybe actually develop the app. Work out registration/privacy features. Auto moderation.\n\n\n\n        \n    Built With\n\n    squarespacegoogle-mapsushahidistorymapshtml5cssjavascripttwo-good-brains\n  \n\n        \n    Try it out\n\n    \n        \n  \n  www.cccwatch.org\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "athomp11", 
            "isabelag19"
        ], 
        "name": "CCC Watch", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzE1NS9kYXRhcy9vcmlnaW5hbC5wbmc=/ccceye.png?signature=4144b3ecffc4149d9f7a753c948390a4aec4c6bf", 
        "slug": "ccc-watch", 
        "tagline": "A Baltimore accountability hub", 
        "tags": [
            "squarespace", 
            "google-maps", 
            "ushahidi", 
            "storymaps", 
            "html5", 
            "css", 
            "javascript", 
            "two-good-brains"
        ], 
        "url": "https://devpost.com/software/ccc-watch", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nI noticed that on Reddit, there are some subreddits that are filled with good stories. You probably don't want to miss any of these, and I thought about how to make the average Reddit user be up to date on their subs. Thus, RedditSMS was born.\n\nWhat it does\n\nThis web app has two parts:\n\nThe first, is a web based realtime feed. You can enter the subreddit you want to monitor in the text box and then click the button to change the active sub.\n\nThe second is in the SMS tab in the nav bar. It takes your phone number and subreddit you want to subscribe to and texts you twice when a new post is added to the subreddit, the first letting you know that a new post is there, and the second supplying a link to that post. \n\nHow I built it\n\nI built the entire front end over the weekend using HTML, Javascript, Bootstrap and CSS. For the server side, I had a friend build it for me.\n\nChallenges I ran into\n\nThe first couple of challenges were implementing the API, and making sure everything worked, then formatting to page so everything looks right, and then implementing the ruby web server.\n\nWhat I learned\n\nThat the best things take time. It took me 2 years to learn everything for this app to work right, and I'm proud of myself.\n\nWhat's next for RedditSMS\n\nGluing the front end and the back end together, because they aren't right now.\n\nWhere to demo\n\nGo to redditsms.tk!\n\n\n\n        \n    Built With\n\n    rubyrubygemshtml5cssjavascriptjquerybootstrap\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "trianreallyhard"
        ], 
        "name": "RedditSMS", 
        "photo": null, 
        "slug": "redditsms", 
        "tagline": "A user-defined subreddit new post feed, sent to your phone!", 
        "tags": [
            "ruby", 
            "rubygems", 
            "html5", 
            "css", 
            "javascript", 
            "jquery", 
            "bootstrap"
        ], 
        "url": "https://devpost.com/software/redditsms", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      The Music Thing\n    \n\n    \n\n\n\n      \n  Inspiration\n\nThe human drive to make and conduct music!\n\nWhat it does\n\nThe Music Thing allows a conductor to conduct orchestral sound; a DJ to scratch a record; A soloist to play with the wave of a hand, and a viewer to enjoy colorful music visualization.\n\nHow we built it\n\nThis project incorporates the Web audio API, the Leap Motion Javascript SDK, the Three.js WebGL library, and Reveal.js\n\nChallenges we ran into\n\nTrying to get it work cross platform (desktop and iPad)  was a challenged; resolved by using MP3 files, which seem to work in any browser;\nTrying to find a way to slow down music without changing the pitch; resolved via granular synthesis, and a library called soundtouch.js\n\nAccomplishments that we're proud of\n\nGetting it to work! It's fun, and satisfies the human drive to conduct music.\n\nWhat we learned\n\nEach of us learned different skills; Chris solved the cross-platform and speed/pitch issues above. Margie delved into the Leap Motion API and \"branding.\" Kathleen got to wade into WebGL and three.js\n\nWhat's next for The Music Thing\n\nMaybe someone can start a band with it.... Also, everything is in an iFrame in the slideshow, so it's easy to incorporate new creative initiatives.\n\n\n\n        \n    Built With\n\n    web-audio-apileap-motionjavascriptthree.js\n  \n\n        \n    Try it out\n\n    \n        \n  \n  the-music-thing.com\n\n    \n  \n\n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "mroswell", 
            "chrisuehlinger", 
            "kmzrk"
        ], 
        "name": "The Music Thing", 
        "photo": "https://firefly-challengepost.netdna-ssl.com/usercontent/fill/242/161/cGhvdG9zL3Byb2R1Y3Rpb24vc29mdHdhcmVfdGh1bWJuYWlsX3Bob3Rvcy8wMDAvNTA2LzE0NS9kYXRhcy9vcmlnaW5hbC5wbmc=/Screen_Shot_2017-04-30_at_10.58.17_AM.png?signature=634521f24b3d061281257e0f38b45110fb4b5302", 
        "slug": "the-music-thing", 
        "tagline": "Everyone wants to be a conductor :)", 
        "tags": [
            "web-audio-api", 
            "leap-motion", 
            "javascript", 
            "three.js"
        ], 
        "url": "https://devpost.com/software/the-music-thing", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n            \n              \n                \n\n\n              \n            \n\n          \n    \n    \n      Bottom of History Flip\n    \n  \n    \n    \n      The fort is printing!!!\n    \n  \n    \n    \n      One of our modles that didnt get implemented in the final design\n    \n  \n    \n    \n      Its got buildings!\n    \n  \n    \n    \n      The finished Print\n    \n  \n    \n    \n      Not built yet and with the wrong base .\n    \n\n    \n\n\n\n      \n  Inspiration\n\nHow many of you have gone to Universal Studios and done the Harry Potter thing? Did you bring back your wand and then everyone ooed and awed about it. Right? Well, We wanted to do this with History. The inspiration for this project came from my volunteer experience with the Ft McHenry Jr. fife and drum corp at the Star Bangled Banner Spectacular a few years ago.  During my time there, I loved the being part of the history and making history come alive for the visitors. Unfortunately, that was not always possible, since most of the special events only happen on the weekend or during holidays. You can see the actual historical location but that is it. The plaques truthfully are not really that enticing to visitors. Bella and I wanted to take that experience and allow the visiting families to have a fun time even when there may not be live reenactors present. We wanted to highlight the best part of the park, plus reinforce the idea of why this particular park was chosen to be a monument or a National park. We wanted to make the everyday history magical and powerful as well as a neat experience that people wanted to take back home with and share all that they learned about with their friends and family in an amazing way.  So we bring you the exciting world of History Flip! Where we literally flip how you experience and learn about history. \n\nWhat it does\n\nHistory Flip is a physical souvenir with a \"magical\" twist! Users can buy this at the visitor center at a historical site or museum. Once they get the figure there is a hidden feature to be discovered on the flipside. Our model is of Ft. McHenry, Star Bangled Banner edition. Once you buy it, you can download the History Flip app and explore the world of Augmented Reality of 1812. The History Flip presents to the user with the historical facts and games to enhance the experience.\n\nHow we built it\n\nClaire: I took care of the hardware side of things and created the physical figure that people see. I used 123D Design to create the 3D printed model of the fort. I used Inkscape to create the picture on the bottom that later got laser cut. I found and configured the flag animation from the Unity Asset Store and prepared it for use in our app.\n\nBella: Originally, I planned to make an Android app with Android Studio and use Open CV (computer vision) for image recognition. I'd never used Android Studio before, though, and after hours of struggling, I decided to try to use Unity instead. I implemented Vuforia, an augmented reality platform, with Unity to build an Android app from scratch.\n\n\n\n        \n    Built With\n\n    android-studiounityvuforia3dprintinglasercuttingaugmented-realityinkscape123ddesign\n  \n\n      \n    ", 
        "has_video": true, 
        "like_count": 2, 
        "members": [
            "clairesmi99", 
            "bpalumbi"
        ], 
        "name": "History Fl!p", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/506/366/datas/small.png", 
        "slug": "history-flip", 
        "tagline": "Physical and Augmented Reality History Education Device ", 
        "tags": [
            "android-studio", 
            "unity", 
            "vuforia", 
            "3dprinting", 
            "lasercutting", 
            "augmented-reality", 
            "inkscape", 
            "123ddesign"
        ], 
        "url": "https://devpost.com/software/history-flip", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  Inspiration\n\nWe wanted to make a game for the longest time, but never got  the chance to do it. Now, with this hackathon, we finally did it!\n\nWhat it does\n\nThis game is simple. The object is to stop the wheel when the arrow is on the black part. You do, get a point. you don't, try again.\n\nHow I built it\n\nWe used Corona SDK and Lua to develop this app. It was surprisingly easy.\n\nChallenges I ran into\n\nAt one point, we couldn't get the wheel to rotate, and making the button was a challenge in itself.\n\nAccomplishments that I'm proud of\n\nFinally having a mobile game that works!\n\nWhat I learned\n\nLua programming code, and Corona SDK basics.\n\nWhat's next for Quick Stop\n\nA menu, and some ad support.\n\n\n\n        \n    Built With\n\n    coronaluagimp\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "nidgesaeri", 
            "dordal"
        ], 
        "name": "Quick Stop", 
        "photo": null, 
        "slug": "quick-stop", 
        "tagline": "A small game about a wheel and a button.", 
        "tags": [
            "corona", 
            "lua", 
            "gimp"
        ], 
        "url": "https://devpost.com/software/quick-stop", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n\n\n\n      \n  xx\n\n\n\n      \n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "naliniananth"
        ], 
        "name": "xx", 
        "photo": null, 
        "slug": "safepod-71xvfe", 
        "tagline": "xx", 
        "tags": null, 
        "url": "https://devpost.com/software/safepod-71xvfe", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n  \n    \n    \n      \n    \n\n    \n\n\n\n      \n  When I finished the Girls Who Code summer immersion program in DC I got really inspired to have coding come into the natural world we live in, so I created NatureCoders. NatureCoders are little 3D printed \"robots\" that teach kids in elementary and middle school how to code with C++ and the Arduino by following along with a story. After the complete the project from the story they can take it outside and interact with the nature that's around them.\n\nThere is a website that will have the lessons on how to program your NatureCoder. The prototype of the bug was the hardest thing to make. The 3D printer did not want to print my template I had so the design had to change. \nNatureCoders is continuing to grow by adding other bugs that will teach kids how to code in a fun atmosphere. \n\n\n\n        \n    Built With\n\n    arduinoled3dprintingc++\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 5, 
        "members": [
            "clairesmi99"
        ], 
        "name": "NatureCoders", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/294/918/datas/small.jpg", 
        "slug": "naturecoders", 
        "tagline": "NatureCoders are little 3D printed robots bugs that teach kids in elementary and middle how to code.", 
        "tags": [
            "arduino", 
            "led", 
            "3dprinting", 
            "c++"
        ], 
        "url": "https://devpost.com/software/naturecoders", 
        "winner": true
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  Inspiration\n\nI just wanted to create a cute and fun toy for simple entertainment. Animated gifs are a popular type of content to share and are found all over the internet. Many gifs share a short video clip of a hilarious or interesting moment.\n\nWhat it does\n\nSimply copy your favorite gifs to the SD card, and turn it on! The Pi TV will play each animated gif in an endless slideshow fashion for hours of entertainment!\n\nHow I built it\n\nA Raspberry Pi drives a small touch LCD screen via the SPI interface. The Raspberry Pi reads gif files found on the SD card, and plays them in full screen mode in an endless slideshow. Mplayer was used for displaying the gif files. A custom 3D enclosure was printed to protect the device. It resembles an old fashioned TV with antenna, and the bright colors make it fun to look at.   \n\nChallenges I ran into\n\nDesigning my first 3D model for printing. I had to learn how to use Tinkercad for my 2-piece enclosure. Multiple print attempts had to be done to get it right. Also displaying the gifs in a clean way was difficult. I had to find the right video player that could display an animated gif, full screen, scale images, and could perform well even on the Raspberry Pi's limited performance.  \n\nAccomplishments that I'm proud of\n\nIt works! I learned how to use 3D modeling software and use a 3D printer.\n\nWhat I learned\n\nI learned how to use 3D modeling software and how challenging it is. I also learned how to use a 3D printer and the limitations that come with it. I learned how to use an LCD screen with my Raspberry pi.\n\nWhat's next for Pi Tv\n\nMake use of the \"touch\" part of my LCD touch-screen. It could be used to skip the current image or apply an interesting filter to the current image. \nI could also use the wifi module to download new images in the background. Images would be downloaded and cached on the SD card for better performance.\n\n\n\n        \n    Built With\n\n    raspberry-pilcd3dprintinglinuxwifi\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 0, 
        "members": [
            "finerrecliner"
        ], 
        "name": "Pi Tv", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/294/732/datas/small.jpg", 
        "slug": "pi-tv", 
        "tagline": "A  cute and fun mini TV that plays fun animated gifs.", 
        "tags": [
            "raspberry-pi", 
            "lcd", 
            "3dprinting", 
            "linux", 
            "wifi"
        ], 
        "url": "https://devpost.com/software/pi-tv", 
        "winner": false
    }, 
    {
        "class_name": "Software", 
        "comment_count": 0, 
        "description": "\n      \n    \n      \n\n          \n    \n    \n      \n    \n\n    \n\n\n\n      \n  http://obycode.com/screenshot.png\n\nInspiration\n\nWe were inspired by a desire to make use of the large screens in everyone\u2019s homes to view the day and control their smart homes. The goal is to make life easier and more comfortable for anyone with an Apple TV.\n\nWhat it does\n\nHomeLife is a beautiful home dashboard for your Apple TV where people can get a quick overview of their day, and easily control their homes. It gives users a quick glance at their day, showing items such as upcoming weather or calendar events in a timeline view. These timeline views pull historical and future events from various data sources, and then display it intuitively. Users can also get quick access to their smart home via mood buttons. The mood widget interacts with SmartThings to quickly set the right mood in your home. It can adjust lights, music, locks and more to just the right settings. Switch into away mode when you\u2019re on the way out, and it can turn off all lights. Switch into romance mood to dim the lights and play some Marvin Gaye. All of this works already in our prototype. Eventually, users would be able to add, delete, and rearrange their widgets to make it feel just right in their home.\n\nHow I built it\n\nTo build HomeLife, we started off with a top level design split into two sections. One for time based information, like weather, calendar events and security cameras, and the other for quick access to the things that we like to do often, such as controlling our music and setting the mood in our smart homes. Both of these sections would eventually have a large selection of potential \u201cwidgets\u201d, so that every HomeLife is perfectly customized for it\u2019s users. In the timeline, we have so far implemented weather, which pulls real data from the web and draws a nice line chart, and a camera module which shows a live feed as well as snapshots for the past. In the quick access section, we\u2019ve integrated with SmartThings to enable setting modes in the smart home, allowing users to control lights, music, locks, and more.\n\nChallenges I ran into\n\nWe ran into several challenges during this work. Anthony had not used Swift in a project before this work, but decided to take this chance to learn and become more comfortable with it. Both of us are new to developing on the Apple TV, so we had to learn about the new user interface elements and some differences from other iOS development. Integrating with SmartThings added another level of complexity. This required writing SmartApps to run in the SmartThings cloud to which HomeLife sends commands and requests. It took some extra effort to make sure all communication happened as expected. The other major issue that we have run into this morning is that the API we were depending on for weather data is now failing when we request the historical temperatures. We tried to work around this last minute, but were unable to come up with a solution in time.\n\nAccomplishments that I'm proud of\n\nWe are proud of the high-level design that we built. This design will allow us to easily add new widgets in the future with minimal changes to the existing programming. Creating a strong infrastructure will allow us to concentrate more on making additional widgets and on making them beautiful.\n\nWhat I learned\n\nBoth of us gained experience in developing on the Apple TV. Brice learned good practices in design and implementation from Anthony\u2019s professional experience. Anthony gained a lot of experience in Swift and is looking forward to using it more in the future.\n\nWhat's next for TV Dashboard\n\nGoing forward, we will continue to work on HomeLife. First, we will have to do some clean up on the last-minute rushed parts of the existing code. After that, we have several ideas for additional useful widgets to expand on this initial idea. When it\u2019s ready, we may pursue sale of HomeLife on the App Store.\n\nHomeLife was built with Swift in Xcode. The interface for SmartThings was built in Groovy.\n\n\n\n        \n    Built With\n\n    swifttvos\n  \n\n      \n    ", 
        "has_video": false, 
        "like_count": 1, 
        "members": [
            "anthonymattox", 
            "obycode"
        ], 
        "name": "Home Life", 
        "photo": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/295/051/datas/small.png", 
        "slug": "tv-dashboard", 
        "tagline": "A dashboard for your house powered by Apple TV", 
        "tags": [
            "swift", 
            "tvos"
        ], 
        "url": "https://devpost.com/software/tv-dashboard", 
        "winner": false
    }
]